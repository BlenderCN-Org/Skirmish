//
// FX Version: fx_5_0
//
// 4 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInverse;             // Offset:   64, size:   64
    float4x4 gWorldViewProjection;      // Offset:  128, size:   64
    float3  gEyePositionWorld;          // Offset:  192, size:   12
    DirectionalLight gDirLights[3];     // Offset:  208, size:  136
    PointLight gPointLights[4];         // Offset:  352, size:  188
    SpotLight gSpotLights[4];           // Offset:  544, size:  252
    float   gFogStart;                  // Offset:  796, size:    4
    float   gFogRange;                  // Offset:  800, size:    4
    float4  gFogColor;                  // Offset:  816, size:   16
    float4x4 gShadowTransform;          // Offset:  832, size:   64
}

cbuffer cbPerObject : register(b1)
{
    Material gMaterial;                 // Offset:    0, size:   24
}

cbuffer cbSkinned : register(b2)
{
    float4x4 gBoneTransforms[96];       // Offset:    0, size: 6144
}

cbuffer cbPerInstance : register(b3)
{
    float   gTextureIndex;              // Offset:    0, size:    4
}

//
// 10 local object(s)
//
DepthStencilState StencilEnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilDisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilLessEqualDSS
{
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2DArray gTextureArray;
Texture2D gNormalMap;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 25 technique(s)
    //
    technique11 PositionColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 45 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColor<6:NaN:Inf>
                
                #line 49
                mov o2.xyzw, v1.xyzw  // VSPositionColor<7,8,9,10>
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                mad r1.xyzw, -v2.xyzw, cb1[0].xyzw, cb0[51].xyzw
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r2.xyzw, v2.xyzw, cb1[0].xyzw  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[50].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                ret 
                // Approximately 11 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float       
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 55 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorI<6:NaN:Inf>
                
                #line 61
                mov o2.xyzw, v1.xyzw  // VSPositionColorI<7,8,9,10>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                mad r1.xyzw, -v2.xyzw, cb1[0].xyzw, cb0[51].xyzw
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r2.xyzw, v2.xyzw, cb1[0].xyzw  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[50].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                ret 
                // Approximately 11 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 76 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionColorSkinned<6:NaN:Inf>
                
                #line 80
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinned<7,8,9,10>
                ret 
                // Approximately 41 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                mad r1.xyzw, -v2.xyzw, cb1[0].xyzw, cb0[51].xyzw
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r2.xyzw, v2.xyzw, cb1[0].xyzw  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[50].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                ret 
                // Approximately 11 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float       
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 95 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorSkinnedI<6:NaN:Inf>
                
                #line 101
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinnedI<7,8,9,10>
                ret 
                // Approximately 44 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                mad r1.xyzw, -v2.xyzw, cb1[0].xyzw, cb0[51].xyzw
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r2.xyzw, v2.xyzw, cb1[0].xyzw  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                mad r0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[50].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                ret 
                // Approximately 11 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 126 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColor<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalColor<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 132
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColor<10,11,12,13>
                
                #line 128
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColor<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColor<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColor<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColor<17:NaN:Inf>
                
                #line 132
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 201 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r0.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r1.xyzx, r2.yyyy
                  mad r3.xyz, r1.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r5.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxxx, r1.xxyz
                  mad r3.yzw, r1.xxyz, cb0[46].wwww, r3.yyzw
                  add r0.xyz, r0.yyyy, r3.yzwy
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 221
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 226
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float       
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 138 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalColorI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 146
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorI<10,11,12,13>
                
                #line 142
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColorI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColorI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColorI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColorI<17:NaN:Inf>
                
                #line 146
                ret 
                // Approximately 23 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 201 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r0.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r1.xyzx, r2.yyyy
                  mad r3.xyz, r1.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r5.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxxx, r1.xxyz
                  mad r3.yzw, r1.xxyz, cb0[46].wwww, r3.yyzw
                  add r0.xyz, r0.yyyy, r3.yzwy
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 221
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 226
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 164 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalColorSkinned<14:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalColorSkinned<15:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalColorSkinned<16:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalColorSkinned<17:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalColorSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 170
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinned<10,11,12,13>
                ret 
                // Approximately 56 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 201 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r0.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r1.xyzx, r2.yyyy
                  mad r3.xyz, r1.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r5.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxxx, r1.xxyz
                  mad r3.yzw, r1.xxyz, cb0[46].wwww, r3.yyzw
                  add r0.xyz, r0.yyyy, r3.yzwy
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 221
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 226
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float       
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 188 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColorSkinnedI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColorSkinnedI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColorSkinnedI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColorSkinnedI<17:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalColorSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 196
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinnedI<10,11,12,13>
                ret 
                // Approximately 59 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 201 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r0.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r1.xyzx, r2.yyyy
                  mad r3.xyz, r1.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t0.xxxx, s0, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t0.xxxx, s0, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.xxxx
                  mad r4.xyz, r1.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r0.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r1.xyzx, r3.yyyy
                  mad r4.xyz, r1.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r5.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxxx, r1.xxyz
                  mad r3.yzw, r1.xxyz, cb0[46].wwww, r3.yyzw
                  add r0.xyz, r0.yyyy, r3.yzwy
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 221
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 218 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 226
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 305 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                
                #line 301 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[51].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[50].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 311
                mul o0.w, r0.w, cb1[0].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureRED
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 317 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf>
                
                #line 320
                mov o0.xyz, r0.xxxx  // PSPositionTextureRED<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureRED<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureGREEN
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 324 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.yxzw, s0  // litColor<1:Inf>
                
                #line 327
                mov o0.xyz, r0.xxxx  // PSPositionTextureGREEN<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureGREEN<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureBLUE
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 331 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.zxyw, s0  // litColor<2:Inf>
                
                #line 334
                mov o0.xyz, r0.xxxx  // PSPositionTextureBLUE<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureBLUE<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureALPHA
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 338 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.wxyz, s0  // litColor<3:Inf>
                
                #line 341
                mov o0.xyz, r0.xxxx  // PSPositionTextureALPHA<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureALPHA<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureNOALPHA
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 236 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 241
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 345 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyz, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTextureNOALPHA<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureNOALPHA<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float   x   
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 247 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureI<6:NaN:Inf>
                
                #line 254
                mov o2.xy, v1.xyxx  // VSPositionTextureI<7,8>
                mov o2.z, v6.x  // VSPositionTextureI<9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 305 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                
                #line 301 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[51].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[50].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 311
                mul o0.w, r0.w, cb1[0].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 269 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionTextureSkinned<6:NaN:Inf>
                
                #line 274
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinned<7,8>
                mov o2.z, cb3[0].x  // VSPositionTextureSkinned<9>
                ret 
                // Approximately 42 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 305 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                
                #line 301 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[51].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[50].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 311
                mul o0.w, r0.w, cb1[0].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 289 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureSkinnedI<6:NaN:Inf>
                
                #line 296
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinnedI<7,8>
                mov o2.z, v8.x  // VSPositionTextureSkinnedI<9>
                ret 
                // Approximately 45 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 305 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.x, r0.x, -cb0[49].w
                div_sat r0.x, r0.x, cb0[50].x  // fogLerp<0:[0f,1f]>
                
                #line 301 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 150 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[51].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[50].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 311
                mul o0.w, r0.w, cb1[0].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 357 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTexture<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTexture<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 364
                mov o3.xy, v2.xyxx  // VSPositionNormalTexture<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTexture<16>
                
                #line 359
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTexture<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTexture<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTexture<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTexture<15:NaN:Inf>
                
                #line 364
                ret 
                // Approximately 22 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 436 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r1.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r0.xyzx, r2.yyyy
                  mad r3.xyz, r0.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r0.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r5.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 181
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r1.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxyz, r1.xxxx
                  mad r3.yzw, r0.xxyz, cb0[46].wwww, r3.yyzw
                  add r1.xyz, r1.yyyy, r3.yzwy
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r0.xyz, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r0.xyzw, r0.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r0.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 456
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 461
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float   x   
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 370 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 379
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureI<10,11>
                mov o3.z, v7.x  // VSPositionNormalTextureI<16>
                
                #line 374
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureI<15:NaN:Inf>
                
                #line 379
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 436 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r1.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r0.xyzx, r2.yyyy
                  mad r3.xyz, r0.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r0.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r5.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 181
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r1.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxyz, r1.xxxx
                  mad r3.yzw, r0.xxyz, cb0[46].wwww, r3.yyzw
                  add r1.xyz, r1.yyyy, r3.yzwy
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r0.xyz, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r0.xyzw, r0.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r0.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 456
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 461
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 397 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalTextureSkinned<12:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalTextureSkinned<13:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalTextureSkinned<14:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalTextureSkinned<15:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 404
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinned<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTextureSkinned<16>
                ret 
                // Approximately 57 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 436 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r1.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r0.xyzx, r2.yyyy
                  mad r3.xyz, r0.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r0.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r5.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 181
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r1.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxyz, r1.xxxx
                  mad r3.yzw, r0.xxyz, cb0[46].wwww, r3.yyzw
                  add r1.xyz, r1.yyyy, r3.yzwy
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r0.xyz, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r0.xyzw, r0.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r0.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 456
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 461
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float   x   
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 422 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureSkinnedI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureSkinnedI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureSkinnedI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureSkinnedI<15:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 431
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinnedI<10,11>
                mov o3.z, v9.x  // VSPositionNormalTextureSkinnedI<16>
                ret 
                // Approximately 60 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 436 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 169
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.y, r1.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.w, l(0.000000), r2.y
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.y, r2.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r3.y, r2.y, r2.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r2.yz, r2.zzzz, r3.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xyz, r0.xyzx, r2.yyyy
                  mad r3.xyz, r0.xyzx, cb0[13].wwww, r3.xyzx
                  add r2.yzw, r2.zzzz, r3.xxyz
                  mul r2.yzw, r2.yyzw, cb0[13].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.xyz, r2.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.x, r2.x, r2.z
                
                #line 220
                  mul r2.x, r2.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r0.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r2.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[16].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[16].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 169
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[19].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[19].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r3.x, r3.x, r3.z
                
                #line 220
                  mul r3.x, r3.x, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[22].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[25].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[28].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 237
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r3.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 181
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.xxxx
                  mad r4.xyz, r0.xyzx, cb0[31].wwww, r4.xyzx
                  add r3.xyz, r3.yyyy, r4.xyzx
                  mul r3.xyz, r3.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r3.x, r3.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // d<0:NaN:Inf>
                  add r3.x, r3.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r3.x, r3.x, r3.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r0.w
                
                #line 337
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[36].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[34].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[34].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[40].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[38].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[38].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[44].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r3.y
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.y, r3.y, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.y, r3.w  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.yz, r3.zzzz, r4.xxyx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xyz, r0.xyzx, r3.yyyy
                  mad r4.xyz, r0.xyzx, cb0[42].wwww, r4.xyzx
                  add r3.yzw, r3.zzzz, r4.xxyz
                  mul r3.yzw, r3.yyzw, cb0[42].xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r4.xyz, r3.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r2.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 269
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r3.x, cb0[48].w, r3.x
                
                #line 169
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r5.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 181
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r1.xy, r3.zzzz, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.yzw, r0.xxyz, r1.xxxx
                  mad r3.yzw, r0.xxyz, cb0[46].wwww, r3.yyzw
                  add r1.xyz, r1.yyyy, r3.yzwy
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r0.xyz, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r0.xyzw, r0.xyzw, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r2.xyzw, r0.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 456
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 453 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 461
                ret 
                // Approximately 554 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangent
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 2
                
                #line 471 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangent<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangent<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangent<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangent<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangent<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangent<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangent<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureTangent<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangent<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangent<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangent<12:NaN:Inf>
                
                #line 479
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangent<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangent<19>
                
                #line 473
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangent<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangent<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangent<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangent<18:NaN:Inf>
                
                #line 479
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 8
                
                #line 560 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 100 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 104
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r3.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                  mul r4.x, r3.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r3.x, cb0[14].yzwy, r0.xyzx
                  add r3.x, r3.x, r3.x
                  mad r3.xzw, r0.xxyz, -r3.xxxx, cb0[14].yyzw
                  dp3 r4.z, r3.xzwx, r3.xzwx
                  rsq r4.z, r4.z
                  mul r3.xzw, r3.xxzw, r4.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r2.xyzx, r3.xzwx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.x
                
                #line 181
                  max r3.w, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.w
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.x, r3.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r3.yyyy, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xzw, r1.xxyz, r3.xxxx
                  mad r3.xzw, r1.xxyz, cb0[13].wwww, r3.xxzw
                  add r3.xyz, r3.yyyy, r3.xzwx
                  mul r3.xyz, r3.xyzx, cb0[13].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r4.x, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xxxx, s2, r4.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r5.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r4.yzyy, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r4.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r4.y, r4.y, r5.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r6.zwzz, t2.xxxx, s2, r4.w
                  add r4.y, r4.z, r4.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r4.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r5.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r4.xxxx, r5.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r3.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[17].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[17].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[16].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[16].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[20].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[20].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[19].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[19].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[22].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[25].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[28].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[31].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[36].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[36].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[36].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[36].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[36].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[34].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[34].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[40].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[40].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[40].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[40].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[40].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[38].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[38].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[44].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[44].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[44].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[44].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[44].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[42].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[42].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[48].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[48].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[48].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[48].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r0.xyz, r0.xyzx, -r4.xxxx, cb0[48].xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r2.xyz, r0.xxxx, r1.xyzx
                  mad r2.xyz, r1.xyzx, cb0[46].wwww, r2.xyzx
                  add r0.xyz, r0.yyyy, r2.xyzx
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r2.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r1.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 583
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r3.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 588
                ret 
                // Approximately 569 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 2
                
                #line 485 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v5.xyzw
                mad r0.xyzw, v0.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureTangentI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentI<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentI<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentI<12:NaN:Inf>
                
                #line 495
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentI<13,14>
                mov o4.z, v8.x  // VSPositionNormalTextureTangentI<19>
                
                #line 489
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentI<18:NaN:Inf>
                
                #line 495
                ret 
                // Approximately 27 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 8
                
                #line 560 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 100 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 104
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r3.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                  mul r4.x, r3.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r3.x, cb0[14].yzwy, r0.xyzx
                  add r3.x, r3.x, r3.x
                  mad r3.xzw, r0.xxyz, -r3.xxxx, cb0[14].yyzw
                  dp3 r4.z, r3.xzwx, r3.xzwx
                  rsq r4.z, r4.z
                  mul r3.xzw, r3.xxzw, r4.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r2.xyzx, r3.xzwx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.x
                
                #line 181
                  max r3.w, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.w
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.x, r3.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r3.yyyy, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xzw, r1.xxyz, r3.xxxx
                  mad r3.xzw, r1.xxyz, cb0[13].wwww, r3.xxzw
                  add r3.xyz, r3.yyyy, r3.xzwx
                  mul r3.xyz, r3.xyzx, cb0[13].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r4.x, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xxxx, s2, r4.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r5.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r4.yzyy, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r4.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r4.y, r4.y, r5.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r6.zwzz, t2.xxxx, s2, r4.w
                  add r4.y, r4.z, r4.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r4.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r5.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r4.xxxx, r5.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r3.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[17].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[17].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[16].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[16].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[20].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[20].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[19].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[19].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[22].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[25].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[28].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[31].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[36].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[36].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[36].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[36].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[36].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[34].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[34].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[40].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[40].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[40].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[40].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[40].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[38].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[38].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[44].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[44].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[44].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[44].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[44].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[42].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[42].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[48].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[48].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[48].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[48].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r0.xyz, r0.xyzx, -r4.xxxx, cb0[48].xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r2.xyz, r0.xxxx, r1.xyzx
                  mad r2.xyz, r1.xyzx, cb0[46].wwww, r2.xyzx
                  add r0.xyz, r0.yyyy, r2.xyzx
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r2.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r1.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 583
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r3.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 588
                ret 
                // Approximately 569 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 425
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 433
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r2.w, r4.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r3.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r3.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r3.w, r4.z, r4.y
                  ishl r3.w, r3.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r3.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r3.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r3.w + 2].xyzw
                  mad r1.xyz, r2.wwww, r5.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r3.w + 2].xyzx
                  mad r2.xyz, r2.wwww, r5.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r3.w + 2].xyzx
                  mad r3.xyz, r2.wwww, r5.xyzx, r3.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 431
                endloop 
                
                #line 516 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinned<6:NaN:Inf>
                dp4 o5.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentSkinned<15:NaN:Inf>
                dp4 o5.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentSkinned<16:NaN:Inf>
                dp4 o5.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentSkinned<17:NaN:Inf>
                dp4 o5.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentSkinned<18:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureTangentSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, r3.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinned<10:NaN:Inf>
                dp3 o3.y, r3.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinned<11:NaN:Inf>
                dp3 o3.z, r3.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinned<12:NaN:Inf>
                
                #line 524
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinned<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangentSkinned<19>
                ret 
                // Approximately 65 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 8
                
                #line 560 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 100 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 104
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r3.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                  mul r4.x, r3.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r3.x, cb0[14].yzwy, r0.xyzx
                  add r3.x, r3.x, r3.x
                  mad r3.xzw, r0.xxyz, -r3.xxxx, cb0[14].yyzw
                  dp3 r4.z, r3.xzwx, r3.xzwx
                  rsq r4.z, r4.z
                  mul r3.xzw, r3.xxzw, r4.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r2.xyzx, r3.xzwx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.x
                
                #line 181
                  max r3.w, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.w
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.x, r3.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r3.yyyy, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xzw, r1.xxyz, r3.xxxx
                  mad r3.xzw, r1.xxyz, cb0[13].wwww, r3.xxzw
                  add r3.xyz, r3.yyyy, r3.xzwx
                  mul r3.xyz, r3.xyzx, cb0[13].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r4.x, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xxxx, s2, r4.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r5.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r4.yzyy, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r4.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r4.y, r4.y, r5.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r6.zwzz, t2.xxxx, s2, r4.w
                  add r4.y, r4.z, r4.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r4.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r5.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r4.xxxx, r5.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r3.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[17].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[17].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[16].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[16].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[20].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[20].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[19].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[19].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[22].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[25].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[28].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[31].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[36].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[36].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[36].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[36].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[36].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[34].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[34].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[40].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[40].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[40].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[40].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[40].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[38].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[38].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[44].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[44].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[44].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[44].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[44].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[42].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[42].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[48].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[48].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[48].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[48].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r0.xyz, r0.xyzx, -r4.xxxx, cb0[48].xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r2.xyz, r0.xxxx, r1.xyzx
                  mad r2.xyz, r1.xyzx, cb0[46].wwww, r2.xyzx
                  add r0.xyz, r0.yyyy, r2.xyzx
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r2.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r1.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 583
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r3.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 588
                ret 
                // Approximately 569 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                // localTransform           0   xyzw        6     NONE  float   xyzw
                // localTransform           1   xyzw        7     NONE  float   xyzw
                // localTransform           2   xyzw        8     NONE  float   xyzw
                // localTransform           3   xyzw        9     NONE  float   xyzw
                // textureIndex             0   x          10     NONE  float   x   
                // SV_InstanceID            0   x          11   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 425
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 433
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r1.w, r4.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r2.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r2.w, r4.z, r4.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r5.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r2.w + 2].xyzx
                  mad r2.xyz, r1.wwww, r5.xyzx, r2.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 431
                endloop 
                
                #line 545 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r3.yyyy, v7.xyzw
                mad r0.xyzw, r3.xxxx, v6.xyzw, r0.xyzw
                mad r0.xyzw, r3.zzzz, v8.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v9.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinnedI<6:NaN:Inf>
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentSkinnedI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentSkinnedI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentSkinnedI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentSkinnedI<18:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureTangentSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, r2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinnedI<10:NaN:Inf>
                dp3 o3.y, r2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinnedI<11:NaN:Inf>
                dp3 o3.z, r2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinnedI<12:NaN:Inf>
                
                #line 555
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinnedI<13,14>
                mov o4.z, v10.x  // VSPositionNormalTextureTangentSkinnedI<19>
                ret 
                // Approximately 68 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 8
                
                #line 560 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 100 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 104
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 317 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r3.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                  mul r4.x, r3.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r3.x, cb0[14].yzwy, r0.xyzx
                  add r3.x, r3.x, r3.x
                  mad r3.xzw, r0.xxyz, -r3.xxxx, cb0[14].yyzw
                  dp3 r4.z, r3.xzwx, r3.xzwx
                  rsq r4.z, r4.z
                  mul r3.xzw, r3.xxzw, r4.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r2.xyzx, r3.xzwx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.z, l(0.000000), r3.x
                
                #line 181
                  max r3.w, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.w
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r4.y, r3.x, r3.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r3.xy, r3.yyyy, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r3.xzw, r1.xxyz, r3.xxxx
                  mad r3.xzw, r1.xxyz, cb0[13].wwww, r3.xxzw
                  add r3.xyz, r3.yyyy, r3.xzwx
                  mul r3.xyz, r3.xyzx, cb0[13].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r4.x, cb0[15].x, l(1.000000)
                
                #line 130
                  div r4.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r5.xyzw, r4.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xxxx, s2, r4.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r5.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r4.yzyy, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r4.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.zwzz, t2.xxxx, s2, r4.w
                  add r5.x, r5.y, r5.x  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r4.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.y, r6.xyxx, t2.xxxx, s2, r4.w
                  add r4.y, r4.y, r5.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r6.zwzz, t2.xxxx, s2, r4.w
                  add r4.y, r4.z, r4.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r4.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r3.w, r1.w
                  mul r5.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r3.xyzw, r4.xxxx, r5.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317
                else 
                  mov r3.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[17].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[17].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[16].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[16].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[18].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 169
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r4.x, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[20].yzwy, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[20].yyzw
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[19].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[19].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  eq r5.x, cb0[21].x, l(1.000000)
                
                #line 130
                  div r5.yzw, v5.xxyz, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                  add r6.xyzw, r5.yzyz, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t2.xxxx, s2, r5.w  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r6.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,2f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r5.yzyy, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,5f]>
                  add r7.xyzw, r5.yzyz, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.zwzz, t2.xxxx, s2, r5.w
                  add r6.x, r6.y, r6.x  // percentLit<0:[0f,7f]>
                  add r7.xyzw, r5.yzyz, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t2.xxxx, s2, r5.w
                  add r5.y, r5.y, r6.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.zwzz, t2.xxxx, s2, r5.w
                  add r5.y, r5.z, r5.y  // percentLit<0:[0f,9f]>
                
                #line 144
                  mul r2.w, r2.w, r5.y
                
                #line 220
                  mul r2.w, r2.w, l(0.111111)  // shadowFactor<0:NaN:Inf>
                  mov r4.w, r1.w
                  mul r6.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 216
                  movc r4.xyzw, r5.xxxx, r6.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 319
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 335
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[22].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[22].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[25].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[25].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[28].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[28].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 237
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  dp3 r4.w, r0.xyzx, -r4.xyzx
                  max r4.w, r4.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.x, l(0.000000), r4.w
                  mul r6.x, r4.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r4.w, r4.xyzx, r0.xyzx
                  add r4.w, r4.w, r4.w
                  mad r4.xyz, r0.xyzx, -r4.wwww, r4.xyzx
                  dp3 r4.w, r4.xyzx, r4.xyzx
                  rsq r4.w, r4.w
                  mul r4.xyz, r4.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 181
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r5.xxxx, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[31].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[31].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                  div r5.x, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 115
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 255
                  mov r4.w, r1.w
                
                #line 337
                  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 351
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[36].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[36].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[36].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[36].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[36].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[34].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[34].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[40].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[40].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[40].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[40].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[40].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[38].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[38].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[44].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[44].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[44].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[44].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r4.xzw, r0.xxyz, -r4.xxxx, cb0[44].xxyz
                  dp3 r5.z, r4.xzwx, r4.xzwx
                  rsq r5.z, r5.z
                  mul r4.xzw, r4.xxzw, r5.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xzwx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.x
                
                #line 181
                  max r4.w, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.w
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r4.x, r4.z  // specular<0:NaN:Inf>
                
                #line 171
                  and r4.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r4.xzw, r1.xxyz, r4.xxxx
                  mad r4.xzw, r1.xxyz, cb0[42].wwww, r4.xxzw
                  add r4.xyz, r4.yyyy, r4.xzwx
                  mul r4.xyz, r4.xyzx, cb0[42].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r4.xyz, r4.xyzx
                  mul r4.xyz, r4.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r4.xyz, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  mov r4.w, r1.w
                  and r4.xyzw, r2.wwww, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r3.xyzw, r4.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 269
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, cb0[48].xyzx
                  add r4.x, -|r2.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r2.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r2.w|, l(-0.212114)
                  mad r4.y, r4.y, |r2.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r2.w, r2.w, -r2.w
                  and r2.w, r2.w, r4.z
                  mad r2.w, r4.y, r4.x, r2.w
                  mul r2.w, r2.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.w, cb0[48].w, r2.w
                
                #line 169
                  dp3 r4.x, r0.xyzx, -cb0[48].xyzx
                  max r4.x, r4.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.x, cb0[48].xyzx, r0.xyzx
                  add r4.x, r4.x, r4.x
                  mad r0.xyz, r0.xyzx, -r4.xxxx, cb0[48].xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 181
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 179
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 171
                  and r0.xy, r4.yyyy, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 186
                  mul r2.xyz, r0.xxxx, r1.xyzx
                  mad r2.xyz, r1.xyzx, cb0[46].wwww, r2.xyzx
                  add r0.xyz, r0.yyyy, r2.xyzx
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r0.xyz, r0.xyzx
                  mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 272
                  and r1.xyzw, r1.xyzw, r2.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
                
                #line 353
                  add r3.xyzw, r1.xyzw, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 583
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 148 "IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -r3.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 580 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 588
                ret 
                // Approximately 569 instruction slots used
                            
            };
        }

    }

}

