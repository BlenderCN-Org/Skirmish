//
// FX Version: fx_5_0
//
// 4 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInverse;             // Offset:   64, size:   64
    float4x4 gWorldViewProjection;      // Offset:  128, size:   64
    float4x4 gShadowTransform;          // Offset:  192, size:   64
    DirectionalLight gDirLights[3];     // Offset:  256, size:  192
    PointLight gPointLight;             // Offset:  448, size:   80
    SpotLight gSpotLight;               // Offset:  528, size:   96
    float3  gEyePositionWorld;          // Offset:  624, size:   12
    float   gFogStart;                  // Offset:  636, size:    4
    float   gFogRange;                  // Offset:  640, size:    4
    float4  gFogColor;                  // Offset:  656, size:   16
    float   gEnableShadows;             // Offset:  672, size:    4
}

cbuffer cbPerObject : register(b1)
{
    Material gMaterial;                 // Offset:    0, size:   68
}

cbuffer cbSkinned : register(b2)
{
    float4x4 gBoneTransforms[96];       // Offset:    0, size: 6144
}

cbuffer cbPerInstance : register(b3)
{
    float   gTextureIndex;              // Offset:    0, size:    4
}

//
// 15 local object(s)
//
RasterizerState RasterizerSolid
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(BACK /* 3 */);
};
RasterizerState RasterizerWireFrame
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState RasterizerDepth
{
    DepthBias = uint(0x000186a0);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
};
RasterizerState RasterizerNoCull
{
    CullMode = uint(NONE /* 1 */);
};
DepthStencilState StencilEnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilDisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilLessEqualDSS
{
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
BlendState BlendAdditive
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[1] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[2] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[3] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[4] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[5] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[6] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[7] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(ONE /* 2 */);
    DestBlend[1] = uint(ONE /* 2 */);
    DestBlend[2] = uint(ONE /* 2 */);
    DestBlend[3] = uint(ONE /* 2 */);
    DestBlend[4] = uint(ONE /* 2 */);
    DestBlend[5] = uint(ONE /* 2 */);
    DestBlend[6] = uint(ONE /* 2 */);
    DestBlend[7] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    BlendOp[1] = uint(ADD /* 1 */);
    BlendOp[2] = uint(ADD /* 1 */);
    BlendOp[3] = uint(ADD /* 1 */);
    BlendOp[4] = uint(ADD /* 1 */);
    BlendOp[5] = uint(ADD /* 1 */);
    BlendOp[6] = uint(ADD /* 1 */);
    BlendOp[7] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    SrcBlendAlpha[1] = uint(ZERO /* 1 */);
    SrcBlendAlpha[2] = uint(ZERO /* 1 */);
    SrcBlendAlpha[3] = uint(ZERO /* 1 */);
    SrcBlendAlpha[4] = uint(ZERO /* 1 */);
    SrcBlendAlpha[5] = uint(ZERO /* 1 */);
    SrcBlendAlpha[6] = uint(ZERO /* 1 */);
    SrcBlendAlpha[7] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[1] = uint(ZERO /* 1 */);
    DestBlendAlpha[2] = uint(ZERO /* 1 */);
    DestBlendAlpha[3] = uint(ZERO /* 1 */);
    DestBlendAlpha[4] = uint(ZERO /* 1 */);
    DestBlendAlpha[5] = uint(ZERO /* 1 */);
    DestBlendAlpha[6] = uint(ZERO /* 1 */);
    DestBlendAlpha[7] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    BlendOpAlpha[1] = uint(ADD /* 1 */);
    BlendOpAlpha[2] = uint(ADD /* 1 */);
    BlendOpAlpha[3] = uint(ADD /* 1 */);
    BlendOpAlpha[4] = uint(ADD /* 1 */);
    BlendOpAlpha[5] = uint(ADD /* 1 */);
    BlendOpAlpha[6] = uint(ADD /* 1 */);
    BlendOpAlpha[7] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerFont
{
};
SamplerComparisonState SamplerShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2DArray gTextureArray;
Texture2D gNormalMap;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 23 technique(s)
    //
    technique11 PositionColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 49 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColor<6:NaN:Inf>
                
                #line 53
                mov o2.xyzw, v1.xyzw  // VSPositionColor<7,8,9,10>
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 117 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -v2.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r1.xyzw, v2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 115 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[40].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, v2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 123
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float       
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 60 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorI<6:NaN:Inf>
                
                #line 66
                mov o2.xyzw, v1.xyzw  // VSPositionColorI<7,8,9,10>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 117 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -v2.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r1.xyzw, v2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 115 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[40].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, v2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 123
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 343
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 349
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 82 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionColorSkinned<6:NaN:Inf>
                
                #line 86
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinned<7,8,9,10>
                ret 
                // Approximately 41 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 117 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -v2.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r1.xyzw, v2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 115 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[40].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, v2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 123
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float       
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 343
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 349
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 102 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorSkinnedI<6:NaN:Inf>
                
                #line 108
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinnedI<7,8,9,10>
                ret 
                // Approximately 44 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 117 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.xyzw, -v2.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r1.xyzw, v2.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 115 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r1.x, l(0.000000), cb0[40].x
                movc o0.xyzw, r1.xxxx, r0.xyzw, v2.xyzw  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 123
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 1
                
                #line 133 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColor<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalColor<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalColor<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalColor<9:NaN:Inf>
                
                #line 139
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColor<10,11,12,13>
                
                #line 135
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalColor<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalColor<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalColor<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalColor<17:NaN:Inf>
                
                #line 139
                ret 
                // Approximately 18 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerShadow                   sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 211 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 218
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 228 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, v3.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.yzw, -r0.xxyz, cb0[41].xxyz
                mad r1.yzw, r0.wwww, r1.yyzw, r0.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r1.yzwy, r0.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                mul o0.w, v3.w, cb1[1].w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 193 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float       
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 1
                
                #line 146 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorI<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalColorI<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalColorI<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalColorI<9:NaN:Inf>
                
                #line 154
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorI<10,11,12,13>
                
                #line 150
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalColorI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalColorI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalColorI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalColorI<17:NaN:Inf>
                
                #line 154
                ret 
                // Approximately 20 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerShadow                   sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 211 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 218
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 228 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, v3.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.yzw, -r0.xxyz, cb0[41].xxyz
                mad r1.yzw, r0.wwww, r1.yyzw, r0.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r1.yzwy, r0.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                mul o0.w, v3.w, cb1[1].w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 193 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 365
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 372
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 370
                endloop 
                
                #line 173 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[12].xyzw  // VSPositionNormalColorSkinned<14:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[13].xyzw  // VSPositionNormalColorSkinned<15:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[14].xyzw  // VSPositionNormalColorSkinned<16:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[15].xyzw  // VSPositionNormalColorSkinned<17:NaN:Inf>
                dp3 o2.x, r2.xyzx, cb0[4].xyzx  // VSPositionNormalColorSkinned<7:NaN:Inf>
                dp3 o2.y, r2.xyzx, cb0[5].xyzx  // VSPositionNormalColorSkinned<8:NaN:Inf>
                dp3 o2.z, r2.xyzx, cb0[6].xyzx  // VSPositionNormalColorSkinned<9:NaN:Inf>
                
                #line 179
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinned<10,11,12,13>
                ret 
                // Approximately 53 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerShadow                   sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 211 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 218
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 228 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, v3.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.yzw, -r0.xxyz, cb0[41].xxyz
                mad r1.yzw, r0.wwww, r1.yyzw, r0.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r1.yzwy, r0.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                mul o0.w, v3.w, cb1[1].w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 193 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float       
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 365
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 372
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 370
                endloop 
                
                #line 198 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalColorSkinnedI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalColorSkinnedI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalColorSkinnedI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalColorSkinnedI<17:NaN:Inf>
                dp3 o2.x, r1.xyzx, cb0[4].xyzx  // VSPositionNormalColorSkinnedI<7:NaN:Inf>
                dp3 o2.y, r1.xyzx, cb0[5].xyzx  // VSPositionNormalColorSkinnedI<8:NaN:Inf>
                dp3 o2.z, r1.xyzx, cb0[6].xyzx  // VSPositionNormalColorSkinnedI<9:NaN:Inf>
                
                #line 206
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinnedI<10,11,12,13>
                ret 
                // Approximately 56 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerShadow                   sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 211 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 218
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t0.xxxx, s0, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 228 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, v3.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r1.yzw, -r0.xxyz, cb0[41].xxyz
                mad r1.yzw, r0.wwww, r1.yyzw, r0.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r1.yzwy, r0.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 235
                mul o0.w, v3.w, cb1[1].w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 193 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 247 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 252
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 319 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                
                #line 315 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 400 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[40].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 325
                mul o0.w, r0.w, cb1[1].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float   x   
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 259 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureI<6:NaN:Inf>
                
                #line 266
                mov o2.xy, v1.xyxx  // VSPositionTextureI<7,8>
                mov o2.z, v6.x  // VSPositionTextureI<9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 319 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                
                #line 315 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 400 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[40].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 325
                mul o0.w, r0.w, cb1[1].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureRED
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 247 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 252
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 332 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf>
                
                #line 335
                mov o0.xyz, r0.xxxx  // PSPositionTextureRED<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureRED<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureGREEN
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 247 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 252
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 340 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.yxzw, s0  // litColor<1:Inf>
                
                #line 343
                mov o0.xyz, r0.xxxx  // PSPositionTextureGREEN<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureGREEN<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureBLUE
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 247 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 252
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 348 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.zxyw, s0  // litColor<2:Inf>
                
                #line 351
                mov o0.xyz, r0.xxxx  // PSPositionTextureBLUE<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureBLUE<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 343
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 349
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 282 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionTextureSkinned<6:NaN:Inf>
                
                #line 287
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinned<7,8>
                mov o2.z, cb3[0].x  // VSPositionTextureSkinned<9>
                ret 
                // Approximately 42 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 319 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                
                #line 315 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 400 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[40].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 325
                mul o0.w, r0.w, cb1[1].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 343
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 349
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 303 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureSkinnedI<6:NaN:Inf>
                
                #line 310
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinnedI<7,8>
                mov o2.z, v8.x  // VSPositionTextureSkinnedI<9>
                ret 
                // Approximately 45 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[42], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 319 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 398 "IncLights.fx"
                add r0.x, r0.x, -cb0[39].w
                div_sat r0.x, r0.x, cb0[40].x  // fogLerp<0:[0f,1f]>
                
                #line 315 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 400 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[41].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 317 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r2.x, l(0.000000), cb0[40].x
                movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 325
                mul o0.w, r0.w, cb1[1].w  // PSPositionTexture<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 1
                
                #line 361 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTexture<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalTexture<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalTexture<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalTexture<9:NaN:Inf>
                
                #line 368
                mov o3.xy, v2.xyxx  // VSPositionNormalTexture<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTexture<16>
                
                #line 363
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTexture<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTexture<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTexture<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTexture<15:NaN:Inf>
                
                #line 368
                ret 
                // Approximately 19 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 443 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 450
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 460 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 469
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTexture<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float   x   
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 1
                
                #line 375 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureI<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalTextureI<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalTextureI<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalTextureI<9:NaN:Inf>
                
                #line 384
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureI<10,11>
                mov o3.z, v7.x  // VSPositionNormalTextureI<16>
                
                #line 379
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTextureI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTextureI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTextureI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTextureI<15:NaN:Inf>
                
                #line 384
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 443 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 450
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 460 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 469
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTexture<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 365
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 372
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 370
                endloop 
                
                #line 403 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[12].xyzw  // VSPositionNormalTextureSkinned<12:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[13].xyzw  // VSPositionNormalTextureSkinned<13:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[14].xyzw  // VSPositionNormalTextureSkinned<14:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[15].xyzw  // VSPositionNormalTextureSkinned<15:NaN:Inf>
                dp3 o2.x, r2.xyzx, cb0[4].xyzx  // VSPositionNormalTextureSkinned<7:NaN:Inf>
                dp3 o2.y, r2.xyzx, cb0[5].xyzx  // VSPositionNormalTextureSkinned<8:NaN:Inf>
                dp3 o2.z, r2.xyzx, cb0[6].xyzx  // VSPositionNormalTextureSkinned<9:NaN:Inf>
                
                #line 410
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinned<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTextureSkinned<16>
                ret 
                // Approximately 54 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 443 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 450
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 460 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 469
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTexture<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float   x   
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 365
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 372
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 370
                endloop 
                
                #line 429 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTextureSkinnedI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTextureSkinnedI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTextureSkinnedI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTextureSkinnedI<15:NaN:Inf>
                dp3 o2.x, r1.xyzx, cb0[4].xyzx  // VSPositionNormalTextureSkinnedI<7:NaN:Inf>
                dp3 o2.y, r1.xyzx, cb0[5].xyzx  // VSPositionNormalTextureSkinnedI<8:NaN:Inf>
                dp3 o2.z, r1.xyzx, cb0[6].xyzx  // VSPositionNormalTextureSkinnedI<9:NaN:Inf>
                
                #line 438
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinnedI<10,11>
                mov o3.z, v9.x  // VSPositionNormalTextureSkinnedI<16>
                ret 
                // Approximately 57 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 443 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 450
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // lInput<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                
                #line 327 "IncLights.fx"
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t1.xxxx, s1, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 460 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 469
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTexture<3:NaN:Inf>
                ret 
                // Approximately 194 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureTangent
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 1
                
                #line 481 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangent<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangent<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangent<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangent<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangent<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangent<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangent<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalTextureTangent<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalTextureTangent<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalTextureTangent<9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangent<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangent<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangent<12:NaN:Inf>
                
                #line 489
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangent<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangent<19>
                
                #line 483
                dp4 o5.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTextureTangent<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTextureTangent<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTextureTangent<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTextureTangent<18:NaN:Inf>
                
                #line 489
                ret 
                // Approximately 22 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerShadow                   sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 576 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // unitNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139 "IncLights.fx"
                mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                dp3 r1.w, v3.xyzx, r2.xyzx
                mad r3.xyz, -r1.wwww, r2.xyzx, v3.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r2.zxyz, r3.yzxy
                mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                mul r4.xyz, r1.yyyy, r4.xyzx
                mad r1.xyw, r1.xxxx, r3.xyxz, r4.xyxz
                mad r1.xyz, r1.zzzz, r2.xyzx, r1.xywx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 327
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s2, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 596 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 600 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 605
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTextureTangent<3:NaN:Inf>
                ret 
                // Approximately 206 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureTangentI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 1
                
                #line 496 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v5.xyzw
                mad r0.xyzw, v0.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentI<6:NaN:Inf>
                dp3 o2.x, v1.xyzx, cb0[4].xyzx  // VSPositionNormalTextureTangentI<7:NaN:Inf>
                dp3 o2.y, v1.xyzx, cb0[5].xyzx  // VSPositionNormalTextureTangentI<8:NaN:Inf>
                dp3 o2.z, v1.xyzx, cb0[6].xyzx  // VSPositionNormalTextureTangentI<9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentI<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentI<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentI<12:NaN:Inf>
                
                #line 506
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentI<13,14>
                mov o4.z, v8.x  // VSPositionNormalTextureTangentI<19>
                
                #line 500
                dp4 o5.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTextureTangentI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTextureTangentI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTextureTangentI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTextureTangentI<18:NaN:Inf>
                
                #line 506
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerShadow                   sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 576 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // unitNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139 "IncLights.fx"
                mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                dp3 r1.w, v3.xyzx, r2.xyzx
                mad r3.xyz, -r1.wwww, r2.xyzx, v3.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r2.zxyz, r3.yzxy
                mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                mul r4.xyz, r1.yyyy, r4.xyzx
                mad r1.xyw, r1.xxxx, r3.xyxz, r4.xyxz
                mad r1.xyz, r1.zzzz, r2.xyzx, r1.xywx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 327
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s2, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 596 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 600 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 605
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTextureTangent<3:NaN:Inf>
                ret 
                // Approximately 206 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureTangentSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 392
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 400
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r2.w, r4.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r3.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r3.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r3.w, r4.z, r4.y
                  ishl r3.w, r3.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r3.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r3.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r3.w + 2].xyzw
                  mad r1.xyz, r2.wwww, r5.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r3.w + 2].xyzx
                  mad r2.xyz, r2.wwww, r5.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r3.w + 2].xyzx
                  mad r3.xyz, r2.wwww, r5.xyzx, r3.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 398
                endloop 
                
                #line 528 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinned<6:NaN:Inf>
                dp4 o5.x, r1.xyzw, cb0[12].xyzw  // VSPositionNormalTextureTangentSkinned<15:NaN:Inf>
                dp4 o5.y, r1.xyzw, cb0[13].xyzw  // VSPositionNormalTextureTangentSkinned<16:NaN:Inf>
                dp4 o5.z, r1.xyzw, cb0[14].xyzw  // VSPositionNormalTextureTangentSkinned<17:NaN:Inf>
                dp4 o5.w, r1.xyzw, cb0[15].xyzw  // VSPositionNormalTextureTangentSkinned<18:NaN:Inf>
                dp3 o2.x, r2.xyzx, cb0[4].xyzx  // VSPositionNormalTextureTangentSkinned<7:NaN:Inf>
                dp3 o2.y, r2.xyzx, cb0[5].xyzx  // VSPositionNormalTextureTangentSkinned<8:NaN:Inf>
                dp3 o2.z, r2.xyzx, cb0[6].xyzx  // VSPositionNormalTextureTangentSkinned<9:NaN:Inf>
                dp3 o3.x, r3.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinned<10:NaN:Inf>
                dp3 o3.y, r3.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinned<11:NaN:Inf>
                dp3 o3.z, r3.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinned<12:NaN:Inf>
                
                #line 536
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinned<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangentSkinned<19>
                ret 
                // Approximately 62 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerShadow                   sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 576 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // unitNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139 "IncLights.fx"
                mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                dp3 r1.w, v3.xyzx, r2.xyzx
                mad r3.xyz, -r1.wwww, r2.xyzx, v3.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r2.zxyz, r3.yzxy
                mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                mul r4.xyz, r1.yyyy, r4.xyzx
                mad r1.xyw, r1.xxxx, r3.xyxz, r4.xyxz
                mad r1.xyz, r1.zzzz, r2.xyzx, r1.xywx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 327
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s2, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 596 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 600 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 605
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTextureTangent<3:NaN:Inf>
                ret 
                // Approximately 206 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 PositionNormalTextureTangentSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96 [unused]
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  636 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  640 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  656 Size:    16 [unused]
                //   float gEnableShadows;              // Offset:  672 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                // localTransform           0   xyzw        6     NONE  float   xyzw
                // localTransform           1   xyzw        7     NONE  float   xyzw
                // localTransform           2   xyzw        8     NONE  float   xyzw
                // localTransform           3   xyzw        9     NONE  float   xyzw
                // textureIndex             0   x          10     NONE  float   x   
                // SV_InstanceID            0   x          11   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 332 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 392
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 400
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r1.w, r4.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r2.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r2.w, r4.z, r4.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r5.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r2.w + 2].xyzx
                  mad r2.xyz, r1.wwww, r5.xyzx, r2.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 398
                endloop 
                
                #line 558 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r3.yyyy, v7.xyzw
                mad r0.xyzw, r3.xxxx, v6.xyzw, r0.xyzw
                mad r0.xyzw, r3.zzzz, v8.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v9.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinnedI<6:NaN:Inf>
                dp4 o5.x, r0.xyzw, cb0[12].xyzw  // VSPositionNormalTextureTangentSkinnedI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[13].xyzw  // VSPositionNormalTextureTangentSkinnedI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[14].xyzw  // VSPositionNormalTextureTangentSkinnedI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[15].xyzw  // VSPositionNormalTextureTangentSkinnedI<18:NaN:Inf>
                dp3 o2.x, r1.xyzx, cb0[4].xyzx  // VSPositionNormalTextureTangentSkinnedI<7:NaN:Inf>
                dp3 o2.y, r1.xyzx, cb0[5].xyzx  // VSPositionNormalTextureTangentSkinnedI<8:NaN:Inf>
                dp3 o2.z, r1.xyzx, cb0[6].xyzx  // VSPositionNormalTextureTangentSkinnedI<9:NaN:Inf>
                dp3 o3.x, r2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinnedI<10:NaN:Inf>
                dp3 o3.y, r2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinnedI<11:NaN:Inf>
                dp3 o3.z, r2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinnedI<12:NaN:Inf>
                
                #line 568
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinnedI<13,14>
                mov o4.z, v10.x  // VSPositionNormalTextureTangentSkinnedI<19>
                ret 
                // Approximately 65 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  192 Size:    64 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float3 Direction;              // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gDirLights[3];                   // Offset:  256 Size:   192
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float3 Position;               // Offset:  496
                //       float Range;                   // Offset:  508
                //       float3 Attenuation;            // Offset:  512
                //       float Padding;                 // Offset:  524
                //
                //   } gPointLight;                     // Offset:  448 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  528
                //       float4 Diffuse;                // Offset:  544
                //       float4 Specular;               // Offset:  560
                //       float3 Position;               // Offset:  576
                //       float Range;                   // Offset:  588
                //       float3 Direction;              // Offset:  592
                //       float Spot;                    // Offset:  604
                //       float3 Attenuation;            // Offset:  608
                //       float Padding;                 // Offset:  620
                //
                //   } gSpotLight;                      // Offset:  528 Size:    96
                //   float3 gEyePositionWorld;          // Offset:  624 Size:    12
                //   float gFogStart;                   // Offset:  636 Size:     4
                //   float gFogRange;                   // Offset:  640 Size:     4
                //   float4 gFogColor;                  // Offset:  656 Size:    16
                //   float gEnableShadows;              // Offset:  672 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //       float Padding;                 // Offset:   64
                //
                //   } gMaterial;                       // Offset:    0 Size:    68
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerShadow                   sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[43], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 576 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[39].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // unitNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139 "IncLights.fx"
                mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                dp3 r1.w, v3.xyzx, r2.xyzx
                mad r3.xyz, -r1.wwww, r2.xyzx, v3.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r2.zxyz, r3.yzxy
                mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                mul r4.xyz, r1.yyyy, r4.xyzx
                mad r1.xyw, r1.xxxx, r3.xyxz, r4.xyxz
                mad r1.xyz, r1.zzzz, r2.xyzx, r1.xywx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 327
                eq r1.w, cb0[42].x, l(1.000000)
                if_nz r1.w
                
                #line 301
                  div r2.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 311
                  add r3.xyzw, r2.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s2, r2.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r2.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xyzw, r2.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xyzw, r2.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.xyxx, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r3.zwzz, t2.xxxx, s2, r2.z
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 315
                  mul r1.w, r1.w, l(0.111111)  // percentLit<0:[0f,1f]>
                
                #line 327
                else 
                  mov r1.w, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 338
                eq r2.x, cb0[19].w, l(1.000000)
                if_nz r2.x
                
                #line 168
                  mul r2.xyz, cb0[16].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 171
                  dp3 r2.w, -cb0[19].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r3.x, l(0.000000), r2.w
                  dp3 r3.y, cb0[19].xyzx, r1.xyzx
                  add r3.y, r3.y, r3.y
                  mad r3.yzw, r1.xxyz, -r3.yyyy, cb0[19].xxyz  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r3.yzwy, r0.xyzx
                  max r3.y, r3.y, l(0.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, cb1[2].w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r2.wwww, cb1[1].xyzx
                  mul r4.xyz, r4.xyzx, cb0[17].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r3.yyyy, cb1[2].xxyz
                  mul r3.yzw, r3.yyzw, cb0[18].xxyz  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r4.xyz, r3.xxxx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.yzwy, r3.xxxx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 350
                  mul r4.xyz, r1.wwww, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.xyz, r1.wwww, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r4.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r3.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                eq r1.w, cb0[23].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[23].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[23].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[23].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[21].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[22].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[20].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                eq r1.w, cb0[27].w, l(1.000000)
                if_nz r1.w
                
                #line 171
                  dp3 r1.w, -cb0[27].xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 175
                  lt r2.w, l(0.000000), r1.w
                  dp3 r3.w, cb0[27].xyzx, r1.xyzx
                  add r3.w, r3.w, r3.w
                  mad r5.xyz, r1.xyzx, -r3.wwww, cb0[27].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r5.xyzx, r0.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, cb1[2].w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r1.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[25].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r3.wwww, cb1[2].xyzx
                  mul r6.xyz, r6.xyzx, cb0[26].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 175
                  and r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r2.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 349
                  mad r2.xyz, cb1[0].xyzx, cb0[24].xyzx, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 338
                endif 
                
                #line 355
                eq r1.w, cb0[32].w, l(1.000000)
                if_nz r1.w
                
                #line 200
                  add r5.xyz, -v1.xyzx, cb0[31].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 203
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 210
                  ge r1.w, cb0[31].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 213
                  mul r7.xyz, cb0[28].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 216
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 220
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r5.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r5.xyzx, r0.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, cb1[2].w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, cb1[1].xyzx
                  mul r5.xyz, r5.xyzx, cb0[29].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r4.wwww, cb1[2].xyzx
                  mul r8.xyz, r8.xyzx, cb0[30].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 220
                  and r5.xyz, r3.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r8.xyz, r3.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 230
                  mov r6.x, l(1.000000)
                  dp3 r2.w, cb0[32].xyzx, r6.xyzx
                  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r2.wwww, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 210
                  and r7.xyz, r1.wwww, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  and r5.xyz, r1.wwww, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r6.xyz, r1.wwww, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367
                  add r2.xyz, r2.xyzx, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r6.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 355
                endif 
                
                #line 372
                eq r1.w, cb0[38].w, l(1.000000)
                if_nz r1.w
                
                #line 250
                  add r5.xyz, -v1.xyzx, cb0[36].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 253
                  dp3 r6.z, r5.xyzx, r5.xyzx
                  sqrt r6.y, r6.z  // d<0:NaN:Inf>
                
                #line 260
                  ge r1.w, cb0[36].w, r6.y
                  div r5.xyz, r5.xyzx, r6.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 263
                  mul r7.xyz, cb0[33].xyzx, cb1[0].xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 266
                  dp3 r2.w, r5.xyzx, r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 270
                  lt r3.w, l(0.000000), r2.w
                  dp3 r4.w, -r5.xyzx, r1.xyzx
                  add r4.w, r4.w, r4.w
                  mad r1.xyz, r1.xyzx, -r4.wwww, -r5.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r1.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, cb1[2].w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r1.xyz, r2.wwww, cb1[1].xyzx
                  mul r1.xyz, r1.xyzx, cb0[34].xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xxxx, cb1[2].xyzx
                  mul r0.xyz, r0.xyzx, cb0[35].xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 270
                  and r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                  dp3 r2.w, -r5.xyzx, cb0[37].xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, cb0[37].w
                  exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 283
                  mov r6.x, l(1.000000)
                  dp3 r3.w, cb0[38].xyzx, r6.xyzx
                  div r3.w, r2.w, r3.w  // attenuation<0:NaN:Inf>
                  mul r5.xyz, r2.wwww, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.xyzx, r3.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r3.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r5.xyz, r1.wwww, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r0.xyz, r0.xyzx, r1.wwww  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                  add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r1.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r0.xyzx, r3.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372
                endif 
                
                #line 596 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.xyz, r2.xyzx, r4.xyzx
                mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                lt r1.x, l(0.000000), cb0[40].x
                
                #line 398 "IncLights.fx"
                add r0.w, r0.w, -cb0[39].w
                div_sat r0.w, r0.w, cb0[40].x  // fogLerp<0:[0f,1f]>
                add r2.xyz, -r0.xyzx, cb0[41].xyzx
                mad r2.xyz, r0.wwww, r2.xyzx, r0.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 600 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r1.xxxx, r2.xyzx, r0.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 605
                mul o0.w, r1.w, cb1[1].w  // PSPositionNormalTextureTangent<3:NaN:Inf>
                ret 
                // Approximately 206 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

}

