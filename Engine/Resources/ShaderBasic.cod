//
// FX Version: fx_5_0
//
// 4 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInverse;             // Offset:   64, size:   64
    float4x4 gWorldViewProjection;      // Offset:  128, size:   64
    float3  gEyePositionWorld;          // Offset:  192, size:   12
    DirectionalLight gDirLights[3];     // Offset:  208, size:  144
    PointLight gPointLights[4];         // Offset:  352, size:  192
    SpotLight gSpotLights[4];           // Offset:  544, size:  256
    float   gFogStart;                  // Offset:  800, size:    4
    float   gFogRange;                  // Offset:  804, size:    4
    float4  gFogColor;                  // Offset:  816, size:   16
    float4x4 gShadowTransform;          // Offset:  832, size:   64
}

cbuffer cbPerObject : register(b1)
{
    Material gMaterial;                 // Offset:    0, size:   24
}

cbuffer cbSkinned : register(b2)
{
    float4x4 gBoneTransforms[96];       // Offset:    0, size: 6144
}

cbuffer cbPerInstance : register(b3)
{
    float   gTextureIndex;              // Offset:    0, size:    4
}

//
// 7 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2DArray gTextureArray;
Texture2D gNormalMap;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 25 technique(s)
    //
    technique11 PositionColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 45 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColor<6:NaN:Inf>
                
                #line 49
                mov o2.xyzw, v1.xyzw  // VSPositionColor<7,8,9,10>
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 112 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                mad r0.yzw, -v2.xxyz, cb1[0].xxyz, cb0[51].xxyz
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r1.xyzw, v2.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                mov o0.w, r1.w  // PSPositionColor<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float       
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 1
                
                #line 55 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorI<6:NaN:Inf>
                
                #line 61
                mov o2.xyzw, v1.xyzw  // VSPositionColorI<7,8,9,10>
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 112 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                mad r0.yzw, -v2.xxyz, cb1[0].xxyz, cb0[51].xxyz
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r1.xyzw, v2.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                mov o0.w, r1.w  // PSPositionColor<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 76 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionColorSkinned<6:NaN:Inf>
                
                #line 80
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinned<7,8,9,10>
                ret 
                // Approximately 41 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 112 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                mad r0.yzw, -v2.xxyz, cb1[0].xxyz, cb0[51].xxyz
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r1.xyzw, v2.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                mov o0.w, r1.w  // PSPositionColor<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float       
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 95 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionColorSkinnedI<6:NaN:Inf>
                
                #line 101
                mov o2.xyzw, v1.xyzw  // VSPositionColorSkinnedI<7,8,9,10>
                ret 
                // Approximately 44 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyzw
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 112 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                mad r0.yzw, -v2.xxyz, cb1[0].xxyz, cb0[51].xxyz
                
                #line 106 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r1.xyzw, v2.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 118
                mov o0.w, r1.w  // PSPositionColor<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 128 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColor<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColor<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColor<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColor<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColor<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColor<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColor<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalColor<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 134
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColor<10,11,12,13>
                
                #line 130
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColor<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColor<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColor<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColor<17:NaN:Inf>
                
                #line 134
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 203 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r0.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.xxxx, s0, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r3.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r2.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 228
                mov o0.w, r1.w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float       
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 140 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalColorI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 148
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorI<10,11,12,13>
                
                #line 144
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColorI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColorI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColorI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColorI<17:NaN:Inf>
                
                #line 148
                ret 
                // Approximately 23 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 203 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r0.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.xxxx, s0, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r3.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r2.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 228
                mov o0.w, r1.w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 166 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalColorSkinned<14:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalColorSkinned<15:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalColorSkinned<16:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalColorSkinned<17:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalColorSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 172
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinned<10,11,12,13>
                ret 
                // Approximately 56 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 203 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r0.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.xxxx, s0, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r3.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r2.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 228
                mov o0.w, r1.w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float       
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 190 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalColorSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalColorSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalColorSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalColorSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalColorSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalColorSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalColorSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalColorSkinnedI<14:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalColorSkinnedI<15:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalColorSkinnedI<16:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalColorSkinnedI<17:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalColorSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 198
                mov o3.xyzw, v2.xyzw  // VSPositionNormalColorSkinnedI<10,11,12,13>
                ret 
                // Approximately 59 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerComparisonShadow         sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 203 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r1.x, r0.w
                mul r0.xyz, r0.xyzx, r1.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyzw, v3.xyzw, cb1[0].xyzw  // matColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r0.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.xxxx, s0, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t0.xxxx, s0, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.xxxx, s0, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r0.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t0.xxxx, s0, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t0.xxxx, s0, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r0.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r1.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r3.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r2.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 221 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r2.xyzx  // PSPositionNormalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 228
                mov o0.w, r1.w  // PSPositionNormalColor<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 309 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                add r0.yzw, -r1.xxyz, cb0[51].xxyz
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 307 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 315
                mov o0.w, r1.w  // PSPositionTexture<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureRED
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 319 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.xyzw, s0  // color<0:Inf>
                
                #line 322
                mov o0.xyz, r0.xxxx  // PSPositionTextureRED<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureRED<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureGREEN
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 326 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.yxzw, s0  // color<1:Inf>
                
                #line 329
                mov o0.xyz, r0.xxxx  // PSPositionTextureGREEN<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureGREEN<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureBLUE
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 333 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.zxyw, s0  // color<2:Inf>
                
                #line 336
                mov o0.xyz, r0.xxxx  // PSPositionTextureBLUE<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureBLUE<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureALPHA
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 340 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.x, v2.xyzx, t0.wxyz, s0  // color<3:Inf>
                
                #line 343
                mov o0.xyz, r0.xxxx  // PSPositionTextureALPHA<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureALPHA<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureNOALPHA
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 238 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTexture<6:NaN:Inf>
                
                #line 243
                mov o2.xy, v1.xyxx  // VSPositionTexture<7,8>
                mov o2.z, cb3[0].x  // VSPositionTexture<9>
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 347 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyz, v2.xyzx, t0.xyzw, s0  // color<0:Inf,1:Inf,2:Inf>
                
                #line 350
                mov o0.xyz, r0.xyzx  // PSPositionTextureNOALPHA<0:Inf,1:Inf,2:Inf>
                mov o0.w, l(1.000000)  // PSPositionTextureNOALPHA<3: 1f>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // localTransform           0   xyzw        2     NONE  float   xyzw
                // localTransform           1   xyzw        3     NONE  float   xyzw
                // localTransform           2   xyzw        4     NONE  float   xyzw
                // localTransform           3   xyzw        5     NONE  float   xyzw
                // textureIndex             0   x           6     NONE  float   x   
                // SV_InstanceID            0   x           7   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                
                #line 249 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureI<6:NaN:Inf>
                
                #line 256
                mov o2.xy, v1.xyxx  // VSPositionTextureI<7,8>
                mov o2.z, v6.x  // VSPositionTextureI<9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 309 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                add r0.yzw, -r1.xxyz, cb0[51].xxyz
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 307 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 315
                mov o0.w, r1.w  // PSPositionTexture<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 271 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionTextureSkinned<6:NaN:Inf>
                
                #line 276
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinned<7,8>
                mov o2.z, cb3[0].x  // VSPositionTextureSkinned<9>
                ret 
                // Approximately 42 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 309 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                add r0.yzw, -r1.xxyz, cb0[51].xxyz
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 307 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 315
                mov o0.w, r1.w  // PSPositionTexture<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // WEIGHTS                  0   xyz         2     NONE  float   xyz 
                // BONEINDICES              0   xyzw        3     NONE   uint   xyzw
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x  // weights<0>
                mov x0[1].x, v2.y  // weights<1>
                mov x0[2].x, v2.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.x, l(0)  // i<0>
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x  // weights<0:Inf>
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb2[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb2[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb2[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endloop 
                
                #line 291 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionTextureSkinnedI<6:NaN:Inf>
                
                #line 298
                mov o2.xy, v1.xyxx  // VSPositionTextureSkinnedI<7,8>
                mov o2.z, v8.x  // VSPositionTextureSkinnedI<9>
                ret 
                // Approximately 45 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // textureIndex             0     z         2     NONE  float     z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_input_ps linear v2.z
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 309 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                add r0.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.x, r0.x, -cb0[50].x
                div_sat r0.x, r0.x, cb0[50].y  // fogLerp<0:[0f,1f]>
                
                #line 303 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v2.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137 "IncLights.fx"
                add r0.yzw, -r1.xxyz, cb0[51].xxyz
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 307 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.w, l(0.000000), cb0[50].y
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx  // PSPositionTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 315
                mov o0.w, r1.w  // PSPositionTexture<3:Inf>
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 360 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTexture<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTexture<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTexture<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTexture<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTexture<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTexture<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTexture<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTexture<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 367
                mov o3.xy, v2.xyxx  // VSPositionNormalTexture<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTexture<16>
                
                #line 362
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTexture<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTexture<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTexture<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTexture<15:NaN:Inf>
                
                #line 367
                ret 
                // Approximately 22 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 439 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r1.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r0.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r3.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 168
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r1.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx
                  add r1.x, r1.x, cb0[46].w
                  add r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r1.xyzx, r2.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464
                mov o0.w, r0.w  // PSPositionNormalTexture<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // localTransform           0   xyzw        3     NONE  float   xyzw
                // localTransform           1   xyzw        4     NONE  float   xyzw
                // localTransform           2   xyzw        5     NONE  float   xyzw
                // localTransform           3   xyzw        6     NONE  float   xyzw
                // textureIndex             0   x           7     NONE  float   x   
                // SV_InstanceID            0   x           8   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 2
                
                #line 373 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 382
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureI<10,11>
                mov o3.z, v7.x  // VSPositionNormalTextureI<16>
                
                #line 377
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureI<15:NaN:Inf>
                
                #line 382
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 439 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r1.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r0.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r3.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 168
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r1.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx
                  add r1.x, r1.x, cb0[46].w
                  add r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r1.xyzx, r2.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464
                mov o0.w, r0.w  // PSPositionNormalTexture<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r2.w, r3.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r3.z, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r3.z, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r3.y, r3.z, r3.y
                  ishl r3.y, r3.y, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r3.y + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r3.y + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r3.y + 2].xyzw
                  mad r1.xyz, r2.wwww, r4.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r3.y + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r3.y + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r3.y + 2].xyzx
                  mad r2.xyz, r2.wwww, r4.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 400 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinned<6:NaN:Inf>
                dp4 o4.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalTextureSkinned<12:NaN:Inf>
                dp4 o4.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalTextureSkinned<13:NaN:Inf>
                dp4 o4.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalTextureSkinned<14:NaN:Inf>
                dp4 o4.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalTextureSkinned<15:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 407
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinned<10,11>
                mov o3.z, cb3[0].x  // VSPositionNormalTextureSkinned<16>
                ret 
                // Approximately 57 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 439 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r1.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r0.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r3.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 168
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r1.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx
                  add r1.x, r1.x, cb0[46].w
                  add r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r1.xyzx, r2.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464
                mov o0.w, r0.w  // PSPositionNormalTexture<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE   uint   xyzw
                // localTransform           0   xyzw        5     NONE  float   xyzw
                // localTransform           1   xyzw        6     NONE  float   xyzw
                // localTransform           2   xyzw        7     NONE  float   xyzw
                // localTransform           3   xyzw        8     NONE  float   xyzw
                // textureIndex             0   x           9     NONE  float   x   
                // SV_InstanceID            0   x          10   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.z
                dcl_output o4.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 398
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 405
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.x, l(0)  // i<0>
                loop 
                  ige r1.w, r3.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r3.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r3.x
                  ult r4.xyz, r3.xxxx, l(1, 2, 3, 0)
                  and r5.y, r2.w, r4.y
                  iadd r3.xy, r3.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r5.z, r4.y, l(0), r3.y
                  ieq r5.w, r4.z, l(0)
                  mov r5.x, r4.x
                  and r4.xyzw, r5.xyzw, v4.xyzw
                  or r3.yz, r4.yywy, r4.xxzx
                  or r2.w, r3.z, r3.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r4.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r4.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r4.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r4.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r4.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r4.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 403
                endloop 
                
                #line 425 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r2.yyyy, v6.xyzw
                mad r0.xyzw, r2.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r2.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureSkinnedI<6:NaN:Inf>
                dp4 o4.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureSkinnedI<12:NaN:Inf>
                dp4 o4.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureSkinnedI<13:NaN:Inf>
                dp4 o4.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureSkinnedI<14:NaN:Inf>
                dp4 o4.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureSkinnedI<15:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 434
                mov o3.xy, v2.xyxx  // VSPositionNormalTextureSkinnedI<10,11>
                mov o3.z, v9.x  // VSPositionNormalTextureSkinnedI<16>
                ret 
                // Approximately 60 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerAnisotropic                sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // textureIndex             0     z         3     NONE  float     z 
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.z
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 439 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, v3.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 156
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.x, r2.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.x, r2.x, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.x, cb0[14].yzwy, v2.xyzx
                  add r2.x, r2.x, r2.x
                  mad r2.xzw, v2.xxyz, -r2.xxxx, cb0[14].yyzw
                  dp3 r3.z, r2.xzwx, r2.xzwx
                  rsq r3.z, r3.z
                  mul r2.xzw, r2.xxzw, r3.zzzz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r1.xyzx, r2.xzwx
                  max r2.x, r2.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r2.z, l(0.000000), r2.x
                
                #line 168
                  max r2.w, cb1[1].y, l(1.000000)
                  log r2.x, r2.x
                  mul r2.x, r2.x, r2.w
                  exp r2.x, r2.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.x, r2.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r3.y, r2.x, r2.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r2.xy, r2.yyyy, r3.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r3.xyz, r0.xyzx, cb0[13].xyzx
                  add r2.x, r2.x, cb0[13].w
                  add r2.x, r2.y, r2.x
                  mul r2.xyz, r2.xxxx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,2f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r3.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,5f]>
                  add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,7f]>
                  add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xxxx, s1, r3.z
                  add r3.x, r3.x, r3.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t1.xxxx, s1, r3.z
                  add r3.x, r3.y, r3.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.x, r3.x, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[17].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[16].xyzx
                  add r2.w, r3.x, cb0[16].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, v2.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, v2.xxyz, -r2.wwww, cb0[20].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[19].xyzx
                  add r2.w, r3.x, cb0[19].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t1.xxxx, s1, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, v2.xyzx, -r3.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.xxxx, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r0.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[36].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[34].xxyz
                  add r3.x, r3.x, cb0[34].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[40].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[38].xxyz
                  add r3.x, r3.x, cb0[38].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[44].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r3.x
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.x, r3.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.x, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.yzw, r0.xxyz, cb0[42].xxyz
                  add r3.x, r3.x, cb0[42].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.yzwy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r4.y, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r4.y, -r4.y, r4.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.z, l(0.000000), r4.y
                  div r2.w, r2.w, r4.y  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r4.y, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r4.y
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r3.xyz, r3.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.x, -|r3.w|, l(1.000000)
                  sqrt r4.x, r4.x
                  mad r4.y, |r3.w|, l(-0.018729), l(0.074261)
                  mad r4.y, r4.y, |r3.w|, l(-0.212114)
                  mad r4.y, r4.y, |r3.w|, l(1.570729)
                  mul r4.z, r4.x, r4.y
                  mad r4.z, r4.z, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r4.z
                  mad r3.w, r4.y, r4.x, r3.w
                  mul r4.x, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.x, cb0[48].w, r4.x
                
                #line 156
                  dp3 r4.y, v2.xyzx, -r3.xyzx
                  max r4.y, r4.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r4.y
                  mul r5.x, r4.y, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r4.y, r3.xyzx, v2.xyzx
                  add r4.y, r4.y, r4.y
                  mad r3.xyz, v2.xyzx, -r4.yyyy, r3.xyzx
                  dp3 r4.y, r3.xyzx, r3.xyzx
                  rsq r4.y, r4.y
                  mul r3.xyz, r3.xyzx, r4.yyyy  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r3.xyzx
                  max r1.x, r1.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r1.y, l(0.000000), r1.x
                
                #line 168
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r1.x, r1.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r1.x, r1.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r1.xy, r4.zzzz, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r0.xyz, r0.xyzx, cb0[46].xyzx
                  add r1.x, r1.x, cb0[46].w
                  add r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r2.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r2.xyzx, cb0[51].xyzx
                mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 457 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r1.xyzx, r2.xyzx  // PSPositionNormalTexture<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 464
                mov o0.w, r0.w  // PSPositionNormalTexture<3:Inf>
                ret 
                // Approximately 577 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangent
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 2
                
                #line 474 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangent<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangent<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangent<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangent<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangent<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangent<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangent<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureTangent<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangent<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangent<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangent<12:NaN:Inf>
                
                #line 482
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangent<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangent<19>
                
                #line 476
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangent<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangent<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangent<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangent<18:NaN:Inf>
                
                #line 482
                ret 
                // Approximately 25 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 87 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 91
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 96
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 566 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[14].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, r0.xxyz, -r2.wwww, cb0[14].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.w, r3.x, cb0[13].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t2.xxxx, s2, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r3.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[17].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r4.x, cb0[16].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[20].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r4.x, cb0[19].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.w, r4.x, cb0[22].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.w, r4.x, cb0[25].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.w, r4.x, cb0[28].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.w, r4.x, cb0[31].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[36].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[34].xyzx
                  add r4.x, r4.x, cb0[34].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[40].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[38].xyzx
                  add r4.x, r4.x, cb0[38].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[44].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[42].xyzx
                  add r4.x, r4.x, cb0[42].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[48].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r0.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r3.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r3.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r3.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 591
                mov o0.w, r1.w  // PSPositionNormalTextureTangent<3:Inf>
                ret 
                // Approximately 592 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // localTransform           0   xyzw        4     NONE  float   xyzw
                // localTransform           1   xyzw        5     NONE  float   xyzw
                // localTransform           2   xyzw        6     NONE  float   xyzw
                // localTransform           3   xyzw        7     NONE  float   xyzw
                // textureIndex             0   x           8     NONE  float   x   
                // SV_InstanceID            0   x           9   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 2
                
                #line 488 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, v0.yyyy, v5.xyzw
                mad r0.xyzw, v0.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentI<6:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[4].xyzx
                dp3 r1.y, v1.xyzx, cb0[5].xyzx
                dp3 r1.z, v1.xyzx, cb0[6].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul o2.xyz, r1.wwww, r1.xyzx  // VSPositionNormalTextureTangentI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, v2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentI<10:NaN:Inf>
                dp3 o3.y, v2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentI<11:NaN:Inf>
                dp3 o3.z, v2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentI<12:NaN:Inf>
                
                #line 498
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentI<13,14>
                mov o4.z, v8.x  // VSPositionNormalTextureTangentI<19>
                
                #line 492
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentI<18:NaN:Inf>
                
                #line 498
                ret 
                // Approximately 27 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 87 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 91
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 96
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 566 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[14].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, r0.xxyz, -r2.wwww, cb0[14].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.w, r3.x, cb0[13].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t2.xxxx, s2, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r3.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[17].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r4.x, cb0[16].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[20].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r4.x, cb0[19].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.w, r4.x, cb0[22].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.w, r4.x, cb0[25].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.w, r4.x, cb0[28].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.w, r4.x, cb0[31].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[36].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[34].xyzx
                  add r4.x, r4.x, cb0[34].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[40].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[38].xyzx
                  add r4.x, r4.x, cb0[38].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[44].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[42].xyzx
                  add r4.x, r4.x, cb0[42].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[48].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r0.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r3.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r3.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r3.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 591
                mov o0.w, r1.w  // PSPositionNormalTextureTangent<3:Inf>
                ret 
                // Approximately 592 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                // cbuffer cbPerInstance
                // {
                //
                //   float gTextureIndex;               // Offset:    0 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                // cbPerInstance                     cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 425
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 433
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r2.w, r4.x, l(4)
                  breakc_nz r2.w
                  mov r2.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r3.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r3.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r3.w, r4.z, r4.y
                  ishl r3.w, r3.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r3.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r3.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r3.w + 2].xyzw
                  mad r1.xyz, r2.wwww, r5.xyzx, r1.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r3.w + 2].xyzx
                  mad r2.xyz, r2.wwww, r5.xyzx, r2.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r3.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r3.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r3.w + 2].xyzx
                  mad r3.xyz, r2.wwww, r5.xyzx, r3.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 431
                endloop 
                
                #line 519 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinned<0:NaN:Inf>
                dp4 o0.y, r1.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinned<1:NaN:Inf>
                dp4 o0.z, r1.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinned<2:NaN:Inf>
                dp4 o0.w, r1.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinned<3:NaN:Inf>
                dp4 o1.x, r1.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinned<4:NaN:Inf>
                dp4 o1.y, r1.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinned<5:NaN:Inf>
                dp4 o1.z, r1.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinned<6:NaN:Inf>
                dp4 o5.x, r1.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentSkinned<15:NaN:Inf>
                dp4 o5.y, r1.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentSkinned<16:NaN:Inf>
                dp4 o5.z, r1.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentSkinned<17:NaN:Inf>
                dp4 o5.w, r1.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentSkinned<18:NaN:Inf>
                dp3 r0.x, r2.xyzx, cb0[4].xyzx
                dp3 r0.y, r2.xyzx, cb0[5].xyzx
                dp3 r0.z, r2.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureTangentSkinned<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, r3.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinned<10:NaN:Inf>
                dp3 o3.y, r3.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinned<11:NaN:Inf>
                dp3 o3.z, r3.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinned<12:NaN:Inf>
                
                #line 527
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinned<13,14>
                mov o4.z, cb3[0].x  // VSPositionNormalTextureTangentSkinned<19>
                ret 
                // Approximately 65 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 87 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 91
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 96
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 566 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[14].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, r0.xxyz, -r2.wwww, cb0[14].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.w, r3.x, cb0[13].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t2.xxxx, s2, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r3.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[17].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r4.x, cb0[16].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[20].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r4.x, cb0[19].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.w, r4.x, cb0[22].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.w, r4.x, cb0[25].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.w, r4.x, cb0[28].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.w, r4.x, cb0[31].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[36].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[34].xyzx
                  add r4.x, r4.x, cb0[34].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[40].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[38].xyzx
                  add r4.x, r4.x, cb0[38].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[44].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[42].xyzx
                  add r4.x, r4.x, cb0[42].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[48].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r0.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r3.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r3.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r3.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 591
                mov o0.w, r1.w  // PSPositionNormalTextureTangent<3:Inf>
                ret 
                // Approximately 592 instruction slots used
                            
            };
        }

    }

    technique11 PositionNormalTextureTangentSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  800 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  804 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // WEIGHTS                  0   xyz         4     NONE  float   xyz 
                // BONEINDICES              0   xyzw        5     NONE   uint   xyzw
                // localTransform           0   xyzw        6     NONE  float   xyzw
                // localTransform           1   xyzw        7     NONE  float   xyzw
                // localTransform           2   xyzw        8     NONE  float   xyzw
                // localTransform           3   xyzw        9     NONE  float   xyzw
                // textureIndex             0   x          10     NONE  float   x   
                // SV_InstanceID            0   x          11   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[56], immediateIndexed
                dcl_constantbuffer cb2[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_input v10.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o4.z
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 365 "IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 425
                mov x0[0].x, v4.x  // weights<0>
                mov x0[1].x, v4.y  // weights<1>
                mov x0[2].x, v4.z  // weights<2>
                mov x0[3].x, r0.x  // weights<3>
                
                #line 433
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, l(0,0,0,0)  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, l(0,0,0,0)  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.x, l(0)  // i<0>
                loop 
                  ige r1.w, r4.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r4.x + 0].x  // weights<0:Inf>
                  ineg r2.w, r4.x
                  ult r5.xyz, r4.xxxx, l(1, 2, 3, 0)
                  and r6.y, r2.w, r5.y
                  iadd r4.xy, r4.xxxx, l(1, -3, 0, 0)  // i<0>
                  movc r6.z, r5.y, l(0), r4.y
                  ieq r6.w, r5.z, l(0)
                  mov r6.x, r5.x
                  and r5.xyzw, r6.xyzw, v5.xyzw
                  or r4.yz, r5.yywy, r5.xxzx
                  or r2.w, r4.z, r4.y
                  ishl r2.w, r2.w, l(2)
                  dp4 r5.x, r0.xyzw, cb2[r2.w + 0].xyzw
                  dp4 r5.y, r0.xyzw, cb2[r2.w + 1].xyzw
                  dp4 r5.z, r0.xyzw, cb2[r2.w + 2].xyzw
                  mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx  // positionLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v1.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v1.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v1.xyzx, cb2[r2.w + 2].xyzx
                  mad r1.xyz, r1.wwww, r5.xyzx, r1.xyzx  // normalLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.x, v2.xyzx, cb2[r2.w + 0].xyzx
                  dp3 r5.y, v2.xyzx, cb2[r2.w + 1].xyzx
                  dp3 r5.z, v2.xyzx, cb2[r2.w + 2].xyzx
                  mad r2.xyz, r1.wwww, r5.xyzx, r2.xyzx  // tangentLocal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 431
                endloop 
                
                #line 548 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                mul r0.xyzw, r3.yyyy, v7.xyzw
                mad r0.xyzw, r3.xxxx, v6.xyzw, r0.xyzw
                mad r0.xyzw, r3.zzzz, v8.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v9.xyzw  // instancePosition<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                dp4 o0.x, r0.xyzw, cb0[8].xyzw  // VSPositionNormalTextureTangentSkinnedI<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[9].xyzw  // VSPositionNormalTextureTangentSkinnedI<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[10].xyzw  // VSPositionNormalTextureTangentSkinnedI<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[11].xyzw  // VSPositionNormalTextureTangentSkinnedI<3:NaN:Inf>
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPositionNormalTextureTangentSkinnedI<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPositionNormalTextureTangentSkinnedI<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPositionNormalTextureTangentSkinnedI<6:NaN:Inf>
                dp4 o5.x, r0.xyzw, cb0[52].xyzw  // VSPositionNormalTextureTangentSkinnedI<15:NaN:Inf>
                dp4 o5.y, r0.xyzw, cb0[53].xyzw  // VSPositionNormalTextureTangentSkinnedI<16:NaN:Inf>
                dp4 o5.z, r0.xyzw, cb0[54].xyzw  // VSPositionNormalTextureTangentSkinnedI<17:NaN:Inf>
                dp4 o5.w, r0.xyzw, cb0[55].xyzw  // VSPositionNormalTextureTangentSkinnedI<18:NaN:Inf>
                dp3 r0.x, r1.xyzx, cb0[4].xyzx
                dp3 r0.y, r1.xyzx, cb0[5].xyzx
                dp3 r0.z, r1.xyzx, cb0[6].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul o2.xyz, r0.wwww, r0.xyzx  // VSPositionNormalTextureTangentSkinnedI<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                dp3 o3.x, r2.xyzx, cb0[0].xyzx  // VSPositionNormalTextureTangentSkinnedI<10:NaN:Inf>
                dp3 o3.y, r2.xyzx, cb0[1].xyzx  // VSPositionNormalTextureTangentSkinnedI<11:NaN:Inf>
                dp3 o3.z, r2.xyzx, cb0[2].xyzx  // VSPositionNormalTextureTangentSkinnedI<12:NaN:Inf>
                
                #line 558
                mov o4.xy, v3.xyxx  // VSPositionNormalTextureTangentSkinnedI<13,14>
                mov o4.z, v10.x  // VSPositionNormalTextureTangentSkinnedI<19>
                ret 
                // Approximately 68 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInverse;            // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //       float Pad1;                    // Offset:  396
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //       float Pad1;                    // Offset:  604
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   256
                //   float gFogStart;                   // Offset:  800 Size:     4
                //   float gFogRange;                   // Offset:  804 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float4x4 gShadowTransform;         // Offset:  832 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerAnisotropic                sampler      NA          NA    1        1
                // SamplerComparisonShadow         sampler_c      NA          NA    2        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gShadowMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // textureIndex             0     z         4     NONE  float     z 
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_sampler s2, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v4.z
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 563 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t1.xyzw, s0  // normalMapSample<0:Inf,1:Inf,2:Inf>
                
                #line 87 "IncLights.fx"
                mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalT<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 91
                dp3 r0.w, v3.xyzx, v2.xyzx
                mad r1.xyz, -r0.wwww, v2.xyzx, v3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // T<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.xyz, r1.yzxy, v2.zxyz
                mad r2.xyz, v2.yzxy, r1.zxyz, -r2.xyzx  // B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 96
                mul r2.xyz, r0.yyyy, r2.xyzx
                mad r0.xyw, r0.xxxx, r1.xyxz, r2.xyxz
                mad r0.xyz, r0.zzzz, v2.xyzx, r0.xywx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // NormalSampleToWorldSpace<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 566 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                sample_indexable(texture2darray)(float,float,float,float) r1.xyzw, v4.xyzx, t0.xyzw, s1  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyz, -v1.xyzx, cb0[12].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r2.w, r0.w
                mul r2.xyz, r2.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304 "IncLights.fx"
                eq r2.w, cb0[15].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[14].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.x, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[14].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[14].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r3.yzw, r0.xxyz, -r2.wwww, cb0[14].yyzw
                  dp3 r2.w, r3.yzwy, r3.yzwy
                  rsq r2.w, r2.w
                  mul r3.yzw, r2.wwww, r3.yyzw  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r3.yzwy
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.y, l(0.000000), r2.w
                
                #line 168
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r3.z
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r3.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r3.xy, r3.xxxx, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r4.xyz, r1.xyzx, cb0[13].xyzx
                  add r2.w, r3.x, cb0[13].w
                  add r2.w, r3.y, r2.w
                  mul r3.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[15].x, l(1.000000)
                
                #line 117
                  div r4.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t2.xxxx, s2, r4.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r4.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.xyxx, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r5.zwzz, t2.xxxx, s2, r4.z
                  add r3.w, r3.w, r4.x  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r4.xyz, r3.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r3.xyz, r2.wwww, r4.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 304
                else 
                  mov r3.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[18].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[17].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[17].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[17].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[17].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[16].xyzx
                  add r2.w, r4.x, cb0[16].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[18].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[21].y, l(1.000000)
                if_nz r2.w
                
                #line 156
                  dp3 r2.w, r0.xyzx, -cb0[20].yzwy
                  max r2.w, r2.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r3.w, l(0.000000), r2.w
                  mul r4.x, r2.w, cb0[20].x  // diffuse<0:NaN:Inf>
                  dp3 r2.w, cb0[20].yzwy, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mad r5.xyz, r0.xyzx, -r2.wwww, cb0[20].yzwy
                  dp3 r2.w, r5.xyzx, r5.xyzx
                  rsq r2.w, r2.w
                  mul r5.xyz, r2.wwww, r5.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r2.xyzx, r5.xyzx
                  max r2.w, r2.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.z, l(0.000000), r2.w
                
                #line 168
                  max r4.w, cb1[1].y, l(1.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r2.w, r2.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r4.y, r2.w, r4.z  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r3.wwww, r4.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[19].xyzx
                  add r2.w, r4.x, cb0[19].w
                  add r2.w, r4.y, r2.w
                  mul r4.xyz, r2.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  eq r2.w, cb0[21].x, l(1.000000)
                
                #line 117
                  div r5.xyz, v5.xyzx, v5.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t2.xxxx, s2, r5.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,2f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,5f]>
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,7f]>
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r6.zwzz, t2.xxxx, s2, r5.z
                  add r3.w, r3.w, r4.w  // percentLit<0:[0f,9f]>
                
                #line 131
                  mul r3.w, r3.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 206
                  mul r5.xyz, r3.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 202
                  movc r4.xyz, r2.wwww, r5.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 322
                eq r2.w, cb0[24].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[23].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[23].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[22].xyzx
                  add r3.w, r4.x, cb0[22].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[24].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[23].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[27].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[26].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[26].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[25].xyzx
                  add r3.w, r4.x, cb0[25].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[27].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[26].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[30].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[29].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[29].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[28].xyzx
                  add r3.w, r4.x, cb0[28].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[30].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[29].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[33].z, l(1.000000)
                if_nz r2.w
                
                #line 221
                  add r4.xyz, v1.xyzx, -cb0[32].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 156
                  dp3 r3.w, r0.xyzx, -r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.w, l(0.000000), r3.w
                  mul r5.x, r3.w, cb0[32].x  // diffuse<0:NaN:Inf>
                  dp3 r3.w, r4.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mad r4.xyz, r0.xyzx, -r3.wwww, r4.xyzx
                  dp3 r3.w, r4.xyzx, r4.xyzx
                  rsq r3.w, r3.w
                  mul r4.xyz, r3.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r2.xyzx, r4.xyzx
                  max r3.w, r3.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.x, l(0.000000), r3.w
                
                #line 168
                  max r4.y, cb1[1].y, l(1.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r4.y
                  exp r3.w, r3.w  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r3.w, r3.w, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r5.y, r3.w, r4.x  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r4.wwww, r5.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[31].xyzx
                  add r3.w, r4.x, cb0[31].w
                  add r3.w, r4.y, r3.w
                  mul r4.xyz, r3.wwww, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r3.w, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.w, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[32].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r4.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 324
                  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 338
                eq r2.w, cb0[37].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[36].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[35].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[34].xyzx
                  add r4.x, r4.x, cb0[34].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[35].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[36].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[41].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[40].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[39].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[38].xyzx
                  add r4.x, r4.x, cb0[38].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[39].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[40].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[45].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[43].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[44].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[44].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[43].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r4.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r5.x, r4.xyzx, r4.xyzx
                  rsq r5.x, r5.x
                  mul r4.xyz, r4.xyzx, r5.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.x, r2.xyzx, r4.xyzx
                  max r4.x, r4.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r4.y, l(0.000000), r4.x
                
                #line 168
                  max r4.z, cb1[1].y, l(1.000000)
                  log r4.x, r4.x
                  mul r4.x, r4.x, r4.z
                  exp r4.x, r4.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r4.x, r4.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r4.x, r4.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r4.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r5.xyz, r1.xyzx, cb0[42].xyzx
                  add r4.x, r4.x, cb0[42].w
                  add r4.x, r4.y, r4.x
                  mul r4.xyz, r4.xxxx, r5.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r5.x, r2.w, cb0[45].x  // f<0:NaN:Inf>
                  mad r5.x, -r5.x, r5.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r5.y, l(0.000000), r5.x
                  div r2.w, r2.w, r5.x  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[43].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r2.w, r2.w, r5.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r3.w, -r3.w, l(57.295780), l(1.000000)
                  add r5.x, -cb0[44].w, l(1.000000)
                  div r3.w, r3.w, r5.x
                  add r3.w, -r3.w, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.w, r2.w, r3.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r4.xyz, r4.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r3.xyzx, r4.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].z, l(1.000000)
                if_nz r2.w
                
                #line 253
                  add r4.xyz, v1.xyzx, -cb0[47].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r4.xyz, r4.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r4.xyzx, cb0[48].xyzx  // spotFactor<0:NaN:Inf>
                  add r4.w, -|r3.w|, l(1.000000)
                  sqrt r4.w, r4.w
                  mad r5.x, |r3.w|, l(-0.018729), l(0.074261)
                  mad r5.x, r5.x, |r3.w|, l(-0.212114)
                  mad r5.x, r5.x, |r3.w|, l(1.570729)
                  mul r5.y, r4.w, r5.x
                  mad r5.y, r5.y, l(-2.000000), l(3.141593)
                  lt r3.w, r3.w, -r3.w
                  and r3.w, r3.w, r5.y
                  mad r3.w, r5.x, r4.w, r3.w
                  mul r4.w, r3.w, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r4.w, cb0[48].w, r4.w
                
                #line 156
                  dp3 r5.x, r0.xyzx, -r4.xyzx
                  max r5.x, r5.x, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                  lt r5.y, l(0.000000), r5.x
                  mul r6.x, r5.x, cb0[47].x  // diffuse<0:NaN:Inf>
                  dp3 r5.x, r4.xyzx, r0.xyzx
                  add r5.x, r5.x, r5.x
                  mad r0.xyz, r0.xyzx, -r5.xxxx, r4.xyzx
                  dp3 r4.x, r0.xyzx, r0.xyzx
                  rsq r4.x, r4.x
                  mul r0.xyz, r0.xyzx, r4.xxxx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r2.xyzx, r0.xyzx
                  max r0.x, r0.x, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                  lt r0.y, l(0.000000), r0.x
                
                #line 168
                  max r0.z, cb1[1].y, l(1.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r0.z
                  exp r0.x, r0.x  // specularFactor<0:Inf:[0f,1.#INFf]>
                  mul r0.x, r0.x, cb1[1].x  // specular<0:NaN:Inf>
                
                #line 166
                  and r6.y, r0.x, r0.y  // specular<0:NaN:Inf>
                
                #line 158
                  and r0.xy, r5.yyyy, r6.xyxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 173
                  mul r1.xyz, r1.xyzx, cb0[46].xyzx
                  add r0.x, r0.x, cb0[46].w
                  add r0.x, r0.y, r0.x
                  mul r0.xyz, r0.xxxx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                  div r1.x, r2.w, cb0[49].x  // f<0:NaN:Inf>
                  mad r1.x, -r1.x, r1.x, l(1.000000)  // denom<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                  div r1.x, r2.w, r1.x  // d<0:NaN:Inf>
                  add r1.x, r1.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r1.x, r1.x, r1.x
                  div r1.x, cb0[47].x, r1.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 102
                  and r1.x, r1.x, r1.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 276
                  mad r1.y, -r3.w, l(57.295780), l(1.000000)
                  add r1.z, -cb0[48].w, l(1.000000)
                  div r1.y, r1.y, r1.z
                  add r1.y, -r1.y, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r1.x, r1.y, r1.x
                  mul r0.xyz, r0.xyzx, r1.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 260
                  and r0.xyz, r0.xyzx, r4.wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 340
                  add r3.xyz, r0.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                lt r0.x, l(0.000000), cb0[50].y
                sqrt r0.y, r0.w  // distToEye<0:NaN:Inf>
                
                #line 135 "IncLights.fx"
                add r0.y, r0.y, -cb0[50].x
                div_sat r0.y, r0.y, cb0[50].y  // fogLerp<0:[0f,1f]>
                add r1.xyz, -r3.xyzx, cb0[51].xyzx
                mad r0.yzw, r0.yyyy, r1.xxyz, r3.xxyz  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 584 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBasic.fx"
                movc o0.xyz, r0.xxxx, r0.yzwy, r3.xyzx  // PSPositionNormalTextureTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 591
                mov o0.w, r1.w  // PSPositionNormalTextureTangent<3:Inf>
                ret 
                // Approximately 592 instruction slots used
                            
            };
        }

    }

}

