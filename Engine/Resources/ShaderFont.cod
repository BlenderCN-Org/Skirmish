//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float4  gColor;                     // Offset:  128, size:   16
}

//
// 4 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D gTexture;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 FontDrawer
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4 gColor;                     // Offset:  128 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // textureIndex             0     z         2     NONE   float     z 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o2.x <- <VSFont return value>.tex.x; o2.y <- <VSFont return value>.tex.y; o2.z <- <VSFont return value>.textureIndex; 
                //   o1.x <- <VSFont return value>.positionWorld.x; o1.y <- <VSFont return value>.positionWorld.y; o1.z <- <VSFont return value>.positionWorld.z; 
                //   o0.x <- <VSFont return value>.positionHomogeneous.x; o0.y <- <VSFont return value>.positionHomogeneous.y; o0.z <- <VSFont return value>.positionHomogeneous.z; o0.w <- <VSFont return value>.positionHomogeneous.w
                //
                #line 17 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderFont.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw
                dp4 o0.y, r0.xyzw, cb0[5].xyzw
                dp4 o0.z, r0.xyzw, cb0[6].xyzw
                dp4 o0.w, r0.xyzw, cb0[7].xyzw
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 21
                mov o2.xy, v1.xyxx
                mov o2.z, l(0)
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4 gColor;                     // Offset:  128 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTexture                          texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // textureIndex             0     z         2     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[9], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.positionWorld.x; v1.y <- input.positionWorld.y; v1.z <- input.positionWorld.z; 
                //   v2.x <- input.tex.x; v2.y <- input.tex.y; v2.z <- input.textureIndex; 
                //   o0.x <- <PSFont return value>.x; o0.y <- <PSFont return value>.y; o0.z <- <PSFont return value>.z; o0.w <- <PSFont return value>.w
                //
                #line 31 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderFont.fx"
                mov r0.w, l(0)
                
                #line 26
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0  // r1.x <- litColor.x; r1.y <- litColor.y; r1.z <- litColor.z; r1.w <- litColor.w
                ne r2.x, r1.w, l(0.000000)
                mul r3.xyzw, r1.xyzw, cb0[8].xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                mov r0.xyz, r1.xyzx
                movc o0.xyzw, r2.xxxx, r3.xyzw, r0.xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
        }

    }

}

