//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorldViewProjection;      // Offset:    0, size:   64
    float3  gEyePositionWorld;          // Offset:   64, size:   12
    DirectionalLight gDirLights[3];     // Offset:   80, size:  144
    PointLight gPointLights[4];         // Offset:  224, size:  192
    SpotLight gSpotLights[4];           // Offset:  416, size:  256
    float   gFogStart;                  // Offset:  672, size:    4
    float   gFogRange;                  // Offset:  676, size:    4
    float4  gFogColor;                  // Offset:  688, size:   16
}

//
// 6 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
TextureCube gCubemap;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 ForwardCubemap
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //   float3 gEyePositionWorld;          // Offset:   64 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:   80
                //       float Ambient;                 // Offset:   92
                //       float Diffuse;                 // Offset:   96
                //       float3 Direction;              // Offset:  100
                //       float CastShadow;              // Offset:  112
                //       float Enabled;                 // Offset:  116
                //       float Pad1;                    // Offset:  120
                //       float Pad2;                    // Offset:  124
                //
                //   } gDirLights[3];                   // Offset:   80 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  224
                //       float Ambient;                 // Offset:  236
                //       float Diffuse;                 // Offset:  240
                //       float3 Position;               // Offset:  244
                //       float Radius;                  // Offset:  256
                //       float CastShadow;              // Offset:  260
                //       float Enabled;                 // Offset:  264
                //       float Pad1;                    // Offset:  268
                //
                //   } gPointLights[4];                 // Offset:  224 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  416
                //       float Ambient;                 // Offset:  428
                //       float Diffuse;                 // Offset:  432
                //       float3 Position;               // Offset:  436
                //       float3 Direction;              // Offset:  448
                //       float Angle;                   // Offset:  460
                //       float Radius;                  // Offset:  464
                //       float CastShadow;              // Offset:  468
                //       float Enabled;                 // Offset:  472
                //       float Pad1;                    // Offset:  476
                //
                //   } gSpotLights[4];                  // Offset:  416 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  672 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  676 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  688 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_temps 2
                
                #line 23 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[3].xyzw  // output<2:NaN:Inf>
                
                #line 26
                mov o0.xyzw, r1.xyzz  // VSCubic<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, v0.xyzx  // VSCubic<4,5,6>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:   64 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:   80
                //       float Ambient;                 // Offset:   92
                //       float Diffuse;                 // Offset:   96
                //       float3 Direction;              // Offset:  100
                //       float CastShadow;              // Offset:  112
                //       float Enabled;                 // Offset:  116
                //       float Pad1;                    // Offset:  120
                //       float Pad2;                    // Offset:  124
                //
                //   } gDirLights[3];                   // Offset:   80 Size:   144
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  224
                //       float Ambient;                 // Offset:  236
                //       float Diffuse;                 // Offset:  240
                //       float3 Position;               // Offset:  244
                //       float Radius;                  // Offset:  256
                //       float CastShadow;              // Offset:  260
                //       float Enabled;                 // Offset:  264
                //       float Pad1;                    // Offset:  268
                //
                //   } gPointLights[4];                 // Offset:  224 Size:   192
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  416
                //       float Ambient;                 // Offset:  428
                //       float Diffuse;                 // Offset:  432
                //       float3 Position;               // Offset:  436
                //       float3 Direction;              // Offset:  448
                //       float Angle;                   // Offset:  460
                //       float Radius;                  // Offset:  464
                //       float CastShadow;              // Offset:  468
                //       float Enabled;                 // Offset:  472
                //       float Pad1;                    // Offset:  476
                //
                //   } gSpotLights[4];                  // Offset:  416 Size:   256
                //   float gFogStart;                   // Offset:  672 Size:     4
                //   float gFogRange;                   // Offset:  676 Size:     4
                //   float4 gFogColor;                  // Offset:  688 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gCubemap                          texture  float4        cube    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[44], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texturecube (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 31 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                sample_indexable(texturecube)(float,float,float,float) r0.xyzw, v1.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 307 "IncLights.fx"
                eq r1.x, cb0[7].y, l(1.000000)
                if_nz r1.x
                
                #line 175
                  mul r1.xyz, r0.xyzx, cb0[5].xyzx
                  mul r1.xyz, r1.xyzx, cb0[5].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r1.xyzx
                  min r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  eq r1.w, cb0[7].x, l(1.000000)
                
                #line 129
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, l(-1.#IND00, -1.#IND00, 0.000000, 0.000000), t1.xxxx, s1, l(-1.#IND00)  // percentLit<0:[0f,1f]>
                
                #line 209
                  mul r2.xyz, r1.xyzx, r2.xxxx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 309
                  mov r1.w, r0.w
                else 
                  mov r1.xyzw, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f,3: 0f>
                endif 
                eq r2.x, cb0[10].y, l(1.000000)
                if_nz r2.x
                
                #line 175
                  mul r2.xyz, r0.xyzx, cb0[8].xyzx
                  mul r2.xyz, r2.xyzx, cb0[8].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.xyz, r2.xyzx
                  mul r2.xyz, r2.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r2.xyz, r2.xyzx
                  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  eq r2.w, cb0[10].x, l(1.000000)
                
                #line 129
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, l(-1.#IND00, -1.#IND00, 0.000000, 0.000000), t1.xxxx, s1, l(-1.#IND00)  // percentLit<0:[0f,1f]>
                
                #line 209
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 309
                  mov r2.w, r0.w
                  add r1.xyzw, r1.xyzw, r2.xyzw  // litColor<0:[0f,2f],1:[0f,2f],2:[0f,2f],3:NaN:Inf>
                endif 
                eq r2.x, cb0[13].y, l(1.000000)
                if_nz r2.x
                
                #line 175
                  mul r2.xyz, r0.xyzx, cb0[11].xyzx
                  mul r2.xyz, r2.xyzx, cb0[11].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.xyz, r2.xyzx
                  mul r2.xyz, r2.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r2.xyz, r2.xyzx
                  min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  eq r2.w, cb0[13].x, l(1.000000)
                
                #line 129
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, l(-1.#IND00, -1.#IND00, 0.000000, 0.000000), t1.xxxx, s1, l(-1.#IND00)  // percentLit<0:[0f,1f]>
                
                #line 209
                  mul r3.xyz, r2.xyzx, r3.xxxx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                  movc r2.xyz, r2.wwww, r3.xyzx, r2.xyzx  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 309
                  mov r2.w, r0.w
                  add r1.xyzw, r1.xyzw, r2.xyzw  // litColor<0:[0f,3f],1:[0f,3f],2:[0f,3f],3:NaN:Inf>
                endif 
                
                #line 325
                eq r2.x, cb0[16].z, l(1.000000)
                if_nz r2.x
                
                #line 224
                  add r2.xyz, v1.xyzx, -cb0[15].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.x, r2.xyzx, r2.xyzx
                  sqrt r2.x, r2.x  // distance<0:NaN:Inf>
                
                #line 175
                  mul r2.yzw, r0.xxyz, cb0[14].xxyz
                  mul r2.yzw, r2.yyzw, cb0[14].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r2.yzw, r2.yyzw
                  min r3.xyz, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.y, r2.x, cb0[16].x  // f<0:NaN:Inf>
                  mad r2.y, -r2.y, r2.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r2.z, l(0.000000), r2.y
                  div r2.x, r2.x, r2.y  // d<0:NaN:Inf>
                  add r2.x, r2.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.x, r2.x, r2.x
                  div r2.x, cb0[15].x, r2.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.x, r2.x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 242
                  mov r3.w, r0.w
                
                #line 327
                  mad r1.xyzw, r3.xyzw, r2.xxxx, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[19].z, l(1.000000)
                if_nz r2.x
                
                #line 224
                  add r2.xyz, v1.xyzx, -cb0[18].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.x, r2.xyzx, r2.xyzx
                  sqrt r2.x, r2.x  // distance<0:NaN:Inf>
                
                #line 175
                  mul r2.yzw, r0.xxyz, cb0[17].xxyz
                  mul r2.yzw, r2.yyzw, cb0[17].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r2.yzw, r2.yyzw
                  min r3.xyz, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.y, r2.x, cb0[19].x  // f<0:NaN:Inf>
                  mad r2.y, -r2.y, r2.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r2.z, l(0.000000), r2.y
                  div r2.x, r2.x, r2.y  // d<0:NaN:Inf>
                  add r2.x, r2.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.x, r2.x, r2.x
                  div r2.x, cb0[18].x, r2.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.x, r2.x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 242
                  mov r3.w, r0.w
                
                #line 327
                  mad r1.xyzw, r3.xyzw, r2.xxxx, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[22].z, l(1.000000)
                if_nz r2.x
                
                #line 224
                  add r2.xyz, v1.xyzx, -cb0[21].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.x, r2.xyzx, r2.xyzx
                  sqrt r2.x, r2.x  // distance<0:NaN:Inf>
                
                #line 175
                  mul r2.yzw, r0.xxyz, cb0[20].xxyz
                  mul r2.yzw, r2.yyzw, cb0[20].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r2.yzw, r2.yyzw
                  min r3.xyz, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.y, r2.x, cb0[22].x  // f<0:NaN:Inf>
                  mad r2.y, -r2.y, r2.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r2.z, l(0.000000), r2.y
                  div r2.x, r2.x, r2.y  // d<0:NaN:Inf>
                  add r2.x, r2.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.x, r2.x, r2.x
                  div r2.x, cb0[21].x, r2.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.x, r2.x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 242
                  mov r3.w, r0.w
                
                #line 327
                  mad r1.xyzw, r3.xyzw, r2.xxxx, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[25].z, l(1.000000)
                if_nz r2.x
                
                #line 224
                  add r2.xyz, v1.xyzx, -cb0[24].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.x, r2.xyzx, r2.xyzx
                  sqrt r2.x, r2.x  // distance<0:NaN:Inf>
                
                #line 175
                  mul r2.yzw, r0.xxyz, cb0[23].xxyz
                  mul r2.yzw, r2.yyzw, cb0[23].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r2.yzw, r2.yyzw
                  min r3.xyz, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.y, r2.x, cb0[25].x  // f<0:NaN:Inf>
                  mad r2.y, -r2.y, r2.y, l(1.000000)  // denom<0:NaN:Inf>
                  lt r2.z, l(0.000000), r2.y
                  div r2.x, r2.x, r2.y  // d<0:NaN:Inf>
                  add r2.x, r2.x, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.x, r2.x, r2.x
                  div r2.x, cb0[24].x, r2.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.x, r2.x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 242
                  mov r3.w, r0.w
                
                #line 327
                  mad r1.xyzw, r3.xyzw, r2.xxxx, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 341
                eq r2.x, cb0[29].z, l(1.000000)
                if_nz r2.x
                
                #line 256
                  add r2.xyz, v1.xyzx, -cb0[27].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r2.xyzx, r2.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r2.xyz, r2.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r2.xyzx, cb0[28].xyzx  // spotFactor<0:NaN:Inf>
                  add r2.y, -|r2.x|, l(1.000000)
                  sqrt r2.y, r2.y
                  mad r2.z, |r2.x|, l(-0.018729), l(0.074261)
                  mad r2.z, r2.z, |r2.x|, l(-0.212114)
                  mad r2.z, r2.z, |r2.x|, l(1.570729)
                  mul r3.x, r2.y, r2.z
                  mad r3.x, r3.x, l(-2.000000), l(3.141593)
                  lt r2.x, r2.x, -r2.x
                  and r2.x, r2.x, r3.x
                  mad r2.x, r2.z, r2.y, r2.x
                  mul r2.y, r2.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.y, cb0[28].w, r2.y
                
                #line 175
                  mul r3.xyz, r0.xyzx, cb0[26].xyzx
                  mul r3.xyz, r3.xyzx, cb0[26].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.z, r2.w, cb0[29].x  // f<0:NaN:Inf>
                  mad r2.z, -r2.z, r2.z, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r2.z
                  div r2.z, r2.w, r2.z  // d<0:NaN:Inf>
                  add r2.z, r2.z, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.z, r2.z, r2.z
                  div r2.z, cb0[27].x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.z, r2.z, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 279
                  mad r2.x, -r2.x, l(57.295780), l(1.000000)
                  add r2.w, -cb0[28].w, l(1.000000)
                  div r2.x, r2.x, r2.w
                  add r2.x, -r2.x, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.x, r2.x, r2.z
                  mov r3.w, r0.w
                  mul r3.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 263
                  and r2.xyzw, r2.yyyy, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 343
                  add r1.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[33].z, l(1.000000)
                if_nz r2.x
                
                #line 256
                  add r2.xyz, v1.xyzx, -cb0[31].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r2.xyzx, r2.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r2.xyz, r2.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r2.xyzx, cb0[32].xyzx  // spotFactor<0:NaN:Inf>
                  add r2.y, -|r2.x|, l(1.000000)
                  sqrt r2.y, r2.y
                  mad r2.z, |r2.x|, l(-0.018729), l(0.074261)
                  mad r2.z, r2.z, |r2.x|, l(-0.212114)
                  mad r2.z, r2.z, |r2.x|, l(1.570729)
                  mul r3.x, r2.y, r2.z
                  mad r3.x, r3.x, l(-2.000000), l(3.141593)
                  lt r2.x, r2.x, -r2.x
                  and r2.x, r2.x, r3.x
                  mad r2.x, r2.z, r2.y, r2.x
                  mul r2.y, r2.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.y, cb0[32].w, r2.y
                
                #line 175
                  mul r3.xyz, r0.xyzx, cb0[30].xyzx
                  mul r3.xyz, r3.xyzx, cb0[30].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.z, r2.w, cb0[33].x  // f<0:NaN:Inf>
                  mad r2.z, -r2.z, r2.z, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r2.z
                  div r2.z, r2.w, r2.z  // d<0:NaN:Inf>
                  add r2.z, r2.z, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.z, r2.z, r2.z
                  div r2.z, cb0[31].x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.z, r2.z, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 279
                  mad r2.x, -r2.x, l(57.295780), l(1.000000)
                  add r2.w, -cb0[32].w, l(1.000000)
                  div r2.x, r2.x, r2.w
                  add r2.x, -r2.x, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.x, r2.x, r2.z
                  mov r3.w, r0.w
                  mul r3.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 263
                  and r2.xyzw, r2.yyyy, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 343
                  add r1.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[37].z, l(1.000000)
                if_nz r2.x
                
                #line 256
                  add r2.xyz, v1.xyzx, -cb0[35].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r2.xyzx, r2.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r2.xyz, r2.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r2.xyzx, cb0[36].xyzx  // spotFactor<0:NaN:Inf>
                  add r2.y, -|r2.x|, l(1.000000)
                  sqrt r2.y, r2.y
                  mad r2.z, |r2.x|, l(-0.018729), l(0.074261)
                  mad r2.z, r2.z, |r2.x|, l(-0.212114)
                  mad r2.z, r2.z, |r2.x|, l(1.570729)
                  mul r3.x, r2.y, r2.z
                  mad r3.x, r3.x, l(-2.000000), l(3.141593)
                  lt r2.x, r2.x, -r2.x
                  and r2.x, r2.x, r3.x
                  mad r2.x, r2.z, r2.y, r2.x
                  mul r2.y, r2.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.y, cb0[36].w, r2.y
                
                #line 175
                  mul r3.xyz, r0.xyzx, cb0[34].xyzx
                  mul r3.xyz, r3.xyzx, cb0[34].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.z, r2.w, cb0[37].x  // f<0:NaN:Inf>
                  mad r2.z, -r2.z, r2.z, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r2.z
                  div r2.z, r2.w, r2.z  // d<0:NaN:Inf>
                  add r2.z, r2.z, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.z, r2.z, r2.z
                  div r2.z, cb0[35].x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.z, r2.z, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 279
                  mad r2.x, -r2.x, l(57.295780), l(1.000000)
                  add r2.w, -cb0[36].w, l(1.000000)
                  div r2.x, r2.x, r2.w
                  add r2.x, -r2.x, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.x, r2.x, r2.z
                  mov r3.w, r0.w
                  mul r3.xyzw, r2.xxxx, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 263
                  and r2.xyzw, r2.yyyy, r3.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 343
                  add r1.xyzw, r1.xyzw, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                eq r2.x, cb0[41].z, l(1.000000)
                if_nz r2.x
                
                #line 256
                  add r2.xyz, v1.xyzx, -cb0[39].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r2.xyzx, r2.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r2.xyz, r2.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.x, r2.xyzx, cb0[40].xyzx  // spotFactor<0:NaN:Inf>
                  add r2.y, -|r2.x|, l(1.000000)
                  sqrt r2.y, r2.y
                  mad r2.z, |r2.x|, l(-0.018729), l(0.074261)
                  mad r2.z, r2.z, |r2.x|, l(-0.212114)
                  mad r2.z, r2.z, |r2.x|, l(1.570729)
                  mul r3.x, r2.y, r2.z
                  mad r3.x, r3.x, l(-2.000000), l(3.141593)
                  lt r2.x, r2.x, -r2.x
                  and r2.x, r2.x, r3.x
                  mad r2.x, r2.z, r2.y, r2.x
                  mul r2.y, r2.x, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                  ge r2.y, cb0[40].w, r2.y
                
                #line 175
                  mul r3.xyz, r0.xyzx, cb0[38].xyzx
                  mul r3.xyz, r3.xyzx, cb0[38].wwww  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r0.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                  div r2.z, r2.w, cb0[41].x  // f<0:NaN:Inf>
                  mad r2.z, -r2.z, r2.z, l(1.000000)  // denom<0:NaN:Inf>
                  lt r3.x, l(0.000000), r2.z
                  div r2.z, r2.w, r2.z  // d<0:NaN:Inf>
                  add r2.z, r2.z, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.z, r2.z, r2.z
                  div r2.z, cb0[39].x, r2.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                  and r2.z, r2.z, r3.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 279
                  mad r2.x, -r2.x, l(57.295780), l(1.000000)
                  add r2.w, -cb0[40].w, l(1.000000)
                  div r2.x, r2.x, r2.w
                  add r2.x, -r2.x, l(1.000000)  // attenuationS<0:NaN:Inf>
                  mul r2.x, r2.x, r2.z
                  mul r0.xyzw, r0.xyzw, r2.xxxx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 263
                  and r0.xyzw, r0.xyzw, r2.yyyy  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 343
                  add r1.xyzw, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                endif 
                
                #line 48 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                lt r0.x, l(0.000000), cb0[42].y
                add r0.yzw, -v1.xxyz, cb0[4].xxyz  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.y, r0.yzwy, r0.yzwy
                sqrt r0.y, r0.y  // distToEye<0:NaN:Inf>
                
                #line 137 "IncLights.fx"
                add r0.y, r0.y, -cb0[42].x
                div_sat r0.y, r0.y, cb0[42].y  // fogLerp<0:[0f,1f]>
                add r2.xyzw, -r1.xyzw, cb0[43].xyzw
                mad r2.xyzw, r0.yyyy, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 48 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                movc o0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // PSForwardCubic<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 56
                ret 
                // Approximately 316 instruction slots used
                            
            };
        }

    }

    technique11 DeferredCubemap
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //   float3 gEyePositionWorld;          // Offset:   64 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:   80
                //       float Ambient;                 // Offset:   92
                //       float Diffuse;                 // Offset:   96
                //       float3 Direction;              // Offset:  100
                //       float CastShadow;              // Offset:  112
                //       float Enabled;                 // Offset:  116
                //       float Pad1;                    // Offset:  120
                //       float Pad2;                    // Offset:  124
                //
                //   } gDirLights[3];                   // Offset:   80 Size:   144 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  224
                //       float Ambient;                 // Offset:  236
                //       float Diffuse;                 // Offset:  240
                //       float3 Position;               // Offset:  244
                //       float Radius;                  // Offset:  256
                //       float CastShadow;              // Offset:  260
                //       float Enabled;                 // Offset:  264
                //       float Pad1;                    // Offset:  268
                //
                //   } gPointLights[4];                 // Offset:  224 Size:   192 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  416
                //       float Ambient;                 // Offset:  428
                //       float Diffuse;                 // Offset:  432
                //       float3 Position;               // Offset:  436
                //       float3 Direction;              // Offset:  448
                //       float Angle;                   // Offset:  460
                //       float Radius;                  // Offset:  464
                //       float CastShadow;              // Offset:  468
                //       float Enabled;                 // Offset:  472
                //       float Pad1;                    // Offset:  476
                //
                //   } gSpotLights[4];                  // Offset:  416 Size:   256 [unused]
                //   float gFogStart;                   // Offset:  672 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  676 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  688 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_temps 2
                
                #line 23 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[3].xyzw  // output<2:NaN:Inf>
                
                #line 26
                mov o0.xyzw, r1.xyzz  // VSCubic<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, v0.xyzx  // VSCubic<4,5,6>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // gCubemap                          texture  float4        cube    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float     zw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                // SV_TARGET                1   xyzw        1   TARGET  float   xyzw
                // SV_TARGET                2   xyzw        2   TARGET  float   xyzw
                // SV_TARGET                3   xyzw        3   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texturecube (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.zw, position
                dcl_input_ps linear v1.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                
                #line 63 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderCubemap.fx"
                sample_indexable(texturecube)(float,float,float,float) o0.xyzw, v1.xyzx, t0.xyzw, s0  // PSDeferredCubic<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 71
                mov o1.xyzw, l(0,0,0,0)  // PSDeferredCubic<4: 0f,5: 0f,6: 0f,7: 0f>
                
                #line 68
                div o2.w, v0.z, v0.w  // PSDeferredCubic<11:NaN:Inf>
                
                #line 71
                mov o2.xyz, v1.xyzx  // PSDeferredCubic<8,9,10>
                mov o3.xyzw, l(0,0,0,0)  // PSDeferredCubic<12: 0f,13: 0f,14: 0f,15: 0f>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

}

