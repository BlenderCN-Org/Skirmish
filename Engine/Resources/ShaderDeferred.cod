//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float4x4 gLightViewProjection;      // Offset:  128, size:   64
    float3  gEyePositionWorld;          // Offset:  192, size:   12
    DirectionalLight gDirLight;         // Offset:  208, size:   48
    PointLight gPointLight;             // Offset:  256, size:   48
    SpotLight gSpotLight;               // Offset:  304, size:   64
    float   gFogStart;                  // Offset:  368, size:    4
    float   gFogRange;                  // Offset:  372, size:    4
    float4  gFogColor;                  // Offset:  384, size:   16
}

//
// 10 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonLessEqual
{
    Filter   = uint(COMPARISON_MIN_MAG_MIP_LINEAR /* 149 */);
    AddressU = uint(MIRROR /* 2 */);
    AddressV = uint(MIRROR /* 2 */);
    ComparisonFunc = uint(LESS_EQUAL /* 4 */);
};
Texture2D gTG1Map;
Texture2D gTG2Map;
Texture2D gTG3Map;
Texture2D gShadowMapStatic;
Texture2D gShadowMapDynamic;
Texture2D gLightMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 DeferredDirectionalLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o1.x <- <VSDirectionalLight return value>.tex.x; o1.y <- <VSDirectionalLight return value>.tex.y; 
                //   o0.x <- <VSDirectionalLight return value>.positionHomogeneous.x; o0.y <- <VSDirectionalLight return value>.positionHomogeneous.y; o0.z <- <VSDirectionalLight return value>.positionHomogeneous.z; o0.w <- <VSDirectionalLight return value>.positionHomogeneous.w
                //
                #line 52 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw
                dp4 o0.y, r0.xyzw, cb0[5].xyzw
                dp4 o0.z, r0.xyzw, cb0[6].xyzw
                dp4 o0.w, r0.xyzw, cb0[7].xyzw
                
                #line 55
                mov o1.xy, v1.xyxx
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // SamplerComparisonLessEqual      sampler_c      NA          NA    1        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // gShadowMapStatic                  texture  float4          2d    3        1
                // gShadowMapDynamic                 texture  float4          2d    4        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 6
                dcl_indexableTemp x0[16], 4
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o0.x <- <PSDirectionalLight return value>.x; o0.y <- <PSDirectionalLight return value>.y; o0.z <- <PSDirectionalLight return value>.z; o0.w <- <PSDirectionalLight return value>.w
                //
                #line 73 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                mov x0[0].xy, l(0.277074,0.695145,0,0)
                mov x0[1].xy, l(0.187426,-0.025616,0,0)
                mov x0[2].xy, l(-0.338193,0.871317,0,0)
                mov x0[3].xy, l(0.586775,0.108747,0,0)
                mov x0[4].xy, l(-0.307870,0.188545,0,0)
                mov x0[5].xy, l(0.799340,0.459509,0,0)
                mov x0[6].xy, l(-0.092426,0.526015,0,0)
                mov x0[7].xy, l(0.365755,-0.532960,0,0)
                mov x0[8].xy, l(-0.382972,-0.247617,0,0)
                mov x0[9].xy, l(-0.010851,-0.696630,0,0)
                mov x0[10].xy, l(0.840415,-0.354392,0,0)
                mov x0[11].xy, l(-0.518616,-0.762403,0,0)
                mov x0[12].xy, l(-0.813579,0.232849,0,0)
                mov x0[13].xy, l(-0.784665,-0.243493,0,0)
                mov x0[14].xy, l(0.992051,0.085516,0,0)
                mov x0[15].xy, l(-0.687256,0.671134,0,0)
                
                #line 89 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t2.xyzw, s0  // r1.x <- depth.x; r1.y <- depth.y; r1.z <- depth.z; r1.w <- depth.w
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t1.xyzw, s0  // r2.x <- normal.x; r2.y <- normal.y; r2.z <- normal.z; r2.w <- normal.w
                mov r3.xyz, r1.xyzx
                mov r3.w, l(1.000000)
                dp4 r4.x, r3.xyzw, cb0[8].xyzw  // r4.x <- lPosition.x
                dp4 r4.y, r3.xyzw, cb0[9].xyzw  // r4.y <- lPosition.y
                dp4 r4.z, r3.xyzw, cb0[10].xyzw  // r4.z <- lPosition.z
                dp4 r3.x, r3.xyzw, cb0[11].xyzw  // r3.x <- lPosition.w
                add r1.xyz, -r1.xyzx, cb0[12].xyzx
                dp3 r3.y, r1.xyzx, r1.xyzx
                rsq r3.y, r3.y
                mul r1.xyz, r1.xyzx, r3.yyyy  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 206 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                eq r3.y, cb0[15].x, l(1.000000)
                
                #line 128
                div r3.z, r4.x, r3.x
                mad r5.x, r3.z, l(0.500000), l(0.500000)  // r5.x <- tex.x
                div r3.z, -r4.y, r3.x
                mad r5.y, r3.z, l(0.500000), l(0.500000)  // r5.y <- tex.y
                div r3.x, r4.z, r3.x
                add r3.x, r3.x, l(-0.001000)  // r3.x <- z
                mov r3.zw, l(0,0,0,0)  // r3.z <- shadow; r3.w <- i
                loop 
                  uge r4.x, r3.w, l(16)
                  breakc_nz r4.x
                  mov r4.xy, x0[r3.w + 0].xyxx
                  mad r4.xy, r4.xyxx, l(0.001429, 0.001429, 0.000000, 0.000000), r5.xyxx  // r4.x <- stc.x; r4.y <- stc.y
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r4.xyxx, t3.xxxx, s1, r3.x
                  ne r4.z, l(0.000000, 0.000000, 0.000000, 0.000000), r4.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t4.xxxx, s1, r3.x
                  ne r4.x, l(0.000000, 0.000000, 0.000000, 0.000000), r4.x
                  not r4.xz, r4.xxzx
                  or r4.x, r4.x, r4.z
                
                #line 139
                  add r4.y, r3.z, l(0.800000)  // r4.y <- shadow
                  movc r3.z, r4.x, r4.y, r3.z  // r3.z <- shadow
                  iadd r3.w, r3.w, l(1)
                endloop 
                mad r3.x, -r3.z, l(0.062500), l(1.000000)  // r3.x <- <CalcShadowFactor return value>
                
                #line 209
                movc r3.x, r3.y, r3.x, l(1.000000)  // r3.x <- shadowFactor
                
                #line 169
                dp3 r3.y, r2.xyzx, -cb0[14].yzwy
                max r3.y, r3.y, l(0.000000)  // r3.y <- diffuseFactor
                lt r3.z, l(0.000000), r3.y
                mul r3.y, r3.y, cb0[14].x
                mul r3.x, r3.x, r3.y  // r3.x <- diffuse
                dp3 r3.w, cb0[14].yzwy, r2.xyzx
                add r3.w, r3.w, r3.w
                mad r2.xyz, r2.xyzx, -r3.wwww, cb0[14].yzwy
                dp3 r3.w, r2.xyzx, r2.xyzx
                rsq r3.w, r3.w
                mul r2.xyz, r2.xyzx, r3.wwww  // r2.x <- lightReflection.x; r2.y <- lightReflection.y; r2.z <- lightReflection.z
                dp3 r1.x, r1.xyzx, r2.xyzx
                max r1.x, r1.x, l(0.000000)  // r1.x <- specularFactor
                lt r1.y, l(0.000000), r1.x
                
                #line 181
                max r1.z, r2.w, l(1.000000)
                log r1.x, r1.x
                mul r1.x, r1.x, r1.z
                exp r1.x, r1.x  // r1.x <- specularFactor
                mul r1.x, r1.x, r1.w  // r1.x <- specular
                and r3.y, r1.x, r1.y  // r3.y <- specular
                and r1.xy, r3.xyxx, r3.zzzz  // r1.x <- diffuse; r1.y <- specular
                mul r0.xyz, r0.xyzx, cb0[13].xyzx
                add r1.x, r1.x, cb0[13].w
                add r1.x, r1.y, r1.x
                mul o0.xyz, r0.xyzx, r1.xxxx
                
                #line 109 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov o0.w, r0.w
                ret 
                // Approximately 81 instruction slots used
                            
            };
        }

    }

    technique11 DeferredPointLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   o2.x <- <VSPointLight return value>.positionScreen.x; o2.y <- <VSPointLight return value>.positionScreen.y; o2.z <- <VSPointLight return value>.positionScreen.z; o2.w <- <VSPointLight return value>.positionScreen.w; 
                //   o1.x <- <VSPointLight return value>.positionWorld.x; o1.y <- <VSPointLight return value>.positionWorld.y; o1.z <- <VSPointLight return value>.positionWorld.z; 
                //   o0.x <- <VSPointLight return value>.positionHomogeneous.x; o0.y <- <VSPointLight return value>.positionHomogeneous.y; o0.z <- <VSPointLight return value>.positionHomogeneous.z; o0.w <- <VSPointLight return value>.positionHomogeneous.w
                //
                #line 61 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.positionHomogeneous.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.positionHomogeneous.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.positionHomogeneous.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.positionHomogeneous.w
                
                #line 65
                mov o0.xyzw, r1.xyzw
                mov o2.xyzw, r1.xyzw
                
                #line 62
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 65
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TEXCOORD                 0   xyzw        2     NONE   float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.positionWorld.x; v1.y <- input.positionWorld.y; v1.z <- input.positionWorld.z; 
                //   v2.x <- input.positionScreen.x; v2.y <- input.positionScreen.y; v2.z <- input.positionScreen.z; v2.w <- input.positionScreen.w; 
                //   o0.x <- <PSPointLight return value>.x; o0.y <- <PSPointLight return value>.y; o0.z <- <PSPointLight return value>.z; o0.w <- <PSPointLight return value>.w
                //
                #line 113 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // r0.x <- input.positionScreen.x; r0.y <- input.positionScreen.y
                
                #line 117
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- tex.x; r0.y <- tex.y
                
                #line 121
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t2.xyzw, s0  // r1.x <- depth.x; r1.y <- depth.y; r1.z <- depth.z; r1.w <- depth.w
                add r2.xyz, -r1.xyzx, cb0[12].xyzx
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 120
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z; r3.w <- normal.w
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w
                
                #line 236 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[17].yzwy  // r1.x <- lightDirection.x; r1.y <- lightDirection.y; r1.z <- lightDirection.z
                dp3 r2.w, r1.xyzx, r1.xyzx
                sqrt r2.w, r2.w  // r2.w <- distance
                div r1.xyz, r1.xyzx, r2.wwww
                
                #line 175
                dp3 r4.x, r1.xyzx, r3.xyzx
                add r4.x, r4.x, r4.x
                mad r4.xyz, r3.xyzx, -r4.xxxx, r1.xyzx
                
                #line 169
                dp3 r1.x, r3.xyzx, -r1.xyzx
                
                #line 181
                max r1.y, r3.w, l(1.000000)
                
                #line 175
                dp3 r1.z, r4.xyzx, r4.xyzx
                rsq r1.z, r1.z
                mul r3.xyz, r1.zzzz, r4.xyzx  // r3.x <- lightReflection.x; r3.y <- lightReflection.y; r3.z <- lightReflection.z
                dp3 r1.z, r2.xyzx, r3.xyzx
                
                #line 169
                max r1.xz, r1.xxzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // r1.x <- diffuseFactor; r1.z <- specularFactor
                
                #line 181
                log r2.x, r1.z
                lt r1.z, l(0.000000), r1.z
                mul r1.y, r1.y, r2.x
                exp r1.y, r1.y  // r1.y <- specularFactor
                mul r1.y, r1.y, r1.w  // r1.y <- specular
                and r2.y, r1.y, r1.z  // r2.y <- specular
                
                #line 171
                lt r1.y, l(0.000000), r1.x
                mul r2.x, r1.x, cb0[17].x  // r2.x <- diffuse
                
                #line 184
                and r1.xy, r2.xyxx, r1.yyyy  // r1.x <- diffuse; r1.y <- specular
                add r1.x, r1.x, cb0[16].w
                add r1.x, r1.y, r1.x
                mul r0.xyz, r0.xyzx, cb0[16].xyzx
                
                #line 134 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov o0.w, r0.w
                
                #line 186 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                mul r0.xyz, r1.xxxx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 109
                div r0.w, r2.w, cb0[18].x  // r0.w <- f
                mad r0.w, -r0.w, r0.w, l(1.000000)  // r0.w <- denom
                
                #line 113
                div r1.x, r2.w, r0.w  // r1.x <- d
                lt r0.w, l(0.000000), r0.w
                
                #line 114
                add r1.x, r1.x, l(1.000000)  // r1.x <- dn
                mul r1.x, r1.x, r1.x
                div r1.x, cb0[17].x, r1.x  // r1.x <- <CalcSphericAttenuation return value>
                
                #line 121
                and r0.w, r0.w, r1.x  // r0.w <- <CalcSphericAttenuation return value>
                
                #line 255
                mul o0.xyz, r0.wwww, r0.xyzx
                
                #line 134 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 49 instruction slots used
                            
            };
        }

    }

    technique11 DeferredSpotLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   o2.x <- <VSSpotLight return value>.positionScreen.x; o2.y <- <VSSpotLight return value>.positionScreen.y; o2.z <- <VSSpotLight return value>.positionScreen.z; o2.w <- <VSSpotLight return value>.positionScreen.w; 
                //   o1.x <- <VSSpotLight return value>.positionWorld.x; o1.y <- <VSSpotLight return value>.positionWorld.y; o1.z <- <VSSpotLight return value>.positionWorld.z; 
                //   o0.x <- <VSSpotLight return value>.positionHomogeneous.x; o0.y <- <VSSpotLight return value>.positionHomogeneous.y; o0.z <- <VSSpotLight return value>.positionHomogeneous.z; o0.w <- <VSSpotLight return value>.positionHomogeneous.w
                //
                #line 71 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- output.positionHomogeneous.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- output.positionHomogeneous.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- output.positionHomogeneous.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- output.positionHomogeneous.w
                
                #line 75
                mov o0.xyzw, r1.xyzw
                mov o2.xyzw, r1.xyzw
                
                #line 72
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 75
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TEXCOORD                 0   xyzw        2     NONE   float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.positionWorld.x; v1.y <- input.positionWorld.y; v1.z <- input.positionWorld.z; 
                //   v2.x <- input.positionScreen.x; v2.y <- input.positionScreen.y; v2.z <- input.positionScreen.z; v2.w <- input.positionScreen.w; 
                //   o0.x <- <PSSpotLight return value>.x; o0.y <- <PSSpotLight return value>.y; o0.z <- <PSSpotLight return value>.z; o0.w <- <PSSpotLight return value>.w
                //
                #line 138 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // r0.x <- input.positionScreen.x; r0.y <- input.positionScreen.y
                
                #line 142
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- tex.x; r0.y <- tex.y
                
                #line 146
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t2.xyzw, s0  // r1.x <- depth.x; r1.y <- depth.y; r1.z <- depth.z; r1.w <- depth.w
                add r2.xyz, -r1.xyzx, cb0[12].xyzx
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // r2.x <- toEye.x; r2.y <- toEye.y; r2.z <- toEye.z
                
                #line 145
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z; r3.w <- normal.w
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w
                
                #line 269 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[20].yzwy  // r1.x <- lightDirection.x; r1.y <- lightDirection.y; r1.z <- lightDirection.z
                dp3 r2.w, r1.xyzx, r1.xyzx
                sqrt r2.w, r2.w  // r2.w <- distance
                div r1.xyz, r1.xyzx, r2.wwww
                
                #line 175
                dp3 r4.x, r1.xyzx, r3.xyzx
                add r4.x, r4.x, r4.x
                mad r4.xyz, r3.xyzx, -r4.xxxx, r1.xyzx
                dp3 r4.w, r4.xyzx, r4.xyzx
                rsq r4.w, r4.w
                mul r4.xyz, r4.wwww, r4.xyzx  // r4.x <- lightReflection.x; r4.y <- lightReflection.y; r4.z <- lightReflection.z
                dp3 r2.x, r2.xyzx, r4.xyzx
                max r2.x, r2.x, l(0.000000)  // r2.x <- specularFactor
                
                #line 181
                log r2.y, r2.x
                lt r2.x, l(0.000000), r2.x
                max r2.z, r3.w, l(1.000000)
                
                #line 169
                dp3 r3.x, r3.xyzx, -r1.xyzx
                
                #line 273
                dp3 r1.x, r1.xyzx, cb0[21].xyzx  // r1.x <- spotFactor
                
                #line 169
                max r1.y, r3.x, l(0.000000)  // r1.y <- diffuseFactor
                
                #line 181
                mul r1.z, r2.y, r2.z
                exp r1.z, r1.z  // r1.z <- specularFactor
                mul r1.z, r1.z, r1.w  // r1.z <- specular
                and r2.y, r1.z, r2.x  // r2.y <- specular
                
                #line 171
                lt r1.z, l(0.000000), r1.y
                mul r2.x, r1.y, cb0[20].x  // r2.x <- diffuse
                
                #line 184
                and r1.yz, r2.xxyx, r1.zzzz  // r1.y <- diffuse; r1.z <- specular
                add r1.y, r1.y, cb0[19].w
                add r1.y, r1.z, r1.y
                mul r0.xyz, r0.xyzx, cb0[19].xyzx
                
                #line 159 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov o0.w, r0.w
                
                #line 186 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                mul r0.xyz, r1.yyyy, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 109
                div r0.w, r2.w, cb0[22].x  // r0.w <- f
                mad r0.w, -r0.w, r0.w, l(1.000000)  // r0.w <- denom
                
                #line 113
                div r1.y, r2.w, r0.w  // r1.y <- d
                lt r0.w, l(0.000000), r0.w
                
                #line 114
                add r1.y, r1.y, l(1.000000)  // r1.y <- dn
                mul r1.y, r1.y, r1.y
                div r1.y, cb0[20].x, r1.y  // r1.y <- <CalcSphericAttenuation return value>
                
                #line 121
                and r0.w, r0.w, r1.y  // r0.w <- <CalcSphericAttenuation return value>
                
                #line 274
                mad r1.y, |r1.x|, l(-0.018729), l(0.074261)
                mad r1.y, r1.y, |r1.x|, l(-0.212114)
                mad r1.y, r1.y, |r1.x|, l(1.570729)
                add r1.z, -|r1.x|, l(1.000000)
                lt r1.x, r1.x, -r1.x
                sqrt r1.z, r1.z
                mul r1.w, r1.z, r1.y
                mad r1.w, r1.w, l(-2.000000), l(3.141593)
                and r1.x, r1.x, r1.w
                mad r1.x, r1.y, r1.z, r1.x
                
                #line 293
                mad r1.y, -r1.x, l(57.295780), l(1.000000)
                
                #line 274
                mul r1.x, r1.x, l(57.295780)  // r1.x <- lightToSurfaceAngle
                ge r1.x, cb0[21].w, r1.x
                
                #line 293
                add r1.z, -cb0[21].w, l(1.000000)
                div r1.y, r1.y, r1.z
                add r1.y, -r1.y, l(1.000000)  // r1.y <- attenuationS
                mul r0.w, r0.w, r1.y
                mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                and o0.xyz, r0.xyzx, r1.xxxx
                
                #line 159 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 69 instruction slots used
                            
            };
        }

    }

    technique11 DeferredCombineLights
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  372 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o1.x <- <VSCombineLights return value>.tex.x; o1.y <- <VSCombineLights return value>.tex.y; 
                //   o0.x <- <VSCombineLights return value>.position.x; o0.y <- <VSCombineLights return value>.position.y; o0.z <- <VSCombineLights return value>.position.z; o0.w <- <VSCombineLights return value>.position.w
                //
                #line 81 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw
                dp4 o0.y, r0.xyzw, cb0[5].xyzw
                dp4 o0.z, r0.xyzw, cb0[6].xyzw
                dp4 o0.w, r0.xyzw, cb0[7].xyzw
                
                #line 84
                mov o1.xy, v1.xyxx
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gLightViewProjection;     // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //       float Pad1;                    // Offset:  248
                //       float Pad2;                    // Offset:  252
                //
                //   } gDirLight;                       // Offset:  208 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  256
                //       float Ambient;                 // Offset:  268
                //       float Diffuse;                 // Offset:  272
                //       float3 Position;               // Offset:  276
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gPointLight;                     // Offset:  256 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  304
                //       float Ambient;                 // Offset:  316
                //       float Diffuse;                 // Offset:  320
                //       float3 Position;               // Offset:  324
                //       float3 Direction;              // Offset:  336
                //       float Angle;                   // Offset:  348
                //       float Radius;                  // Offset:  352
                //       float CastShadow;              // Offset:  356
                //       float Enabled;                 // Offset:  360
                //       float Pad1;                    // Offset:  364
                //
                //   } gSpotLight;                      // Offset:  304 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  368 Size:     4
                //   float gFogRange;                   // Offset:  372 Size:     4
                //   float4 gFogColor;                  // Offset:  384 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG3Map                           texture  float4          2d    2        1
                // gLightMap                         texture  float4          2d    5        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[25], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t5
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o0.x <- <PSCombineLights return value>.x; o0.y <- <PSCombineLights return value>.y; o0.z <- <PSCombineLights return value>.z; o0.w <- <PSCombineLights return value>.w
                //
                #line 163 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0  // r0.x <- depth.x; r0.y <- depth.y; r0.z <- depth.z
                
                #line 170
                add r0.xyz, -r0.xyzx, cb0[12].xyzx  // r0.x <- toEyeWorld.x; r0.y <- toEyeWorld.y; r0.z <- toEyeWorld.z
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // r0.x <- distToEye
                
                #line 147 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                add r0.x, r0.x, -cb0[23].x
                div_sat r0.x, r0.x, cb0[23].y  // r0.x <- fogLerp
                
                #line 164 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t5.xyzw, s0  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w
                
                #line 149 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                add r0.yzw, -r1.xxyz, cb0[24].xxyz
                mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // r0.x <- <ComputeFog return value>.x; r0.y <- <ComputeFog return value>.y; r0.z <- <ComputeFog return value>.z
                
                #line 168 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                lt r0.w, l(0.000000), cb0[23].y
                
                #line 174
                movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
                mov o0.w, r1.w
                ret 
                // Approximately 13 instruction slots used
                            
            };
        }

    }

}

