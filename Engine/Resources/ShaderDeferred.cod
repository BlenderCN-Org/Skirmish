//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float3  gEyePositionWorld;          // Offset:  128, size:   12
    DirectionalLight gDirLight;         // Offset:  144, size:   48
    PointLight gPointLight;             // Offset:  192, size:   48
    SpotLight gSpotLight;               // Offset:  240, size:   64
    float   gFogStart;                  // Offset:  304, size:    4
    float   gFogRange;                  // Offset:  308, size:    4
    float4  gFogColor;                  // Offset:  320, size:   16
}

//
// 10 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2D gTG1Map;
Texture2D gTG2Map;
Texture2D gTG3Map;
Texture2D gTG4Map;
Texture2D gShadowMap;
Texture2D gLightMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 DeferredDirectionalLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 51 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSDirectionalLight<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSDirectionalLight<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSDirectionalLight<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSDirectionalLight<3:NaN:Inf>
                
                #line 54
                mov o1.xy, v1.xyxx  // VSDirectionalLight<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // gTG4Map                           texture  float4          2d    3        1
                // gShadowMap                        texture  float4          2d    4        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 4
                
                #line 93 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t3.xyzw, s0  // shadow<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 129 "IncLights.fx"
                add r1.xyzw, r0.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t4.xxxx, s1, r0.z  // percentLit<0:[0f,1f]>
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t4.xxxx, s1, r0.z
                add r1.x, r1.y, r1.x  // percentLit<0:[0f,2f]>
                add r2.xyzw, r0.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t4.xxxx, s1, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.zwzz, t4.xxxx, s1, r0.z
                add r1.x, r1.y, r1.x  // percentLit<0:[0f,3f]>
                add r1.x, r1.z, r1.x  // percentLit<0:[0f,4f]>
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r0.xyxx, t4.xxxx, s1, r0.z
                add r1.x, r1.y, r1.x  // percentLit<0:[0f,5f]>
                add r2.xyzw, r0.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t4.xxxx, s1, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.zwzz, t4.xxxx, s1, r0.z
                add r1.x, r1.y, r1.x  // percentLit<0:[0f,6f]>
                add r1.x, r1.z, r1.x  // percentLit<0:[0f,7f]>
                add r2.xyzw, r0.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t4.xxxx, s1, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t4.xxxx, s1, r0.z
                add r0.x, r0.x, r1.x  // percentLit<0:[0f,8f]>
                add r0.x, r0.y, r0.x  // percentLit<0:[0f,9f]>
                
                #line 91 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 95
                add r1.xyz, -r1.xyzx, cb0[8].xyzx
                dp3 r0.y, r1.xyzx, r1.xyzx
                rsq r0.y, r0.y
                mul r1.xyz, r0.yyyy, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 92
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 164 "IncLights.fx"
                dp3 r0.y, cb0[10].yzwy, r2.xyzx
                add r0.y, r0.y, r0.y
                mad r3.xyz, r2.xyzx, -r0.yyyy, cb0[10].yzwy
                dp3 r0.y, r3.xyzx, r3.xyzx
                rsq r0.y, r0.y
                mul r3.xyz, r0.yyyy, r3.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.y, r1.xyzx, r3.xyzx
                max r0.y, r0.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 170
                log r0.z, r0.y
                lt r0.y, l(0.000000), r0.y
                max r1.x, r2.w, l(1.000000)
                
                #line 158
                dp3 r1.y, r2.xyzx, -cb0[10].yzwy
                max r1.y, r1.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 170
                mul r0.z, r0.z, r1.x
                exp r0.z, r0.z  // specularFactor<0:NaN:Inf>
                mul r0.z, r0.z, r0.w  // specular<0:NaN:Inf>
                
                #line 168
                and r2.y, r0.z, r0.y  // specular<0:NaN:Inf>
                
                #line 160
                lt r0.y, l(0.000000), r1.y
                mul r2.x, r1.y, cb0[10].x  // diffuse<0:NaN:Inf>
                and r0.yz, r2.xxyx, r0.yyyy  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 175
                add r0.y, r0.y, cb0[9].w
                add r0.y, r0.z, r0.y
                
                #line 90 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 175 "IncLights.fx"
                mul r1.xyz, r1.xyzx, cb0[9].xyzx
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov o0.w, r1.w  // PSDirectionalLight<3:Inf>
                
                #line 175 "IncLights.fx"
                mul r0.yzw, r0.yyyy, r1.xxyz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                log r0.yzw, r0.yyzw
                
                #line 133
                mul r0.xyzw, r0.xyzw, l(0.111111, 0.454545, 0.454545, 0.454545)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 176
                exp r0.yzw, r0.yyzw
                min r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 209
                mul r1.xyz, r0.xxxx, r0.yzwy  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 205
                eq r0.x, cb0[11].x, l(1.000000)
                movc o0.xyz, r0.xxxx, r1.xyzx, r0.yzwy  // PSDirectionalLight<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 108 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 62 instruction slots used
                            
            };
        }

    }

    technique11 DeferredPointLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 60 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 64
                mov o0.xyzw, r1.xyzw  // VSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSPointLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 61
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPointLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPointLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPointLight<6:NaN:Inf>
                
                #line 64
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // gTG4Map                           texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 114 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 118
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 122
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 125
                add r2.xyz, -r1.xyzx, cb0[8].xyzx
                
                #line 224 "IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[13].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                
                #line 125 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 225 "IncLights.fx"
                dp3 r0.z, r1.xyzx, r1.xyzx
                sqrt r0.z, r0.z  // distance<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.zzzz  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 164 "IncLights.fx"
                dp3 r0.w, r1.xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r4.xyz, r3.xyzx, -r0.wwww, r1.xyzx
                
                #line 158
                dp3 r0.w, r3.xyzx, -r1.xyzx
                
                #line 170
                max r1.x, r3.w, l(1.000000)
                
                #line 158
                max r0.w, r0.w, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 164
                dp3 r1.y, r4.xyzx, r4.xyzx
                rsq r1.y, r1.y
                mul r1.yzw, r1.yyyy, r4.xxyz  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.y, r2.xyzx, r1.yzwy
                max r1.y, r1.y, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 170
                log r1.z, r1.y
                lt r1.y, l(0.000000), r1.y
                mul r1.x, r1.z, r1.x
                exp r1.x, r1.x  // specularFactor<0:NaN:Inf>
                
                #line 123 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.z, r0.xyxx, t3.xywz, s0  // shadow<3:Inf>
                
                #line 120
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 171 "IncLights.fx"
                mul r0.x, r1.x, r1.z  // specular<0:NaN:Inf>
                
                #line 168
                and r0.y, r0.x, r1.y  // specular<0:NaN:Inf>
                
                #line 160
                lt r1.x, l(0.000000), r0.w
                mul r0.x, r0.w, cb0[13].x  // diffuse<0:NaN:Inf>
                and r0.xy, r0.xyxx, r1.xxxx  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 175
                add r0.x, r0.x, cb0[12].w
                add r0.x, r0.y, r0.x
                mul r1.xyz, r2.xyzx, cb0[12].xyzx
                mul r0.xyw, r0.xxxx, r1.xyxz  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                log r0.xyw, r0.xyxw
                mul r0.xyw, r0.xyxw, l(0.454545, 0.454545, 0.000000, 0.454545)
                exp r0.xyw, r0.xyxw
                min r2.xyz, r0.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                div r0.x, r0.z, cb0[14].x  // f<0:NaN:Inf>
                mad r0.x, -r0.x, r0.x, l(1.000000)  // denom<0:NaN:Inf>
                
                #line 106
                div r0.y, r0.z, r0.x  // d<0:NaN:Inf>
                lt r0.x, l(0.000000), r0.x
                
                #line 107
                add r0.y, r0.y, l(1.000000)  // dn<0:NaN:Inf>
                mul r0.y, r0.y, r0.y
                div r0.y, cb0[13].x, r0.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                and r0.x, r0.y, r0.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 242
                mul o0.xyzw, r0.xxxx, r2.xyzw  // PSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 136 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 54 instruction slots used
                            
            };
        }

    }

    technique11 DeferredSpotLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 70 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 74
                mov o0.xyzw, r1.xyzw  // VSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSSpotLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 71
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSSpotLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSSpotLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSSpotLight<6:NaN:Inf>
                
                #line 74
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // gTG4Map                           texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 142 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 146
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 150
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 153
                add r2.xyz, -r1.xyzx, cb0[8].xyzx
                
                #line 256 "IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[16].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                
                #line 153 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 257 "IncLights.fx"
                dp3 r0.z, r1.xyzx, r1.xyzx
                sqrt r0.z, r0.z  // distance<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.zzzz  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 149 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 164 "IncLights.fx"
                dp3 r0.w, r1.xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r4.xyz, r3.xyzx, -r0.wwww, r1.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // lightReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r2.xyzx, r4.xyzx
                max r0.w, r0.w, l(0.000000)  // specularFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 170
                log r1.w, r0.w
                lt r0.w, l(0.000000), r0.w
                max r2.x, r3.w, l(1.000000)
                
                #line 158
                dp3 r2.y, r3.xyzx, -r1.xyzx
                
                #line 260
                dp3 r1.x, r1.xyzx, cb0[17].xyzx  // spotFactor<0:NaN:Inf>
                
                #line 158
                max r1.y, r2.y, l(0.000000)  // diffuseFactor<0:Inf:[-0f,1.#INFf]>
                
                #line 170
                mul r1.z, r1.w, r2.x
                exp r1.z, r1.z  // specularFactor<0:NaN:Inf>
                
                #line 151 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.w, r0.xyxx, t3.xyzw, s0  // shadow<3:Inf>
                
                #line 148
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 171 "IncLights.fx"
                mul r0.x, r1.z, r1.w  // specular<0:NaN:Inf>
                
                #line 168
                and r0.y, r0.x, r0.w  // specular<0:NaN:Inf>
                
                #line 160
                lt r0.w, l(0.000000), r1.y
                mul r0.x, r1.y, cb0[16].x  // diffuse<0:NaN:Inf>
                and r0.xy, r0.xyxx, r0.wwww  // diffuse<0:NaN:Inf>, specular<0:NaN:Inf>
                
                #line 175
                add r0.x, r0.x, cb0[15].w
                add r0.x, r0.y, r0.x
                mul r1.yzw, r2.xxyz, cb0[15].xxyz
                mul r0.xyw, r0.xxxx, r1.yzyw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                log r0.xyw, r0.xyxw
                mul r0.xyw, r0.xyxw, l(0.454545, 0.454545, 0.000000, 0.454545)
                exp r0.xyw, r0.xyxw
                min r2.xyz, r0.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)  // litColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 102
                div r0.x, r0.z, cb0[18].x  // f<0:NaN:Inf>
                mad r0.x, -r0.x, r0.x, l(1.000000)  // denom<0:NaN:Inf>
                
                #line 106
                div r0.y, r0.z, r0.x  // d<0:NaN:Inf>
                lt r0.x, l(0.000000), r0.x
                
                #line 107
                add r0.y, r0.y, l(1.000000)  // dn<0:NaN:Inf>
                mul r0.y, r0.y, r0.y
                div r0.y, cb0[16].x, r0.y  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 104
                and r0.x, r0.y, r0.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 261
                mad r0.y, |r1.x|, l(-0.018729), l(0.074261)
                mad r0.y, r0.y, |r1.x|, l(-0.212114)
                mad r0.y, r0.y, |r1.x|, l(1.570729)
                add r0.z, -|r1.x|, l(1.000000)
                lt r0.w, r1.x, -r1.x
                sqrt r0.z, r0.z
                mul r1.x, r0.z, r0.y
                mad r1.x, r1.x, l(-2.000000), l(3.141593)
                and r0.w, r0.w, r1.x
                mad r0.y, r0.y, r0.z, r0.w
                
                #line 279
                mad r0.z, -r0.y, l(57.295780), l(1.000000)
                
                #line 261
                mul r0.y, r0.y, l(57.295780)  // lightToSurfaceAngle<0:NaN:Inf>
                ge r0.y, cb0[17].w, r0.y
                
                #line 279
                add r0.w, -cb0[17].w, l(1.000000)
                div r0.z, r0.z, r0.w
                add r0.z, -r0.z, l(1.000000)  // attenuationS<0:NaN:Inf>
                mul r0.x, r0.z, r0.x
                mul r1.xyzw, r0.xxxx, r2.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 263
                and o0.xyzw, r0.yyyy, r1.xyzw  // PSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 164 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 73 instruction slots used
                            
            };
        }

    }

    technique11 DeferredCombineLights
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  308 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 80 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSCombineLights<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSCombineLights<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSCombineLights<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSCombineLights<3:NaN:Inf>
                
                #line 83
                mov o1.xy, v1.xyxx  // VSCombineLights<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //       float Pad1;                    // Offset:  184
                //       float Pad2;                    // Offset:  188
                //
                //   } gDirLight;                       // Offset:  144 Size:    48 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //       float Pad1;                    // Offset:  236
                //
                //   } gPointLight;                     // Offset:  192 Size:    48 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Angle;                   // Offset:  284
                //       float Radius;                  // Offset:  288
                //       float CastShadow;              // Offset:  292
                //       float Enabled;                 // Offset:  296
                //       float Pad1;                    // Offset:  300
                //
                //   } gSpotLight;                      // Offset:  240 Size:    64 [unused]
                //   float gFogStart;                   // Offset:  304 Size:     4
                //   float gFogRange;                   // Offset:  308 Size:     4
                //   float4 gFogColor;                  // Offset:  320 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG3Map                           texture  float4          2d    2        1
                // gLightMap                         texture  float4          2d    5        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t5
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 168 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 173
                add r0.xyz, -r0.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 137 "IncLights.fx"
                add r0.x, r0.x, -cb0[19].x
                div_sat r0.x, r0.x, cb0[19].y  // fogLerp<0:[0f,1f]>
                
                #line 169 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t5.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 139 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[20].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 171 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                lt r2.x, l(0.000000), cb0[19].y
                movc o0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // PSCombineLights<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 179
                ret 
                // Approximately 12 instruction slots used
                            
            };
        }

    }

}

