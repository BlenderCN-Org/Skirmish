//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float3  gEyePositionWorld;          // Offset:  128, size:   12
    DirectionalLight gDirLight;         // Offset:  144, size:   40
    PointLight gPointLight;             // Offset:  192, size:   44
    SpotLight gSpotLight;               // Offset:  240, size:   68
    float   gFogStart;                  // Offset:  308, size:    4
    float   gFogRange;                  // Offset:  312, size:    4
    float4  gFogColor;                  // Offset:  320, size:   16
}

//
// 18 local object(s)
//
RasterizerState RasterizerSolid
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(BACK /* 3 */);
};
RasterizerState RasterizerWireFrame
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState RasterizerDepth
{
    DepthBias = uint(0x000186a0);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
};
RasterizerState RasterizerNoCull
{
    CullMode = uint(NONE /* 1 */);
};
DepthStencilState StencilEnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilDisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilLessEqualDSS
{
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerFont
{
};
SamplerState SamplerPoint
{
};
SamplerComparisonState SamplerShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2D gTG1Map;
Texture2D gTG2Map;
Texture2D gTG3Map;
Texture2D gTG4Map;
Texture2D gShadowMap;
Texture2D gLightMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 DeferredDirectionalLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 51 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSDirectionalLight<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSDirectionalLight<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSDirectionalLight<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSDirectionalLight<3:NaN:Inf>
                
                #line 54
                mov o1.xy, v1.xyxx  // VSDirectionalLight<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // gTG4Map                           texture  float4          2d    3        1
                // gShadowMap                        texture  float4          2d    4        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 90 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t3.xyzw, s0  // shadow<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.xyz, -r1.xyzx, cb0[8].xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191 "IncLights.fx"
                dp3 r0.w, r2.xyzx, -cb0[10].yzwy  // diffuseFactor<0:NaN:Inf>
                lt r1.w, l(0.000000), r0.w
                mul r4.xyz, cb0[9].xyzx, cb0[10].xxxx
                mul r4.xyz, r0.wwww, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, cb0[10].yzwy, r2.xyzx
                add r0.w, r0.w, r0.w
                mad r2.xyz, r2.xyzx, -r0.wwww, cb0[10].yzwy
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r2.xyzx  // specFactor<0:NaN:Inf>
                lt r1.x, l(0.000000), r0.w
                
                #line 202
                max r1.y, r2.w, l(1.000000)
                log r0.w, |r0.w|
                mul r0.w, r0.w, r1.y
                exp r0.w, r0.w  // specFactor<0:NaN:Inf>
                mul r2.xyz, r3.wwww, cb0[9].xyzx
                mul r2.xyz, r0.wwww, r2.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 200
                and r1.xyz, r1.xxxx, r2.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 193
                and r2.xyz, r1.wwww, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r1.xyz, r1.xyzx, r1.wwww  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                mad r2.xyz, cb0[9].xyzx, cb0[9].wwww, r2.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 231
                eq r0.w, cb0[11].x, l(1.000000)
                if_nz r0.w
                
                #line 162
                  add r2.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t4.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r2.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r2.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r2.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t4.xxxx, s1, r3.z
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 166
                  mul r0.w, r0.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 235
                  mul r1.xyz, r0.wwww, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 231
                endif 
                
                #line 107 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mul o0.xyz, r0.xyzx, r1.xyzx  // PSDirectionalLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 110
                mov o0.w, l(1.000000)  // PSDirectionalLight<3: 1f>
                ret 
                // Approximately 60 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 DeferredPointLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 60 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 64
                mov o0.xyzw, r1.xyzw  // VSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSPointLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 61
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPointLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPointLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPointLight<6:NaN:Inf>
                
                #line 64
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 116 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 120
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 123
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 126
                add r2.xyz, -r1.xyzx, cb0[8].xyzx
                
                #line 249 "IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[13].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                
                #line 126 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 250 "IncLights.fx"
                dp3 r0.z, r1.xyzx, r1.xyzx
                sqrt r0.z, r0.z  // distance<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.zzzz  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r0.xyw, r0.xyxx, t0.xywz, s0  // diffuseColor<0:Inf,1:Inf,2:Inf>
                
                #line 197 "IncLights.fx"
                dp3 r1.w, r1.xyzx, r3.xyzx
                add r1.w, r1.w, r1.w
                mad r4.xyz, r3.xyzx, -r1.wwww, r1.xyzx
                
                #line 191
                dp3 r1.x, r3.xyzx, -r1.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 202
                max r1.y, r3.w, l(1.000000)
                
                #line 197
                dp3 r1.z, r4.xyzx, r4.xyzx
                rsq r1.z, r1.z
                mul r3.xyz, r1.zzzz, r4.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.z, r2.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                
                #line 202
                log r1.w, |r1.z|
                lt r1.z, l(0.000000), r1.z
                mul r1.y, r1.w, r1.y
                exp r1.y, r1.y  // specFactor<0:NaN:Inf>
                mul r2.xyz, r1.yyyy, cb0[12].xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 200
                and r1.yzw, r1.zzzz, r2.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 193
                lt r2.x, l(0.000000), r1.x
                and r1.yzw, r1.yyzw, r2.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r2.yzw, cb0[12].xxyz, cb0[13].xxxx
                mul r2.yzw, r1.xxxx, r2.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r2.xyz, r2.yzwy, r2.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                mad r2.xyz, cb0[12].xyzx, cb0[12].wwww, r2.xyzx
                add r1.xyz, r1.yzwy, r2.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 135
                div r1.w, r0.z, cb0[14].x  // f<0:NaN:Inf>
                mad r1.w, -r1.w, r1.w, l(1.000000)  // denom<0:NaN:Inf>
                
                #line 139
                div r0.z, r0.z, r1.w  // d<0:NaN:Inf>
                lt r1.w, l(0.000000), r1.w
                
                #line 140
                add r0.z, r0.z, l(1.000000)  // dn<0:NaN:Inf>
                mul r0.z, r0.z, r0.z
                div r0.z, cb0[13].x, r0.z  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 137
                and r0.z, r0.z, r1.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 266
                mul r1.xyz, r0.zzzz, r1.xyzx  // ComputePointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mul o0.xyz, r0.xywx, r1.xyzx  // PSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                mov o0.w, l(1.000000)  // PSPointLight<3: 1f>
                ret 
                // Approximately 49 instruction slots used
                            
            };
        }

    }

    technique11 DeferredSpotLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 70 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 74
                mov o0.xyzw, r1.xyzw  // VSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSSpotLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 71
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSSpotLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSSpotLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSSpotLight<6:NaN:Inf>
                
                #line 74
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG1Map                           texture  float4          2d    0        1
                // gTG2Map                           texture  float4          2d    1        1
                // gTG3Map                           texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 145 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 149
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 152
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 155
                add r2.xyz, -r1.xyzx, cb0[8].xyzx
                
                #line 277 "IncLights.fx"
                add r1.xyz, r1.xyzx, -cb0[16].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                
                #line 155 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                dp3 r0.z, r2.xyzx, r2.xyzx
                rsq r0.z, r0.z
                mul r2.xyz, r0.zzzz, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf>
                
                #line 197 "IncLights.fx"
                dp3 r0.w, cb0[17].xyzx, r3.xyzx
                add r0.w, r0.w, r0.w
                mad r4.xyz, r3.xyzx, -r0.wwww, cb0[17].xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r2.xyzx, r4.xyzx  // specFactor<0:NaN:Inf>
                
                #line 202
                log r1.w, |r0.w|
                lt r0.w, l(0.000000), r0.w
                max r2.x, r3.w, l(1.000000)
                
                #line 191
                dp3 r2.y, r3.xyzx, -cb0[17].xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 202
                mul r1.w, r1.w, r2.x
                exp r1.w, r1.w  // specFactor<0:NaN:Inf>
                mul r2.xzw, r1.wwww, cb0[15].xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 200
                and r2.xzw, r0.wwww, r2.xxzw  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 193
                lt r0.w, l(0.000000), r2.y
                and r2.xzw, r2.xxzw, r0.wwww  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r3.xyz, cb0[15].xyzx, cb0[16].xxxx
                mul r3.xyz, r2.yyyy, r3.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                and r3.xyz, r0.wwww, r3.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                mad r3.xyz, cb0[15].xyzx, cb0[15].wwww, r3.xyzx
                add r2.xyz, r2.xzwx, r3.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 282
                dp3 r0.w, r1.xyzx, r1.xyzx
                
                #line 278
                dp3 r1.x, r1.xyzx, cb0[17].xyzx  // spot<0:NaN:Inf>
                lt r1.x, cb0[17].w, r1.x
                sqrt r1.y, r0.w  // distance<0:NaN:Inf>
                
                #line 288
                mad r1.y, cb0[18].y, r1.y, cb0[18].x
                mad r0.w, r0.w, cb0[18].z, r1.y  // attenuation<0:NaN:Inf>
                max r0.w, r0.w, l(1.000000)  // attenuation<0:Inf:[1f,1.#INFf]>
                
                #line 303
                div r1.yzw, r2.xxyz, r0.wwww  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 280
                and r1.xyz, r1.yzwy, r1.xxxx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 165 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mul o0.xyz, r0.xyzx, r1.xyzx  // PSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 168
                mov o0.w, l(1.000000)  // PSSpotLight<3: 1f>
                ret 
                // Approximately 46 instruction slots used
                            
            };
        }

    }

    technique11 DeferredCombineLights
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  312 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  320 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 80 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSCombineLights<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSCombineLights<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSCombineLights<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSCombineLights<3:NaN:Inf>
                
                #line 83
                mov o1.xy, v1.xyxx  // VSCombineLights<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLight;                       // Offset:  144 Size:    40 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  192
                //       float Ambient;                 // Offset:  204
                //       float Diffuse;                 // Offset:  208
                //       float3 Position;               // Offset:  212
                //       float Radius;                  // Offset:  224
                //       float CastShadow;              // Offset:  228
                //       float Enabled;                 // Offset:  232
                //
                //   } gPointLight;                     // Offset:  192 Size:    44 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  240
                //       float Ambient;                 // Offset:  252
                //       float Diffuse;                 // Offset:  256
                //       float3 Position;               // Offset:  260
                //       float3 Direction;              // Offset:  272
                //       float Spot;                    // Offset:  284
                //       float AttenuationConstant;     // Offset:  288
                //       float AttenuationLinear;       // Offset:  292
                //       float AttenuationExp;          // Offset:  296
                //       float CastShadow;              // Offset:  300
                //       float Enabled;                 // Offset:  304
                //
                //   } gSpotLight;                      // Offset:  240 Size:    68 [unused]
                //   float gFogStart;                   // Offset:  308 Size:     4
                //   float gFogRange;                   // Offset:  312 Size:     4
                //   float4 gFogColor;                  // Offset:  320 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gTG3Map                           texture  float4          2d    2        1
                // gLightMap                         texture  float4          2d    5        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[21], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t5
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 172 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf>
                
                #line 177
                add r0.xyz, -r0.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 170 "IncLights.fx"
                add r0.x, r0.x, -cb0[19].y
                div_sat r0.x, r0.x, cb0[19].z  // fogLerp<0:[0f,1f]>
                
                #line 173 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t5.xyzw, s0  // litColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 172 "IncLights.fx"
                add r2.xyzw, -r1.xyzw, cb0[20].xyzw
                mad r0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 175 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                lt r2.x, l(0.000000), cb0[19].z
                movc o0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw  // PSCombineLights<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 183
                ret 
                // Approximately 12 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

}

