//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float3  gEyePositionWorld;          // Offset:  128, size:   12
    float4  gAmbientColor;              // Offset:  144, size:   16
    DirectionalLight gDirLight;         // Offset:  160, size:   64
    PointLight gPointLight;             // Offset:  224, size:   80
    SpotLight gSpotLight;               // Offset:  304, size:   96
    float   gFogStart;                  // Offset:  400, size:    4
    float   gFogRange;                  // Offset:  404, size:    4
    float4  gFogColor;                  // Offset:  416, size:   16
}

//
// 17 local object(s)
//
RasterizerState RasterizerSolid
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(BACK /* 3 */);
};
RasterizerState RasterizerWireFrame
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState RasterizerDepth
{
    DepthBias = uint(0x000186a0);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
};
RasterizerState RasterizerNoCull
{
    CullMode = uint(NONE /* 1 */);
};
DepthStencilState StencilEnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilDisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilLessEqualDSS
{
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
BlendState BlendAdditive
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[1] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[2] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[3] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[4] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[5] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[6] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[7] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(ONE /* 2 */);
    DestBlend[1] = uint(ONE /* 2 */);
    DestBlend[2] = uint(ONE /* 2 */);
    DestBlend[3] = uint(ONE /* 2 */);
    DestBlend[4] = uint(ONE /* 2 */);
    DestBlend[5] = uint(ONE /* 2 */);
    DestBlend[6] = uint(ONE /* 2 */);
    DestBlend[7] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    BlendOp[1] = uint(ADD /* 1 */);
    BlendOp[2] = uint(ADD /* 1 */);
    BlendOp[3] = uint(ADD /* 1 */);
    BlendOp[4] = uint(ADD /* 1 */);
    BlendOp[5] = uint(ADD /* 1 */);
    BlendOp[6] = uint(ADD /* 1 */);
    BlendOp[7] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    SrcBlendAlpha[1] = uint(ZERO /* 1 */);
    SrcBlendAlpha[2] = uint(ZERO /* 1 */);
    SrcBlendAlpha[3] = uint(ZERO /* 1 */);
    SrcBlendAlpha[4] = uint(ZERO /* 1 */);
    SrcBlendAlpha[5] = uint(ZERO /* 1 */);
    SrcBlendAlpha[6] = uint(ZERO /* 1 */);
    SrcBlendAlpha[7] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[1] = uint(ZERO /* 1 */);
    DestBlendAlpha[2] = uint(ZERO /* 1 */);
    DestBlendAlpha[3] = uint(ZERO /* 1 */);
    DestBlendAlpha[4] = uint(ZERO /* 1 */);
    DestBlendAlpha[5] = uint(ZERO /* 1 */);
    DestBlendAlpha[6] = uint(ZERO /* 1 */);
    DestBlendAlpha[7] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    BlendOpAlpha[1] = uint(ADD /* 1 */);
    BlendOpAlpha[2] = uint(ADD /* 1 */);
    BlendOpAlpha[3] = uint(ADD /* 1 */);
    BlendOpAlpha[4] = uint(ADD /* 1 */);
    BlendOpAlpha[5] = uint(ADD /* 1 */);
    BlendOpAlpha[6] = uint(ADD /* 1 */);
    BlendOpAlpha[7] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerFont
{
};
SamplerState SamplerPoint
{
};
SamplerComparisonState SamplerShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2D gColorMap;
Texture2D gNormalMap;
Texture2D gDepthMap;
Texture2D gLightMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 DeferredDirectionalLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 50 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSDirectionalLight<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSDirectionalLight<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSDirectionalLight<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSDirectionalLight<3:NaN:Inf>
                
                #line 53
                mov o1.xy, v1.xyxx  // VSDirectionalLight<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gDepthMap                         texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 88 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf,3:Inf>
                eq r0.w, r0.w, l(1.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSDirectionalLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r0.w
                
                #line 96
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w
                eq r1.w, r0.w, l(0.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSDirectionalLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r1.w
                
                #line 104
                add r0.xyz, -r0.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r0.xyzx, r0.xyzx
                sqrt r1.w, r1.w  // distToEye<0:NaN:Inf>
                div r0.xyz, r0.xyzx, r1.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 296 "IncLights.fx"
                dp3 r1.w, r1.xyzx, -cb0[13].xyzx
                max r1.w, r1.w, l(0.000000)
                dp3 r2.x, -cb0[13].xyzx, -cb0[13].xyzx
                sqrt r2.x, r2.x
                mul r0.w, r0.w, r2.x
                div r0.w, r1.w, r0.w  // intensity<0:NaN:Inf>
                min r0.w, r0.w, l(1.000000)  // intensity<0:[-0f,1f]>
                
                #line 301
                lt r1.w, l(0.000000), r0.w
                
                #line 304
                dp3 r2.x, cb0[13].xyzx, r1.xyzx
                add r2.x, r2.x, r2.x
                mad r1.xyz, r1.xyzx, -r2.xxxx, cb0[13].xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r1.xyzx, r0.xyzx
                max r0.x, r0.x, l(0.000000)
                rsq r0.x, r0.x
                div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x  // specFactor<0:Inf:[0f,1.#INFf]>
                mul r2.xyz, r0.wwww, cb0[11].xyzx  // ComputeDirectionalLight2<0,1,2>
                
                #line 301
                and o0.xyzw, r1.wwww, r2.xyzw  // PSDirectionalLight<0,1,2,3:Inf:[-0f,1.#INFf]>
                
                #line 113 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 32 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 DeferredPointLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 59 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 63
                mov o0.xyzw, r1.xyzw  // VSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSPointLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 60
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSPointLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSPointLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSPointLight<6:NaN:Inf>
                
                #line 63
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gDepthMap                         texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[18], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 117 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 121
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 124
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf,3:Inf>
                eq r0.z, r1.w, l(1.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSPointLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r0.z
                
                #line 132
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w
                eq r0.w, r0.w, l(0.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSPointLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r0.w
                
                #line 140
                add r2.xyz, -r1.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r2.xyz, r2.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 322 "IncLights.fx"
                add r1.xyz, -r1.xyzx, cb0[17].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 325
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // d<0:NaN:Inf>
                
                #line 329
                lt r1.w, cb0[17].w, r0.w
                
                #line 336
                div r1.xyz, r1.xyzx, r0.wwww  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r0.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)  // intensity<0:Inf:[-0f,1.#INFf]>
                
                #line 342
                lt r3.x, l(0.000000), r2.w
                
                #line 345
                div r0.w, r0.w, cb0[17].w
                add r0.w, -r0.w, l(1.000000)
                mul r3.yzw, r0.wwww, cb0[15].xxyz
                mul r0.w, cb0[17].w, l(0.100000)
                mul r3.yzw, r0.wwww, r3.yyzw
                mul r4.xyz, r2.wwww, r3.yzwy  // light<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 348
                dp3 r0.w, -r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r2.xyzx
                max r0.x, r0.x, l(0.000000)
                rsq r0.x, r0.x
                div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x  // specFactor<0:Inf:[0f,1.#INFf]>
                
                #line 342
                and r0.xyzw, r3.xxxx, r4.xyzw  // ComputePointLight2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf:[-0f,1.#INFf]>
                
                #line 329
                movc o0.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw  // PSPointLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf:[-0f,1.#INFf]>
                
                #line 150 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 42 instruction slots used
                            
            };
        }

    }

    technique11 DeferredSpotLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xyzw        2     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyzw
                dcl_temps 2
                
                #line 69 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                
                #line 73
                mov o0.xyzw, r1.xyzw  // VSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // VSSpotLight<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                
                #line 70
                dp4 o1.x, r0.xyzw, cb0[0].xyzw  // VSSpotLight<4:NaN:Inf>
                dp4 o1.y, r0.xyzw, cb0[1].xyzw  // VSSpotLight<5:NaN:Inf>
                dp4 o1.z, r0.xyzw, cb0[2].xyzw  // VSSpotLight<6:NaN:Inf>
                
                #line 73
                ret 
                // Approximately 12 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gDepthMap                         texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // TEXCOORD                 0   xyzw        2     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 154 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                div r0.xy, v2.xyxx, v2.wwww  // input<7:NaN:Inf,8:NaN:Inf>
                
                #line 158
                mov r0.z, -r0.y
                add r0.xy, r0.xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // tex<0:NaN:Inf,1:NaN:Inf>
                
                #line 161
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf,3:Inf>
                eq r0.z, r1.w, l(1.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSSpotLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r0.z
                
                #line 169
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t1.xyzw, s0  // normal<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r0.xyzx, r0.xyzx
                sqrt r0.w, r0.w
                eq r0.w, r0.w, l(0.000000)
                mov o0.xyzw, l(1.000000,1.000000,1.000000,0)  // PSSpotLight<0: 1f,1: 1f,2: 1f,3: 0f>
                retc_nz r0.w
                
                #line 177
                add r2.xyz, -r1.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r2.xyzx, r2.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r2.xyz, r2.xyzx, r0.wwww  // toEyeWorld<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 367 "IncLights.fx"
                add r1.xyz, -r1.xyzx, cb0[22].xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 370
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // d<0:NaN:Inf>
                
                #line 374
                lt r1.w, cb0[22].w, r0.w
                
                #line 381
                div r1.xyz, r1.xyzx, r0.wwww  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 384
                dp3 r2.w, r0.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)  // intensity<0:Inf:[-0f,1.#INFf]>
                
                #line 388
                lt r3.x, l(0.000000), r2.w
                
                #line 391
                dp3 r3.y, -r1.xyzx, cb0[23].xyzx
                max r3.y, r3.y, l(0.000000)
                log r3.y, r3.y
                mul r3.y, r3.y, cb0[23].w
                exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 394
                mul r2.w, r2.w, r3.y
                div r0.w, r0.w, cb0[22].w
                add r0.w, -r0.w, l(1.000000)
                mul r3.yzw, r0.wwww, cb0[20].xxyz
                mul r0.w, cb0[22].w, l(0.100000)
                mul r3.yzw, r0.wwww, r3.yyzw
                mul r4.xyz, r2.wwww, r3.yzwy  // light<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 397
                dp3 r0.w, -r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r2.xyzx
                max r0.x, r0.x, l(0.000000)
                rsq r0.x, r0.x
                div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x  // specFactor<0:Inf:[0f,1.#INFf]>
                
                #line 388
                and r0.xyzw, r3.xxxx, r4.xyzw  // ComputeSpotLight2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf:[-0f,1.#INFf]>
                
                #line 374
                movc o0.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw  // PSSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf:[-0f,1.#INFf]>
                
                #line 187 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                ret 
                // Approximately 48 instruction slots used
                            
            };
        }

    }

    technique11 DeferredCombineLights
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12 [unused]
                //   float4 gAmbientColor;              // Offset:  144 Size:    16 [unused]
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  404 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  416 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 1
                
                #line 79 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[4].xyzw  // VSCombineLights<0:NaN:Inf>
                dp4 o0.y, r0.xyzw, cb0[5].xyzw  // VSCombineLights<1:NaN:Inf>
                dp4 o0.z, r0.xyzw, cb0[6].xyzw  // VSCombineLights<2:NaN:Inf>
                dp4 o0.w, r0.xyzw, cb0[7].xyzw  // VSCombineLights<3:NaN:Inf>
                
                #line 82
                mov o1.xy, v1.xyxx  // VSCombineLights<4,5>
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   float4 gAmbientColor;              // Offset:  144 Size:    16
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  160
                //       float4 Diffuse;                // Offset:  176
                //       float4 Specular;               // Offset:  192
                //       float3 Direction;              // Offset:  208
                //       float Padding;                 // Offset:  220
                //
                //   } gDirLight;                       // Offset:  160 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Attenuation;            // Offset:  288
                //       float Padding;                 // Offset:  300
                //
                //   } gPointLight;                     // Offset:  224 Size:    80 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  304
                //       float4 Diffuse;                // Offset:  320
                //       float4 Specular;               // Offset:  336
                //       float3 Position;               // Offset:  352
                //       float Range;                   // Offset:  364
                //       float3 Direction;              // Offset:  368
                //       float Spot;                    // Offset:  380
                //       float3 Attenuation;            // Offset:  384
                //       float Padding;                 // Offset:  396
                //
                //   } gSpotLight;                      // Offset:  304 Size:    96 [unused]
                //   float gFogStart;                   // Offset:  400 Size:     4
                //   float gFogRange;                   // Offset:  404 Size:     4
                //   float4 gFogColor;                  // Offset:  416 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerPoint                      sampler      NA          NA    0        1
                // gColorMap                         texture  float4          2d    0        1
                // gNormalMap                        texture  float4          2d    1        1
                // gDepthMap                         texture  float4          2d    2        1
                // gLightMap                         texture  float4          2d    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 4
                
                #line 191 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0  // diffuseColor<0:Inf,1:Inf,2:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t2.xyzw, s0  // depth<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 196
                eq r1.w, r1.w, l(1.000000)
                if_nz r1.w
                  mov r0.w, l(1.000000)
                  mul r2.xyzw, r0.xyzw, cb0[9].xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3>
                else 
                
                #line 202
                  sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t1.xyzw, s0  // normals<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 205
                  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t3.xyzw, s0  // lights<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 209
                  mul r0.xyz, r0.xyzx, cb0[9].xyzx
                  add r3.xyz, r3.wwww, r3.xyzx
                  add r3.xyz, r0.wwww, r3.xyzx
                  mul r0.xyz, r0.xyzx, r3.xyzx  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  lt r1.w, l(0.000000), cb0[25].y
                  add r1.xyz, -r1.xyzx, cb0[8].xyzx  // toEyeWorld<0:Inf,1:Inf,2:Inf>
                  dp3 r1.x, r1.xyzx, r1.xyzx
                  sqrt r1.x, r1.x  // distToEye<0:NaN:Inf>
                
                #line 518 "IncLights.fx"
                  add r1.x, r1.x, -cb0[25].x
                  div_sat r1.x, r1.x, cb0[25].y  // fogLerp<0:[0f,1f]>
                  mov r0.w, l(1.000000)
                  add r3.xyzw, -r0.xyzw, cb0[26].xyzw
                  mad r3.xyzw, r1.xxxx, r3.xyzw, r0.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3>
                
                #line 211 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderDeferred.fx"
                  movc r2.xyzw, r1.wwww, r3.xyzw, r0.xyzw  // color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3>
                
                #line 196
                endif 
                
                #line 220
                mov_sat o0.xyzw, r2.xyzw  // PSCombineLights<0:NaN,1:NaN,2:NaN,3:[0f,1f]>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

}

