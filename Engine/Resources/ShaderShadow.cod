//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorldViewProjection;      // Offset:    0, size:   64
}

cbuffer cbSkinned : register(b1)
{
    float4x4 gBoneTransforms[96];       // Offset:    0, size: 6144
}

//
// 4 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 20 technique(s)
    //
    technique11 ShadowMapPositionColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
                //   o0.x <- <VSSMPositionColor return value>.positionHomogeneous.x; o0.y <- <VSSMPositionColor return value>.positionHomogeneous.y; o0.z <- <VSSMPositionColor return value>.positionHomogeneous.z; o0.w <- <VSSMPositionColor return value>.positionHomogeneous.w
                //
                #line 18 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float       
                // localTransform           0   xyzw        2     NONE   float   xyzw
                // localTransform           1   xyzw        3     NONE   float   xyzw
                // localTransform           2   xyzw        4     NONE   float   xyzw
                // localTransform           3   xyzw        5     NONE   float   xyzw
                // textureIndex             0   x           6     NONE   float       
                // SV_InstanceID            0   x           7   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
                //   v2.x <- input.localTransform._m00; v2.y <- input.localTransform._m01; v2.z <- input.localTransform._m02; v2.w <- input.localTransform._m03; 
                //   v3.x <- input.localTransform._m10; v3.y <- input.localTransform._m11; v3.z <- input.localTransform._m12; v3.w <- input.localTransform._m13; 
                //   v4.x <- input.localTransform._m20; v4.y <- input.localTransform._m21; v4.z <- input.localTransform._m22; v4.w <- input.localTransform._m23; 
                //   v5.x <- input.localTransform._m30; v5.y <- input.localTransform._m31; v5.z <- input.localTransform._m32; v5.w <- input.localTransform._m33; 
                //   v6.x <- input.textureIndex; 
                //   v7.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionColorI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionColorI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionColorI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionColorI return value>.positionHomogeneous.w
                //
                #line 26 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float       
                // WEIGHTS                  0   xyz         2     NONE   float   xyz 
                // BONEINDICES              0   xyzw        3     NONE    uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
                //   v2.x <- input.weights.x; v2.y <- input.weights.y; v2.z <- input.weights.z; 
                //   v3.x <- input.boneIndices.x; v3.y <- input.boneIndices.y; v3.z <- input.boneIndices.z; v3.w <- input.boneIndices.w; 
                //   o0.x <- <VSSMPositionColorSkinned return value>.positionHomogeneous.x; o0.y <- <VSSMPositionColorSkinned return value>.positionHomogeneous.y; o0.z <- <VSSMPositionColorSkinned return value>.positionHomogeneous.z; o0.w <- <VSSMPositionColorSkinned return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x
                mov x0[1].x, v2.y
                mov x0[2].x, v2.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
                endloop 
                
                #line 45 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float       
                // WEIGHTS                  0   xyz         2     NONE   float   xyz 
                // BONEINDICES              0   xyzw        3     NONE    uint   xyzw
                // localTransform           0   xyzw        4     NONE   float   xyzw
                // localTransform           1   xyzw        5     NONE   float   xyzw
                // localTransform           2   xyzw        6     NONE   float   xyzw
                // localTransform           3   xyzw        7     NONE   float   xyzw
                // textureIndex             0   x           8     NONE   float       
                // SV_InstanceID            0   x           9   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.color.x; v1.y <- input.color.y; v1.z <- input.color.z; v1.w <- input.color.w; 
                //   v2.x <- input.weights.x; v2.y <- input.weights.y; v2.z <- input.weights.z; 
                //   v3.x <- input.boneIndices.x; v3.y <- input.boneIndices.y; v3.z <- input.boneIndices.z; v3.w <- input.boneIndices.w; 
                //   v4.x <- input.localTransform._m00; v4.y <- input.localTransform._m01; v4.z <- input.localTransform._m02; v4.w <- input.localTransform._m03; 
                //   v5.x <- input.localTransform._m10; v5.y <- input.localTransform._m11; v5.z <- input.localTransform._m12; v5.w <- input.localTransform._m13; 
                //   v6.x <- input.localTransform._m20; v6.y <- input.localTransform._m21; v6.z <- input.localTransform._m22; v6.w <- input.localTransform._m23; 
                //   v7.x <- input.localTransform._m30; v7.y <- input.localTransform._m31; v7.z <- input.localTransform._m32; v7.w <- input.localTransform._m33; 
                //   v8.x <- input.textureIndex; 
                //   v9.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionColorSkinnedI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionColorSkinnedI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionColorSkinnedI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionColorSkinnedI return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x
                mov x0[1].x, v2.y
                mov x0[2].x, v2.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
                endloop 
                
                #line 62 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // COLOR                    0   xyzw        2     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
                //   o0.x <- <VSSMPositionNormalColor return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalColor return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalColor return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalColor return value>.positionHomogeneous.w
                //
                #line 73 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalColorI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // COLOR                    0   xyzw        2     NONE   float       
                // localTransform           0   xyzw        3     NONE   float   xyzw
                // localTransform           1   xyzw        4     NONE   float   xyzw
                // localTransform           2   xyzw        5     NONE   float   xyzw
                // localTransform           3   xyzw        6     NONE   float   xyzw
                // textureIndex             0   x           7     NONE   float       
                // SV_InstanceID            0   x           8   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
                //   v3.x <- input.localTransform._m00; v3.y <- input.localTransform._m01; v3.z <- input.localTransform._m02; v3.w <- input.localTransform._m03; 
                //   v4.x <- input.localTransform._m10; v4.y <- input.localTransform._m11; v4.z <- input.localTransform._m12; v4.w <- input.localTransform._m13; 
                //   v5.x <- input.localTransform._m20; v5.y <- input.localTransform._m21; v5.z <- input.localTransform._m22; v5.w <- input.localTransform._m23; 
                //   v6.x <- input.localTransform._m30; v6.y <- input.localTransform._m31; v6.z <- input.localTransform._m32; v6.w <- input.localTransform._m33; 
                //   v7.x <- input.textureIndex; 
                //   v8.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalColorI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalColorI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalColorI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalColorI return value>.positionHomogeneous.w
                //
                #line 81 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalColorSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // COLOR                    0   xyzw        2     NONE   float       
                // WEIGHTS                  0   xyz         3     NONE   float   xyz 
                // BONEINDICES              0   xyzw        4     NONE    uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
                //   v3.x <- input.weights.x; v3.y <- input.weights.y; v3.z <- input.weights.z; 
                //   v4.x <- input.boneIndices.x; v4.y <- input.boneIndices.y; v4.z <- input.boneIndices.z; v4.w <- input.boneIndices.w; 
                //   o0.x <- <VSSMPositionNormalColorSkinned return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalColorSkinned return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalColorSkinned return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalColorSkinned return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 376
                mov x0[0].x, v3.x
                mov x0[1].x, v3.y
                mov x0[2].x, v3.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v4.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
                endloop 
                
                #line 100 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalColorSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // COLOR                    0   xyzw        2     NONE   float       
                // WEIGHTS                  0   xyz         3     NONE   float   xyz 
                // BONEINDICES              0   xyzw        4     NONE    uint   xyzw
                // localTransform           0   xyzw        5     NONE   float   xyzw
                // localTransform           1   xyzw        6     NONE   float   xyzw
                // localTransform           2   xyzw        7     NONE   float   xyzw
                // localTransform           3   xyzw        8     NONE   float   xyzw
                // textureIndex             0   x           9     NONE   float       
                // SV_InstanceID            0   x          10   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.color.x; v2.y <- input.color.y; v2.z <- input.color.z; v2.w <- input.color.w; 
                //   v3.x <- input.weights.x; v3.y <- input.weights.y; v3.z <- input.weights.z; 
                //   v4.x <- input.boneIndices.x; v4.y <- input.boneIndices.y; v4.z <- input.boneIndices.z; v4.w <- input.boneIndices.w; 
                //   v5.x <- input.localTransform._m00; v5.y <- input.localTransform._m01; v5.z <- input.localTransform._m02; v5.w <- input.localTransform._m03; 
                //   v6.x <- input.localTransform._m10; v6.y <- input.localTransform._m11; v6.z <- input.localTransform._m12; v6.w <- input.localTransform._m13; 
                //   v7.x <- input.localTransform._m20; v7.y <- input.localTransform._m21; v7.z <- input.localTransform._m22; v7.w <- input.localTransform._m23; 
                //   v8.x <- input.localTransform._m30; v8.y <- input.localTransform._m31; v8.z <- input.localTransform._m32; v8.w <- input.localTransform._m33; 
                //   v9.x <- input.textureIndex; 
                //   v10.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalColorSkinnedI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalColorSkinnedI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalColorSkinnedI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalColorSkinnedI return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 376
                mov x0[0].x, v3.x
                mov x0[1].x, v3.y
                mov x0[2].x, v3.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v4.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
                endloop 
                
                #line 117 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, r1.yyyy, v6.xyzw
                mad r0.xyzw, r1.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   o0.x <- <VSSMPositionTexture return value>.positionHomogeneous.x; o0.y <- <VSSMPositionTexture return value>.positionHomogeneous.y; o0.z <- <VSSMPositionTexture return value>.positionHomogeneous.z; o0.w <- <VSSMPositionTexture return value>.positionHomogeneous.w
                //
                #line 128 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float       
                // localTransform           0   xyzw        2     NONE   float   xyzw
                // localTransform           1   xyzw        3     NONE   float   xyzw
                // localTransform           2   xyzw        4     NONE   float   xyzw
                // localTransform           3   xyzw        5     NONE   float   xyzw
                // textureIndex             0   x           6     NONE   float       
                // SV_InstanceID            0   x           7   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xyzw
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   v2.x <- input.localTransform._m00; v2.y <- input.localTransform._m01; v2.z <- input.localTransform._m02; v2.w <- input.localTransform._m03; 
                //   v3.x <- input.localTransform._m10; v3.y <- input.localTransform._m11; v3.z <- input.localTransform._m12; v3.w <- input.localTransform._m13; 
                //   v4.x <- input.localTransform._m20; v4.y <- input.localTransform._m21; v4.z <- input.localTransform._m22; v4.w <- input.localTransform._m23; 
                //   v5.x <- input.localTransform._m30; v5.y <- input.localTransform._m31; v5.z <- input.localTransform._m32; v5.w <- input.localTransform._m33; 
                //   v6.x <- input.textureIndex; 
                //   v7.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionTextureI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionTextureI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionTextureI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionTextureI return value>.positionHomogeneous.w
                //
                #line 136 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, v0.yyyy, v3.xyzw
                mad r0.xyzw, v0.xxxx, v2.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v4.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v5.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float       
                // WEIGHTS                  0   xyz         2     NONE   float   xyz 
                // BONEINDICES              0   xyzw        3     NONE    uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   v2.x <- input.weights.x; v2.y <- input.weights.y; v2.z <- input.weights.z; 
                //   v3.x <- input.boneIndices.x; v3.y <- input.boneIndices.y; v3.z <- input.boneIndices.z; v3.w <- input.boneIndices.w; 
                //   o0.x <- <VSSMPositionTextureSkinned return value>.positionHomogeneous.x; o0.y <- <VSSMPositionTextureSkinned return value>.positionHomogeneous.y; o0.z <- <VSSMPositionTextureSkinned return value>.positionHomogeneous.z; o0.w <- <VSSMPositionTextureSkinned return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x
                mov x0[1].x, v2.y
                mov x0[2].x, v2.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
                endloop 
                
                #line 155 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float       
                // WEIGHTS                  0   xyz         2     NONE   float   xyz 
                // BONEINDICES              0   xyzw        3     NONE    uint   xyzw
                // localTransform           0   xyzw        4     NONE   float   xyzw
                // localTransform           1   xyzw        5     NONE   float   xyzw
                // localTransform           2   xyzw        6     NONE   float   xyzw
                // localTransform           3   xyzw        7     NONE   float   xyzw
                // textureIndex             0   x           8     NONE   float       
                // SV_InstanceID            0   x           9   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v2.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.tex.x; v1.y <- input.tex.y; 
                //   v2.x <- input.weights.x; v2.y <- input.weights.y; v2.z <- input.weights.z; 
                //   v3.x <- input.boneIndices.x; v3.y <- input.boneIndices.y; v3.z <- input.boneIndices.z; v3.w <- input.boneIndices.w; 
                //   v4.x <- input.localTransform._m00; v4.y <- input.localTransform._m01; v4.z <- input.localTransform._m02; v4.w <- input.localTransform._m03; 
                //   v5.x <- input.localTransform._m10; v5.y <- input.localTransform._m11; v5.z <- input.localTransform._m12; v5.w <- input.localTransform._m13; 
                //   v6.x <- input.localTransform._m20; v6.y <- input.localTransform._m21; v6.z <- input.localTransform._m22; v6.w <- input.localTransform._m23; 
                //   v7.x <- input.localTransform._m30; v7.y <- input.localTransform._m31; v7.z <- input.localTransform._m32; v7.w <- input.localTransform._m33; 
                //   v8.x <- input.textureIndex; 
                //   v9.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionTextureSkinnedI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionTextureSkinnedI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionTextureSkinnedI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionTextureSkinnedI return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v2.x, l(1.000000)
                add r0.x, r0.x, -v2.y
                add r0.x, r0.x, -v2.z
                
                #line 376
                mov x0[0].x, v2.x
                mov x0[1].x, v2.y
                mov x0[2].x, v2.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v3.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
                endloop 
                
                #line 172 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, r1.yyyy, v5.xyzw
                mad r0.xyzw, r1.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTexture
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tex.x; v2.y <- input.tex.y; 
                //   o0.x <- <VSSMPositionNormalTexture return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTexture return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTexture return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTexture return value>.positionHomogeneous.w
                //
                #line 183 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float       
                // localTransform           0   xyzw        3     NONE   float   xyzw
                // localTransform           1   xyzw        4     NONE   float   xyzw
                // localTransform           2   xyzw        5     NONE   float   xyzw
                // localTransform           3   xyzw        6     NONE   float   xyzw
                // textureIndex             0   x           7     NONE   float       
                // SV_InstanceID            0   x           8   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v3.xyzw
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tex.x; v2.y <- input.tex.y; 
                //   v3.x <- input.localTransform._m00; v3.y <- input.localTransform._m01; v3.z <- input.localTransform._m02; v3.w <- input.localTransform._m03; 
                //   v4.x <- input.localTransform._m10; v4.y <- input.localTransform._m11; v4.z <- input.localTransform._m12; v4.w <- input.localTransform._m13; 
                //   v5.x <- input.localTransform._m20; v5.y <- input.localTransform._m21; v5.z <- input.localTransform._m22; v5.w <- input.localTransform._m23; 
                //   v6.x <- input.localTransform._m30; v6.y <- input.localTransform._m31; v6.z <- input.localTransform._m32; v6.w <- input.localTransform._m33; 
                //   v7.x <- input.textureIndex; 
                //   v8.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalTextureI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureI return value>.positionHomogeneous.w
                //
                #line 191 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, v0.yyyy, v4.xyzw
                mad r0.xyzw, v0.xxxx, v3.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v5.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v6.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float       
                // WEIGHTS                  0   xyz         3     NONE   float   xyz 
                // BONEINDICES              0   xyzw        4     NONE    uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tex.x; v2.y <- input.tex.y; 
                //   v3.x <- input.weights.x; v3.y <- input.weights.y; v3.z <- input.weights.z; 
                //   v4.x <- input.boneIndices.x; v4.y <- input.boneIndices.y; v4.z <- input.boneIndices.z; v4.w <- input.boneIndices.w; 
                //   o0.x <- <VSSMPositionNormalTextureSkinned return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureSkinned return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureSkinned return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureSkinned return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 376
                mov x0[0].x, v3.x
                mov x0[1].x, v3.y
                mov x0[2].x, v3.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v4.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
                endloop 
                
                #line 210 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float       
                // WEIGHTS                  0   xyz         3     NONE   float   xyz 
                // BONEINDICES              0   xyzw        4     NONE    uint   xyzw
                // localTransform           0   xyzw        5     NONE   float   xyzw
                // localTransform           1   xyzw        6     NONE   float   xyzw
                // localTransform           2   xyzw        7     NONE   float   xyzw
                // localTransform           3   xyzw        8     NONE   float   xyzw
                // textureIndex             0   x           9     NONE   float       
                // SV_InstanceID            0   x          10   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tex.x; v2.y <- input.tex.y; 
                //   v3.x <- input.weights.x; v3.y <- input.weights.y; v3.z <- input.weights.z; 
                //   v4.x <- input.boneIndices.x; v4.y <- input.boneIndices.y; v4.z <- input.boneIndices.z; v4.w <- input.boneIndices.w; 
                //   v5.x <- input.localTransform._m00; v5.y <- input.localTransform._m01; v5.z <- input.localTransform._m02; v5.w <- input.localTransform._m03; 
                //   v6.x <- input.localTransform._m10; v6.y <- input.localTransform._m11; v6.z <- input.localTransform._m12; v6.w <- input.localTransform._m13; 
                //   v7.x <- input.localTransform._m20; v7.y <- input.localTransform._m21; v7.z <- input.localTransform._m22; v7.w <- input.localTransform._m23; 
                //   v8.x <- input.localTransform._m30; v8.y <- input.localTransform._m31; v8.z <- input.localTransform._m32; v8.w <- input.localTransform._m33; 
                //   v9.x <- input.textureIndex; 
                //   v10.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalTextureSkinnedI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureSkinnedI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureSkinnedI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureSkinnedI return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v3.x, l(1.000000)
                add r0.x, r0.x, -v3.y
                add r0.x, r0.x, -v3.z
                
                #line 376
                mov x0[0].x, v3.x
                mov x0[1].x, v3.y
                mov x0[2].x, v3.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v4.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
                endloop 
                
                #line 227 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, r1.yyyy, v6.xyzw
                mad r0.xyzw, r1.xxxx, v5.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v7.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v8.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureTangent
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tangentLocal.x; v2.y <- input.tangentLocal.y; v2.z <- input.tangentLocal.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   o0.x <- <VSSMPositionNormalTextureTangent return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureTangent return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureTangent return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureTangent return value>.positionHomogeneous.w
                //
                #line 238 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureTangentI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float       
                // localTransform           0   xyzw        4     NONE   float   xyzw
                // localTransform           1   xyzw        5     NONE   float   xyzw
                // localTransform           2   xyzw        6     NONE   float   xyzw
                // localTransform           3   xyzw        7     NONE   float   xyzw
                // textureIndex             0   x           8     NONE   float       
                // SV_InstanceID            0   x           9   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v4.xyzw
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tangentLocal.x; v2.y <- input.tangentLocal.y; v2.z <- input.tangentLocal.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   v4.x <- input.localTransform._m00; v4.y <- input.localTransform._m01; v4.z <- input.localTransform._m02; v4.w <- input.localTransform._m03; 
                //   v5.x <- input.localTransform._m10; v5.y <- input.localTransform._m11; v5.z <- input.localTransform._m12; v5.w <- input.localTransform._m13; 
                //   v6.x <- input.localTransform._m20; v6.y <- input.localTransform._m21; v6.z <- input.localTransform._m22; v6.w <- input.localTransform._m23; 
                //   v7.x <- input.localTransform._m30; v7.y <- input.localTransform._m31; v7.z <- input.localTransform._m32; v7.w <- input.localTransform._m33; 
                //   v8.x <- input.textureIndex; 
                //   v9.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalTextureTangentI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureTangentI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureTangentI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureTangentI return value>.positionHomogeneous.w
                //
                #line 246 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, v0.yyyy, v5.xyzw
                mad r0.xyzw, v0.xxxx, v4.xyzw, r0.xyzw
                mad r0.xyzw, v0.zzzz, v6.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v7.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureTangentSkinned
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float       
                // WEIGHTS                  0   xyz         4     NONE   float   xyz 
                // BONEINDICES              0   xyzw        5     NONE    uint   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tangentLocal.x; v2.y <- input.tangentLocal.y; v2.z <- input.tangentLocal.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   v4.x <- input.weights.x; v4.y <- input.weights.y; v4.z <- input.weights.z; 
                //   v5.x <- input.boneIndices.x; v5.y <- input.boneIndices.y; v5.z <- input.boneIndices.z; v5.w <- input.boneIndices.w; 
                //   o0.x <- <VSSMPositionNormalTextureTangentSkinned return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureTangentSkinned return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureTangentSkinned return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureTangentSkinned return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 376
                mov x0[0].x, v4.x
                mov x0[1].x, v4.y
                mov x0[2].x, v4.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r2.z, r2.x, l(4)
                  breakc_nz r2.z
                  mov r2.z, x0[r2.x + 0].x
                  ineg r2.w, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.w, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v5.xyzw
                  or r2.yw, r3.yyyw, r3.xxxz
                  or r2.y, r2.w, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
                endloop 
                
                #line 265 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mov r1.w, l(1.000000)
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

    technique11 ShadowMapPositionNormalTextureTangentSkinnedI
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[96];      // Offset:    0 Size:  6144
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float       
                // WEIGHTS                  0   xyz         4     NONE   float   xyz 
                // BONEINDICES              0   xyzw        5     NONE    uint   xyzw
                // localTransform           0   xyzw        6     NONE   float   xyzw
                // localTransform           1   xyzw        7     NONE   float   xyzw
                // localTransform           2   xyzw        8     NONE   float   xyzw
                // localTransform           3   xyzw        9     NONE   float   xyzw
                // textureIndex             0   x          10     NONE   float       
                // SV_InstanceID            0   x          11   INSTID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[383], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v4.xyz
                dcl_input v5.xyzw
                dcl_input v6.xyzw
                dcl_input v7.xyzw
                dcl_input v8.xyzw
                dcl_input v9.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                //
                // Initial variable locations:
                //   x0 <- weights; 
                //   v0.x <- input.positionLocal.x; v0.y <- input.positionLocal.y; v0.z <- input.positionLocal.z; 
                //   v1.x <- input.normalLocal.x; v1.y <- input.normalLocal.y; v1.z <- input.normalLocal.z; 
                //   v2.x <- input.tangentLocal.x; v2.y <- input.tangentLocal.y; v2.z <- input.tangentLocal.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   v4.x <- input.weights.x; v4.y <- input.weights.y; v4.z <- input.weights.z; 
                //   v5.x <- input.boneIndices.x; v5.y <- input.boneIndices.y; v5.z <- input.boneIndices.z; v5.w <- input.boneIndices.w; 
                //   v6.x <- input.localTransform._m00; v6.y <- input.localTransform._m01; v6.z <- input.localTransform._m02; v6.w <- input.localTransform._m03; 
                //   v7.x <- input.localTransform._m10; v7.y <- input.localTransform._m11; v7.z <- input.localTransform._m12; v7.w <- input.localTransform._m13; 
                //   v8.x <- input.localTransform._m20; v8.y <- input.localTransform._m21; v8.z <- input.localTransform._m22; v8.w <- input.localTransform._m23; 
                //   v9.x <- input.localTransform._m30; v9.y <- input.localTransform._m31; v9.z <- input.localTransform._m32; v9.w <- input.localTransform._m33; 
                //   v10.x <- input.textureIndex; 
                //   v11.x <- input.instanceId; 
                //   o0.x <- <VSSMPositionNormalTextureTangentSkinnedI return value>.positionHomogeneous.x; o0.y <- <VSSMPositionNormalTextureTangentSkinnedI return value>.positionHomogeneous.y; o0.z <- <VSSMPositionNormalTextureTangentSkinnedI return value>.positionHomogeneous.z; o0.w <- <VSSMPositionNormalTextureTangentSkinnedI return value>.positionHomogeneous.w
                //
                #line 365 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncVertexFormats.fx"
                add r0.x, -v4.x, l(1.000000)
                add r0.x, r0.x, -v4.y
                add r0.x, r0.x, -v4.z
                
                #line 376
                mov x0[0].x, v4.x
                mov x0[1].x, v4.y
                mov x0[2].x, v4.z
                mov x0[3].x, r0.x
                
                #line 382
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                mov r1.xyz, l(0,0,0,0)  // r1.x <- positionLocal.x; r1.y <- positionLocal.y; r1.z <- positionLocal.z
                mov r2.x, l(0)  // r2.x <- i
                loop 
                  ige r1.w, r2.x, l(4)
                  breakc_nz r1.w
                  mov r1.w, x0[r2.x + 0].x
                  ineg r2.z, r2.x
                  ult r3.xyz, r2.xxxx, l(1, 2, 3, 0)
                  and r4.y, r2.z, r3.y
                  iadd r2.xy, r2.xxxx, l(1, -3, 0, 0)
                  movc r4.z, r3.y, l(0), r2.y
                  ieq r4.w, r3.z, l(0)
                  mov r4.x, r3.x
                  and r3.xyzw, r4.xyzw, v5.xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ishl r2.y, r2.y, l(2)
                  dp4 r3.x, r0.xyzw, cb1[r2.y + 0].xyzw
                  dp4 r3.y, r0.xyzw, cb1[r2.y + 1].xyzw
                  dp4 r3.z, r0.xyzw, cb1[r2.y + 2].xyzw
                  mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
                endloop 
                
                #line 282 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderShadow.fx"
                mul r0.xyzw, r1.yyyy, v7.xyzw
                mad r0.xyzw, r1.xxxx, v6.xyzw, r0.xyzw
                mad r0.xyzw, r1.zzzz, v8.xyzw, r0.xyzw
                add r0.xyzw, r0.xyzw, v9.xyzw  // r0.x <- instancePosition.x; r0.y <- instancePosition.y; r0.z <- instancePosition.z; r0.w <- instancePosition.w
                dp4 o0.x, r0.xyzw, cb0[0].xyzw
                dp4 o0.y, r0.xyzw, cb0[1].xyzw
                dp4 o0.z, r0.xyzw, cb0[2].xyzw
                dp4 o0.w, r0.xyzw, cb0[3].xyzw
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
        }

    }

}

