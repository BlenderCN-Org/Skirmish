//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorldViewProjection;      // Offset:    0, size:   64
    float4x4 gShadowTransform;          // Offset:   64, size:   64
    float3  gEyePositionWorld;          // Offset:  128, size:   12
    DirectionalLight gDirLights[3];     // Offset:  144, size:  136
    PointLight gPointLights[4];         // Offset:  288, size:  188
    SpotLight gSpotLights[4];           // Offset:  480, size:  308
    float   gFogStart;                  // Offset:  788, size:    4
    float   gFogRange;                  // Offset:  792, size:    4
    float4  gFogColor;                  // Offset:  800, size:   16
    float   gRadius;                    // Offset:  816, size:    4
}

cbuffer cbPerObject : register(b1)
{
    Material gMaterial;                 // Offset:    0, size:   24
    uint    gTextureCount;              // Offset:   24, size:    4
}

cbuffer cbFixed : register(b2)
{
    float2  gQuadTexC[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 18 local object(s)
//
RasterizerState RasterizerDefault
{
};
RasterizerState RasterizerSolid
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(BACK /* 3 */);
};
RasterizerState RasterizerWireFrame
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState RasterizerDepth
{
    DepthBias = uint(0x000186a0);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
};
RasterizerState RasterizerNoCull
{
    CullMode = uint(NONE /* 1 */);
};
DepthStencilState StencilDefault
{
};
DepthStencilState StencilEnableDepth
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilDisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState StencilLessEqualDSS
{
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};
BlendState BlendDefault
{
};
BlendState BlendAdditive
{
    AlphaToCoverageEnable = bool(FALSE /* 0 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[1] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[2] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[3] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[4] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[5] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[6] = uint(SRC_ALPHA /* 5 */);
    SrcBlend[7] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(ONE /* 2 */);
    DestBlend[1] = uint(ONE /* 2 */);
    DestBlend[2] = uint(ONE /* 2 */);
    DestBlend[3] = uint(ONE /* 2 */);
    DestBlend[4] = uint(ONE /* 2 */);
    DestBlend[5] = uint(ONE /* 2 */);
    DestBlend[6] = uint(ONE /* 2 */);
    DestBlend[7] = uint(ONE /* 2 */);
    BlendOp[0] = uint(ADD /* 1 */);
    BlendOp[1] = uint(ADD /* 1 */);
    BlendOp[2] = uint(ADD /* 1 */);
    BlendOp[3] = uint(ADD /* 1 */);
    BlendOp[4] = uint(ADD /* 1 */);
    BlendOp[5] = uint(ADD /* 1 */);
    BlendOp[6] = uint(ADD /* 1 */);
    BlendOp[7] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(ZERO /* 1 */);
    SrcBlendAlpha[1] = uint(ZERO /* 1 */);
    SrcBlendAlpha[2] = uint(ZERO /* 1 */);
    SrcBlendAlpha[3] = uint(ZERO /* 1 */);
    SrcBlendAlpha[4] = uint(ZERO /* 1 */);
    SrcBlendAlpha[5] = uint(ZERO /* 1 */);
    SrcBlendAlpha[6] = uint(ZERO /* 1 */);
    SrcBlendAlpha[7] = uint(ZERO /* 1 */);
    DestBlendAlpha[0] = uint(ZERO /* 1 */);
    DestBlendAlpha[1] = uint(ZERO /* 1 */);
    DestBlendAlpha[2] = uint(ZERO /* 1 */);
    DestBlendAlpha[3] = uint(ZERO /* 1 */);
    DestBlendAlpha[4] = uint(ZERO /* 1 */);
    DestBlendAlpha[5] = uint(ZERO /* 1 */);
    DestBlendAlpha[6] = uint(ZERO /* 1 */);
    DestBlendAlpha[7] = uint(ZERO /* 1 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    BlendOpAlpha[1] = uint(ADD /* 1 */);
    BlendOpAlpha[2] = uint(ADD /* 1 */);
    BlendOpAlpha[3] = uint(ADD /* 1 */);
    BlendOpAlpha[4] = uint(ADD /* 1 */);
    BlendOpAlpha[5] = uint(ADD /* 1 */);
    BlendOpAlpha[6] = uint(ADD /* 1 */);
    BlendOpAlpha[7] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerFont
{
};
SamplerState SamplerPoint
{
};
SamplerComparisonState SamplerShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2DArray gTextureArray;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 ForwardBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                
                #line 44 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add o0.xyz, v0.xyzx, l(0.000000, -0.050000, 0.000000, 0.000000)  // VSBillboard<0,1,2>
                mov o1.xy, v1.xyxx  // VSBillboard<3,4>
                ret 
                // Approximately 3 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLights[3];                   // Offset:  144 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  288
                //       float Ambient;                 // Offset:  300
                //       float Diffuse;                 // Offset:  304
                //       float3 Position;               // Offset:  308
                //       float Radius;                  // Offset:  320
                //       float CastShadow;              // Offset:  324
                //       float Enabled;                 // Offset:  328
                //
                //   } gPointLights[4];                 // Offset:  288 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  480
                //       float Ambient;                 // Offset:  492
                //       float Diffuse;                 // Offset:  496
                //       float3 Position;               // Offset:  500
                //       float3 Direction;              // Offset:  512
                //       float Spot;                    // Offset:  524
                //       float AttenuationConstant;     // Offset:  528
                //       float AttenuationLinear;       // Offset:  532
                //       float AttenuationExp;          // Offset:  536
                //       float CastShadow;              // Offset:  540
                //       float Enabled;                 // Offset:  544
                //
                //   } gSpotLights[4];                  // Offset:  480 Size:   308 [unused]
                //   float gFogStart;                   // Offset:  788 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  792 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  800 Size:    16 [unused]
                //   float gRadius;                     // Offset:  816 Size:     4
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gQuadTexC[4];               // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:TEXCOORD              1   xyzw        4     NONE  float   xyzw
                // m0:SV_PrimitiveID        0   x           5   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 6
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output_sgv o5.x, primitive_id
                dcl_maxout 4
                
                #line 50 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[8].xyzx, -v[0][0].xyzx  // look<0:Inf,1:Inf,2:Inf>
                eq r0.w, cb0[51].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[51].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 55
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // look<2:NaN:Inf,0:NaN:Inf>
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                
                #line 63
                  mul r0.w, l(0.500000), v[0][1].x  // halfWidth<0:[-1.70141e+038f,1.70141e+038f]>
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                
                #line 73
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r4.y, r2.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r4.z, r2.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r4.w, r2.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r5.x, r2.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r5.y, r2.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r5.z, r2.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r2.w, r2.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r4.x  // outputStream<0>
                  mov o0.y, r4.y  // outputStream<0>
                  mov o0.z, r4.z  // outputStream<0>
                  mov o0.w, r4.w  // outputStream<0>
                  mov o1.xyz, r2.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[0].xyxx  // outputStream<0,0>
                  mov o4.x, r5.x  // outputStream<0>
                  mov o4.y, r5.y  // outputStream<0>
                  mov o4.z, r5.z  // outputStream<0>
                  mov o4.w, r2.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r2.y, r1.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r2.z, r1.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r2.w, r1.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r4.x, r1.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r4.y, r1.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r4.z, r1.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r1.w, r1.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r2.x  // outputStream<0>
                  mov o0.y, r2.y  // outputStream<0>
                  mov o0.z, r2.z  // outputStream<0>
                  mov o0.w, r2.w  // outputStream<0>
                  mov o1.xyz, r1.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[1].xyxx  // outputStream<0,0>
                  mov o4.x, r4.x  // outputStream<0>
                  mov o4.y, r4.y  // outputStream<0>
                  mov o4.z, r4.z  // outputStream<0>
                  mov o4.w, r1.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r3.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r3.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.w, r3.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r2.x, r3.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r2.y, r3.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r2.z, r3.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r2.w, r3.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r1.w  // outputStream<0>
                  mov o1.xyz, r3.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[2].xyxx  // outputStream<0,0>
                  mov o4.x, r2.x  // outputStream<0>
                  mov o4.y, r2.y  // outputStream<0>
                  mov o4.z, r2.z  // outputStream<0>
                  mov o4.w, r2.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r0.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r0.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.w, r0.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r2.x, r0.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r2.y, r0.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r2.z, r0.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r0.w, r0.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r1.w  // outputStream<0>
                  mov o1.xyz, r0.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[3].xyxx  // outputStream<0,0>
                  mov o4.x, r2.x  // outputStream<0>
                  mov o4.y, r2.y  // outputStream<0>
                  mov o4.z, r2.z  // outputStream<0>
                  mov o4.w, r0.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 51
                endif 
                
                #line 48
                ret 
                // Approximately 110 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLights[3];                   // Offset:  144 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  288
                //       float Ambient;                 // Offset:  300
                //       float Diffuse;                 // Offset:  304
                //       float3 Position;               // Offset:  308
                //       float Radius;                  // Offset:  320
                //       float CastShadow;              // Offset:  324
                //       float Enabled;                 // Offset:  328
                //
                //   } gPointLights[4];                 // Offset:  288 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  480
                //       float Ambient;                 // Offset:  492
                //       float Diffuse;                 // Offset:  496
                //       float3 Position;               // Offset:  500
                //       float3 Direction;              // Offset:  512
                //       float Spot;                    // Offset:  524
                //       float AttenuationConstant;     // Offset:  528
                //       float AttenuationLinear;       // Offset:  532
                //       float AttenuationExp;          // Offset:  536
                //       float CastShadow;              // Offset:  540
                //       float Enabled;                 // Offset:  544
                //
                //   } gSpotLights[4];                  // Offset:  480 Size:   308
                //   float gFogStart;                   // Offset:  788 Size:     4
                //   float gFogRange;                   // Offset:  792 Size:     4
                //   float4 gFogColor;                  // Offset:  800 Size:    16
                //   float gRadius;                     // Offset:  816 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //   uint gTextureCount;                // Offset:   24 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerShadow                   sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // SV_PrimitiveID           0   x           5   PRIMID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[51], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps_sgv v5.x, primitive_id
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 119 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                udiv null, r0.x, v5.x, cb1[1].z
                utof r0.z, r0.x  // uvw<2:[0f,4.29497e+009f]>
                mov r0.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.x, r0.w, l(-0.050000)
                lt r1.x, r1.x, l(0.000000)
                discard r1.x
                add r1.xyz, -v1.xyzx, cb0[8].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 346 "IncLights.fx"
                eq r2.x, cb0[11].y, l(1.000000)
                if_nz r2.x
                
                #line 207
                  dp3 r2.x, v2.xyzx, -cb0[10].yzwy  // diffuseFactor<0:NaN:Inf>
                  lt r2.y, l(0.000000), r2.x
                  mul r3.xyz, cb0[9].xyzx, cb0[10].xxxx
                  mul r2.xzw, r2.xxxx, r3.xxyz  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, cb0[10].yzwy, v2.xyzx
                  add r3.x, r3.x, r3.x
                  mad r3.xyz, v2.xyzx, -r3.xxxx, cb0[10].yzwy
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                
                #line 218
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, |r3.x|
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specFactor<0:NaN:Inf>
                  mul r4.xyz, cb0[9].xyzx, cb1[1].xxxx
                  mul r3.xzw, r3.xxxx, r4.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r3.xyz, r3.xzwx, r3.yyyy  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r2.xzw, r2.xxzw, r2.yyyy  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r2.yyyy, r3.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r2.xyz, cb0[9].xyzx, cb0[9].wwww, r2.xzwx
                  add r2.xyz, r3.xyzx, r2.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  eq r2.w, cb0[11].x, l(1.000000)
                  if_nz r2.w
                
                #line 168
                    div r3.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                    add r4.xyzw, r3.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r3.z  // percentLit<0:[0f,1f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,2f]>
                    add r4.xyzw, r3.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,3f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,4f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r3.xyxx, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,5f]>
                    add r4.xyzw, r3.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,6f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,7f]>
                    add r4.xyzw, r3.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.xyxx, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.x  // percentLit<0:[0f,8f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xxxx, s1, r3.z
                    add r2.w, r2.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 182
                    mul r2.w, r2.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 251
                    mul r2.xyz, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  endif 
                
                #line 346
                else 
                  mov r2.xyz, l(0,0,0,0)  // litColor<0: 0f,1: 0f,2: 0f>
                endif 
                eq r2.w, cb0[14].y, l(1.000000)
                if_nz r2.w
                
                #line 207
                  dp3 r2.w, v2.xyzx, -cb0[13].yzwy  // diffuseFactor<0:NaN:Inf>
                  lt r3.x, l(0.000000), r2.w
                  mul r3.yzw, cb0[12].xxyz, cb0[13].xxxx
                  mul r3.yzw, r2.wwww, r3.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, cb0[13].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r4.xyz, v2.xyzx, -r2.wwww, cb0[13].yzwy
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  rsq r2.w, r2.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r4.xyzx  // specFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r2.w
                
                #line 218
                  max r4.y, cb1[1].y, l(1.000000)
                  log r2.w, |r2.w|
                  mul r2.w, r2.w, r4.y
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.yzw, cb0[12].xxyz, cb1[1].xxxx
                  mul r4.yzw, r2.wwww, r4.yyzw  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r4.xyz, r4.yzwy, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r3.yzw, r3.yyzw, r3.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r4.xyz, r3.xxxx, r4.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r3.xyz, cb0[12].xyzx, cb0[12].wwww, r3.yzwy
                  add r3.xyz, r4.xyzx, r3.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  eq r2.w, cb0[14].x, l(1.000000)
                  if_nz r2.w
                
                #line 168
                    div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                    add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,2f]>
                    add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,3f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,4f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,5f]>
                    add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,6f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,7f]>
                    add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,8f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,9f]>
                
                #line 182
                    mul r2.w, r2.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 251
                    mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  endif 
                
                #line 348
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[17].y, l(1.000000)
                if_nz r2.w
                
                #line 207
                  dp3 r2.w, v2.xyzx, -cb0[16].yzwy  // diffuseFactor<0:NaN:Inf>
                  lt r3.x, l(0.000000), r2.w
                  mul r3.yzw, cb0[15].xxyz, cb0[16].xxxx
                  mul r3.yzw, r2.wwww, r3.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, cb0[16].yzwy, v2.xyzx
                  add r2.w, r2.w, r2.w
                  mad r4.xyz, v2.xyzx, -r2.wwww, cb0[16].yzwy
                  dp3 r2.w, r4.xyzx, r4.xyzx
                  rsq r2.w, r2.w
                  mul r4.xyz, r2.wwww, r4.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r1.xyzx, r4.xyzx  // specFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r2.w
                
                #line 218
                  max r4.y, cb1[1].y, l(1.000000)
                  log r2.w, |r2.w|
                  mul r2.w, r2.w, r4.y
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.yzw, cb0[15].xxyz, cb1[1].xxxx
                  mul r4.yzw, r2.wwww, r4.yyzw  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r4.xyz, r4.yzwy, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r3.yzw, r3.yyzw, r3.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r4.xyz, r3.xxxx, r4.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r3.xyz, cb0[15].xyzx, cb0[15].wwww, r3.yzwy
                  add r3.xyz, r4.xyzx, r3.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  eq r2.w, cb0[17].x, l(1.000000)
                  if_nz r2.w
                
                #line 168
                    div r4.xyz, v4.xyzx, v4.wwww  // shadowPosH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                    add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z  // percentLit<0:[0f,1f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,2f]>
                    add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,3f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,4f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,5f]>
                    add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,6f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,7f]>
                    add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,8f]>
                    sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t1.xxxx, s1, r4.z
                    add r2.w, r2.w, r3.w  // percentLit<0:[0f,9f]>
                
                #line 182
                    mul r2.w, r2.w, l(0.111111)  // CalcShadowFactor<0:[0f,1f]>
                
                #line 251
                    mul r3.xyz, r2.wwww, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 247
                  endif 
                
                #line 348
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 363
                eq r2.w, cb0[20].z, l(1.000000)
                if_nz r2.w
                
                #line 265
                  add r3.xyz, v1.xyzx, -cb0[19].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                  dp3 r3.w, v2.xyzx, -r3.xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  mul r4.yzw, cb0[18].xxyz, cb0[19].xxxx
                  mul r4.yzw, r3.wwww, r4.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                
                #line 218
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, |r3.x|
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[18].xyzx, cb1[1].xxxx
                  mul r3.xzw, r3.xxxx, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r3.xyz, r3.xzwx, r3.yyyy  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.yzw, r4.yyzw, r4.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.xyzx, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[18].xyzx, cb0[18].wwww, r4.yzwy
                  add r3.xyz, r3.xyzx, r4.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 151
                  div r3.w, r2.w, cb0[20].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[19].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 153
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 365
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[23].z, l(1.000000)
                if_nz r2.w
                
                #line 265
                  add r3.xyz, v1.xyzx, -cb0[22].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                  dp3 r3.w, v2.xyzx, -r3.xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  mul r4.yzw, cb0[21].xxyz, cb0[22].xxxx
                  mul r4.yzw, r3.wwww, r4.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                
                #line 218
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, |r3.x|
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[21].xyzx, cb1[1].xxxx
                  mul r3.xzw, r3.xxxx, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r3.xyz, r3.xzwx, r3.yyyy  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.yzw, r4.yyzw, r4.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.xyzx, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[21].xyzx, cb0[21].wwww, r4.yzwy
                  add r3.xyz, r3.xyzx, r4.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 151
                  div r3.w, r2.w, cb0[23].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[22].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 153
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 365
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[26].z, l(1.000000)
                if_nz r2.w
                
                #line 265
                  add r3.xyz, v1.xyzx, -cb0[25].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                  dp3 r3.w, v2.xyzx, -r3.xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  mul r4.yzw, cb0[24].xxyz, cb0[25].xxxx
                  mul r4.yzw, r3.wwww, r4.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                
                #line 218
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, |r3.x|
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[24].xyzx, cb1[1].xxxx
                  mul r3.xzw, r3.xxxx, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r3.xyz, r3.xzwx, r3.yyyy  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.yzw, r4.yyzw, r4.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.xyzx, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[24].xyzx, cb0[24].wwww, r4.yzwy
                  add r3.xyz, r3.xyzx, r4.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 151
                  div r3.w, r2.w, cb0[26].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[25].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 153
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 365
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[29].z, l(1.000000)
                if_nz r2.w
                
                #line 265
                  add r3.xyz, v1.xyzx, -cb0[28].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, r3.xyzx
                  sqrt r2.w, r2.w  // distance<0:NaN:Inf>
                  div r3.xyz, r3.xyzx, r2.wwww  // lightDirection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 207
                  dp3 r3.w, v2.xyzx, -r3.xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  mul r4.yzw, cb0[27].xxyz, cb0[28].xxxx
                  mul r4.yzw, r3.wwww, r4.yyzw  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r3.xyzx, v2.xyzx
                  add r3.w, r3.w, r3.w
                  mad r3.xyz, v2.xyzx, -r3.wwww, r3.xyzx
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  rsq r3.w, r3.w
                  mul r3.xyz, r3.wwww, r3.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.x, r1.xyzx, r3.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.y, l(0.000000), r3.x
                
                #line 218
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, |r3.x|
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[27].xyzx, cb1[1].xxxx
                  mul r3.xzw, r3.xxxx, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r3.xyz, r3.xzwx, r3.yyyy  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.yzw, r4.yyzw, r4.xxxx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.xyz, r3.xyzx, r4.xxxx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[27].xyzx, cb0[27].wwww, r4.yzwy
                  add r3.xyz, r3.xyzx, r4.xyzx  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 151
                  div r3.w, r2.w, cb0[29].x  // f<0:NaN:Inf>
                  mad r3.w, -r3.w, r3.w, l(1.000000)  // denom<0:NaN:Inf>
                  lt r4.x, l(0.000000), r3.w
                  div r2.w, r2.w, r3.w  // d<0:NaN:Inf>
                  add r2.w, r2.w, l(1.000000)  // dn<0:NaN:Inf>
                  mul r2.w, r2.w, r2.w
                  div r2.w, cb0[28].x, r2.w  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 153
                  and r2.w, r2.w, r4.x  // CalcSphericAttenuation<0:NaN:Inf>
                
                #line 365
                  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 378
                eq r2.w, cb0[34].x, l(1.000000)
                if_nz r2.w
                
                #line 293
                  add r3.xyz, v1.xyzx, -cb0[31].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, cb0[32].xyzx  // spot<0:NaN:Inf>
                  lt r2.w, cb0[32].w, r2.w
                  dp3 r3.x, r3.xyzx, r3.xyzx
                  sqrt r3.y, r3.x  // distance<0:NaN:Inf>
                
                #line 304
                  mad r3.y, cb0[33].y, r3.y, cb0[33].x
                  mad r3.x, r3.x, cb0[33].z, r3.y  // attenuation<0:NaN:Inf>
                  max r3.x, r3.x, l(1.000000)  // attenuation<0:Inf:[1f,1.#INFf]>
                
                #line 207
                  dp3 r3.y, v2.xyzx, -cb0[32].xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.xyz, cb0[30].xyzx, cb0[31].xxxx
                  mul r4.xyz, r3.yyyy, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, cb0[32].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[32].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.w, l(0.000000), r3.y
                
                #line 218
                  max r4.w, cb1[1].y, l(1.000000)
                  log r3.y, |r3.y|
                  mul r3.y, r3.y, r4.w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[30].xyzx, cb1[1].xxxx
                  mul r5.xyz, r3.yyyy, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r5.xyz, r3.wwww, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.xyz, r3.zzzz, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.yzw, r3.zzzz, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[30].xyzx, cb0[30].wwww, r4.xyzx
                  add r3.yzw, r3.yyzw, r4.xxyz  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 319
                  div r3.xyz, r3.yzwy, r3.xxxx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 296
                  and r3.xyz, r2.wwww, r3.xyzx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 380
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[39].x, l(1.000000)
                if_nz r2.w
                
                #line 293
                  add r3.xyz, v1.xyzx, -cb0[36].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, cb0[37].xyzx  // spot<0:NaN:Inf>
                  lt r2.w, cb0[37].w, r2.w
                  dp3 r3.x, r3.xyzx, r3.xyzx
                  sqrt r3.y, r3.x  // distance<0:NaN:Inf>
                
                #line 304
                  mad r3.y, cb0[38].y, r3.y, cb0[38].x
                  mad r3.x, r3.x, cb0[38].z, r3.y  // attenuation<0:NaN:Inf>
                  max r3.x, r3.x, l(1.000000)  // attenuation<0:Inf:[1f,1.#INFf]>
                
                #line 207
                  dp3 r3.y, v2.xyzx, -cb0[37].xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.xyz, cb0[35].xyzx, cb0[36].xxxx
                  mul r4.xyz, r3.yyyy, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, cb0[37].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[37].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.w, l(0.000000), r3.y
                
                #line 218
                  max r4.w, cb1[1].y, l(1.000000)
                  log r3.y, |r3.y|
                  mul r3.y, r3.y, r4.w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[35].xyzx, cb1[1].xxxx
                  mul r5.xyz, r3.yyyy, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r5.xyz, r3.wwww, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.xyz, r3.zzzz, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.yzw, r3.zzzz, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[35].xyzx, cb0[35].wwww, r4.xyzx
                  add r3.yzw, r3.yyzw, r4.xxyz  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 319
                  div r3.xyz, r3.yzwy, r3.xxxx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 296
                  and r3.xyz, r2.wwww, r3.xyzx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 380
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[44].x, l(1.000000)
                if_nz r2.w
                
                #line 293
                  add r3.xyz, v1.xyzx, -cb0[41].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, cb0[42].xyzx  // spot<0:NaN:Inf>
                  lt r2.w, cb0[42].w, r2.w
                  dp3 r3.x, r3.xyzx, r3.xyzx
                  sqrt r3.y, r3.x  // distance<0:NaN:Inf>
                
                #line 304
                  mad r3.y, cb0[43].y, r3.y, cb0[43].x
                  mad r3.x, r3.x, cb0[43].z, r3.y  // attenuation<0:NaN:Inf>
                  max r3.x, r3.x, l(1.000000)  // attenuation<0:Inf:[1f,1.#INFf]>
                
                #line 207
                  dp3 r3.y, v2.xyzx, -cb0[42].xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.xyz, cb0[40].xyzx, cb0[41].xxxx
                  mul r4.xyz, r3.yyyy, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, cb0[42].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[42].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, r1.xyzx, r5.xyzx  // specFactor<0:NaN:Inf>
                  lt r3.w, l(0.000000), r3.y
                
                #line 218
                  max r4.w, cb1[1].y, l(1.000000)
                  log r3.y, |r3.y|
                  mul r3.y, r3.y, r4.w
                  exp r3.y, r3.y  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[40].xyzx, cb1[1].xxxx
                  mul r5.xyz, r3.yyyy, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r5.xyz, r3.wwww, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.xyz, r3.zzzz, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r3.yzw, r3.zzzz, r5.xxyz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r4.xyz, cb0[40].xyzx, cb0[40].wwww, r4.xyzx
                  add r3.yzw, r3.yyzw, r4.xxyz  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 319
                  div r3.xyz, r3.yzwy, r3.xxxx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 296
                  and r3.xyz, r2.wwww, r3.xyzx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 380
                  add r2.xyz, r2.xyzx, r3.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                eq r2.w, cb0[49].x, l(1.000000)
                if_nz r2.w
                
                #line 293
                  add r3.xyz, v1.xyzx, -cb0[46].yzwy  // lightDirection<0:Inf,1:Inf,2:Inf>
                  dp3 r2.w, r3.xyzx, cb0[47].xyzx  // spot<0:NaN:Inf>
                  lt r2.w, cb0[47].w, r2.w
                  dp3 r3.x, r3.xyzx, r3.xyzx
                  sqrt r3.y, r3.x  // distance<0:NaN:Inf>
                
                #line 304
                  mad r3.y, cb0[48].y, r3.y, cb0[48].x
                  mad r3.x, r3.x, cb0[48].z, r3.y  // attenuation<0:NaN:Inf>
                  max r3.x, r3.x, l(1.000000)  // attenuation<0:Inf:[1f,1.#INFf]>
                
                #line 207
                  dp3 r3.y, v2.xyzx, -cb0[47].xyzx  // diffuseFactor<0:NaN:Inf>
                  lt r3.z, l(0.000000), r3.y
                  mul r4.xyz, cb0[45].xyzx, cb0[46].xxxx
                  mul r4.xyz, r3.yyyy, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.y, cb0[47].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[47].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // reflectLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r1.x, r1.xyzx, r5.xyzx  // specFactor<0:NaN:Inf>
                  lt r1.y, l(0.000000), r1.x
                
                #line 218
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, |r1.x|
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // specFactor<0:NaN:Inf>
                  mul r5.xyz, cb0[45].xyzx, cb1[1].xxxx
                  mul r5.xyz, r1.xxxx, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 216
                  and r1.xyz, r1.yyyy, r5.xyzx  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 209
                  and r4.xyz, r3.zzzz, r4.xyzx  // diffuseColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  and r1.xyz, r1.xyzx, r3.zzzz  // specularColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 223
                  mad r3.yzw, cb0[45].xxyz, cb0[45].wwww, r4.xxyz
                  add r1.xyz, r1.xyzx, r3.yzwy  // ComputeBaseLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 319
                  div r1.xyz, r1.xyzx, r3.xxxx  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 296
                  and r1.xyz, r1.xyzx, r2.wwww  // ComputeSpotLight<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 380
                  add r2.xyz, r1.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                endif 
                
                #line 137 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                mul r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 140
                lt r1.x, l(0.000000), cb0[49].z
                
                #line 143
                sqrt r1.y, r1.w  // distToEye<0:NaN:Inf>
                
                #line 186 "IncLights.fx"
                add r1.y, r1.y, -cb0[49].y
                div_sat r1.y, r1.y, cb0[49].z  // fogLerp<0:[0f,1f]>
                add r2.xyzw, -r0.xyzw, cb0[50].xyzw
                mad r2.xyzw, r1.yyyy, r2.xyzw, r0.xyzw  // ComputeFog<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 140 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                movc o0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw  // PSForwardBillboard<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 148
                ret 
                // Approximately 487 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 DeferredBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                
                #line 44 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add o0.xyz, v0.xyzx, l(0.000000, -0.050000, 0.000000, 0.000000)  // VSBillboard<0,1,2>
                mov o1.xy, v1.xyxx  // VSBillboard<3,4>
                ret 
                // Approximately 3 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLights[3];                   // Offset:  144 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  288
                //       float Ambient;                 // Offset:  300
                //       float Diffuse;                 // Offset:  304
                //       float3 Position;               // Offset:  308
                //       float Radius;                  // Offset:  320
                //       float CastShadow;              // Offset:  324
                //       float Enabled;                 // Offset:  328
                //
                //   } gPointLights[4];                 // Offset:  288 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  480
                //       float Ambient;                 // Offset:  492
                //       float Diffuse;                 // Offset:  496
                //       float3 Position;               // Offset:  500
                //       float3 Direction;              // Offset:  512
                //       float Spot;                    // Offset:  524
                //       float AttenuationConstant;     // Offset:  528
                //       float AttenuationLinear;       // Offset:  532
                //       float AttenuationExp;          // Offset:  536
                //       float CastShadow;              // Offset:  540
                //       float Enabled;                 // Offset:  544
                //
                //   } gSpotLights[4];                  // Offset:  480 Size:   308 [unused]
                //   float gFogStart;                   // Offset:  788 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  792 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  800 Size:    16 [unused]
                //   float gRadius;                     // Offset:  816 Size:     4
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gQuadTexC[4];               // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:TEXCOORD              1   xyzw        4     NONE  float   xyzw
                // m0:SV_PrimitiveID        0   x           5   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 6
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output_sgv o5.x, primitive_id
                dcl_maxout 4
                
                #line 50 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[8].xyzx, -v[0][0].xyzx  // look<0:Inf,1:Inf,2:Inf>
                eq r0.w, cb0[51].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[51].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 55
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // look<2:NaN:Inf,0:NaN:Inf>
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                
                #line 63
                  mul r0.w, l(0.500000), v[0][1].x  // halfWidth<0:[-1.70141e+038f,1.70141e+038f]>
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx  // gout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                
                #line 73
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r4.y, r2.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r4.z, r2.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r4.w, r2.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r5.x, r2.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r5.y, r2.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r5.z, r2.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r2.w, r2.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r4.x  // outputStream<0>
                  mov o0.y, r4.y  // outputStream<0>
                  mov o0.z, r4.z  // outputStream<0>
                  mov o0.w, r4.w  // outputStream<0>
                  mov o1.xyz, r2.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[0].xyxx  // outputStream<0,0>
                  mov o4.x, r5.x  // outputStream<0>
                  mov o4.y, r5.y  // outputStream<0>
                  mov o4.z, r5.z  // outputStream<0>
                  mov o4.w, r2.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r2.y, r1.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r2.z, r1.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r2.w, r1.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r4.x, r1.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r4.y, r1.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r4.z, r1.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r1.w, r1.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r2.x  // outputStream<0>
                  mov o0.y, r2.y  // outputStream<0>
                  mov o0.z, r2.z  // outputStream<0>
                  mov o0.w, r2.w  // outputStream<0>
                  mov o1.xyz, r1.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[1].xyxx  // outputStream<0,0>
                  mov o4.x, r4.x  // outputStream<0>
                  mov o4.y, r4.y  // outputStream<0>
                  mov o4.z, r4.z  // outputStream<0>
                  mov o4.w, r1.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r3.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r3.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.w, r3.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r2.x, r3.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r2.y, r3.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r2.z, r3.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r2.w, r3.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r1.w  // outputStream<0>
                  mov o1.xyz, r3.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[2].xyxx  // outputStream<0,0>
                  mov o4.x, r2.x  // outputStream<0>
                  mov o4.y, r2.y  // outputStream<0>
                  mov o4.z, r2.z  // outputStream<0>
                  mov o4.w, r2.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 73
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r0.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r0.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.w, r0.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  dp4 r2.x, r0.xyzw, cb0[4].xyzw  // gout<12:NaN:Inf>
                  dp4 r2.y, r0.xyzw, cb0[5].xyzw  // gout<13:NaN:Inf>
                  dp4 r2.z, r0.xyzw, cb0[6].xyzw  // gout<14:NaN:Inf>
                  dp4 r0.w, r0.xyzw, cb0[7].xyzw  // gout<15:NaN:Inf>
                
                #line 80
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r1.w  // outputStream<0>
                  mov o1.xyz, r0.xyzx  // outputStream<0,0,0>
                  mov o2.xyz, l(0,1.000000,0,0)  // outputStream<0,0,0>
                  mov o3.xy, cb2[3].xyxx  // outputStream<0,0>
                  mov o4.x, r2.x  // outputStream<0>
                  mov o4.y, r2.y  // outputStream<0>
                  mov o4.z, r2.z  // outputStream<0>
                  mov o4.w, r0.w  // outputStream<0>
                  mov o5.x, vPrim  // outputStream<0>
                  emit_stream m0
                
                #line 51
                endif 
                
                #line 48
                ret 
                // Approximately 110 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //   uint gTextureCount;                // Offset:   24 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float     zw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyz 
                // SV_PrimitiveID           0   x           5   PRIMID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                // SV_TARGET                1   xyzw        1   TARGET  float   xyzw
                // SV_TARGET                2   xyzw        2   TARGET  float   xyzw
                // SV_TARGET                3   xyzw        3   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.zw, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps_sgv v5.x, primitive_id
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                dcl_temps 2
                
                #line 154 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                udiv null, r0.x, v5.x, cb1[1].z
                utof r0.z, r0.x  // uvw<2:[0f,4.29497e+009f]>
                mov r0.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0  // textureColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r1.x, r0.w, l(-0.050000)
                
                #line 166
                mov o0.xyzw, r0.xyzw  // PSDeferredBillboard<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 156
                lt r0.x, r1.x, l(0.000000)
                discard r0.x
                
                #line 166
                mov o1.xyz, v2.xyzx  // PSDeferredBillboard<4,5,6>
                mov o1.w, cb1[1].y  // PSDeferredBillboard<7>
                
                #line 162
                div o2.w, v0.z, v0.w  // PSDeferredBillboard<11:NaN:Inf>
                
                #line 166
                mov o2.xyz, v1.xyzx  // PSDeferredBillboard<8,9,10>
                mov o3.xyz, v4.xyzx  // PSDeferredBillboard<12,13,14>
                mov o3.w, cb1[1].x  // PSDeferredBillboard<15>
                ret 
                // Approximately 15 instruction slots used
                            
            };
            RasterizerState = RasterizerSolid;
        }

    }

    technique11 ShadowMapBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                
                #line 44 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add o0.xyz, v0.xyzx, l(0.000000, -0.050000, 0.000000, 0.000000)  // VSBillboard<0,1,2>
                mov o1.xy, v1.xyxx  // VSBillboard<3,4>
                ret 
                // Approximately 3 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorldViewProjection;     // Offset:    0 Size:    64
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  128 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  144
                //       float Ambient;                 // Offset:  156
                //       float Diffuse;                 // Offset:  160
                //       float3 Direction;              // Offset:  164
                //       float CastShadow;              // Offset:  176
                //       float Enabled;                 // Offset:  180
                //
                //   } gDirLights[3];                   // Offset:  144 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  288
                //       float Ambient;                 // Offset:  300
                //       float Diffuse;                 // Offset:  304
                //       float3 Position;               // Offset:  308
                //       float Radius;                  // Offset:  320
                //       float CastShadow;              // Offset:  324
                //       float Enabled;                 // Offset:  328
                //
                //   } gPointLights[4];                 // Offset:  288 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  480
                //       float Ambient;                 // Offset:  492
                //       float Diffuse;                 // Offset:  496
                //       float3 Position;               // Offset:  500
                //       float3 Direction;              // Offset:  512
                //       float Spot;                    // Offset:  524
                //       float AttenuationConstant;     // Offset:  528
                //       float AttenuationLinear;       // Offset:  532
                //       float AttenuationExp;          // Offset:  536
                //       float CastShadow;              // Offset:  540
                //       float Enabled;                 // Offset:  544
                //
                //   } gSpotLights[4];                  // Offset:  480 Size:   308 [unused]
                //   float gFogStart;                   // Offset:  788 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  792 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  800 Size:    16 [unused]
                //   float gRadius;                     // Offset:  816 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SIZE                     0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint     NO
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 5
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_maxout 4
                
                #line 87 "C:\Users\25466449\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[8].xyzx, -v[0][0].xyzx  // look<0:Inf,1:Inf,2:Inf>
                eq r0.w, cb0[51].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[51].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 92
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // look<2:NaN:Inf,0:NaN:Inf>
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                
                #line 100
                  mul r0.w, l(0.500000), v[0][1].x  // halfWidth<0:[-1.70141e+038f,1.70141e+038f]>
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                
                #line 110
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r4.y, r2.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r4.z, r2.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r2.x, r2.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  mov o0.x, r4.x  // outputStream<0>
                  mov o0.y, r4.y  // outputStream<0>
                  mov o0.z, r4.z  // outputStream<0>
                  mov o0.w, r2.x  // outputStream<0>
                  emit_stream m0
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r2.y, r1.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r2.z, r1.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.x, r1.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  mov o0.x, r2.x  // outputStream<0>
                  mov o0.y, r2.y  // outputStream<0>
                  mov o0.z, r2.z  // outputStream<0>
                  mov o0.w, r1.x  // outputStream<0>
                  emit_stream m0
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r3.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r3.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r1.w, r3.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r1.w  // outputStream<0>
                  emit_stream m0
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[0].xyzw  // gout<0:NaN:Inf>
                  dp4 r1.y, r0.xyzw, cb0[1].xyzw  // gout<1:NaN:Inf>
                  dp4 r1.z, r0.xyzw, cb0[2].xyzw  // gout<2:NaN:Inf>
                  dp4 r0.x, r0.xyzw, cb0[3].xyzw  // gout<3:NaN:Inf>
                  mov o0.x, r1.x  // outputStream<0>
                  mov o0.y, r1.y  // outputStream<0>
                  mov o0.z, r1.z  // outputStream<0>
                  mov o0.w, r0.x  // outputStream<0>
                  emit_stream m0
                
                #line 88
                endif 
                
                #line 85
                ret 
                // Approximately 62 instruction slots used
                            
            };
            PixelShader = NULL;
            RasterizerState = RasterizerDepth;
        }

    }

}

