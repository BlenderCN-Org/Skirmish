//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float4x4 gShadowTransform;          // Offset:  128, size:   64
    float3  gEyePositionWorld;          // Offset:  192, size:   12
    DirectionalLight gDirLights[3];     // Offset:  208, size:  136
    PointLight gPointLights[4];         // Offset:  352, size:  188
    SpotLight gSpotLights[4];           // Offset:  544, size:  252
    float   gFogStart;                  // Offset:  796, size:    4
    float   gFogRange;                  // Offset:  800, size:    4
    float4  gFogColor;                  // Offset:  816, size:   16
    float   gRadius;                    // Offset:  832, size:    4
}

cbuffer cbPerObject : register(b1)
{
    Material gMaterial;                 // Offset:    0, size:   24
    uint    gTextureCount;              // Offset:   24, size:    4
}

cbuffer cbFixed : register(b2)
{
    float2  gQuadTexC[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 6 local object(s)
//
SamplerState SamplerPoint
{
};
SamplerState SamplerLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState SamplerAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState SamplerComparisonShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
Texture2DArray gTextureArray;
Texture2D gShadowMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 ForwardBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                //
                // Initial variable locations:
                //   v0.x <- input.positionWorld.x; v0.y <- input.positionWorld.y; v0.z <- input.positionWorld.z; 
                //   v1.x <- input.sizeWorld.x; v1.y <- input.sizeWorld.y; 
                //   o1.x <- <VSBillboard return value>.sizeWorld.x; o1.y <- <VSBillboard return value>.sizeWorld.y; 
                //   o0.x <- <VSBillboard return value>.centerWorld.x; o0.y <- <VSBillboard return value>.centerWorld.y; o0.z <- <VSBillboard return value>.centerWorld.z
                //
                #line 42 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                mad o0.y, -v1.y, l(0.100000), v0.y
                
                #line 45
                mov o0.xz, v0.xxzx
                mov o1.xy, v1.xyxx
                ret 
                // Approximately 4 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float gRadius;                     // Offset:  832 Size:     4
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gQuadTexC[4];               // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // TEXCOORD                 1   xyzw        4     NONE   float   xyzw
                // SV_PrimitiveID           0   x           5   PRIMID    uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[53], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 7
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output_sgv o5.x, primitive_id
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- outputStream; 
                //   v[0][0].x <- input[0].centerWorld.x; v[0][0].y <- input[0].centerWorld.y; v[0][0].z <- input[0].centerWorld.z; 
                //   v[0][1].x <- input[0].sizeWorld.x; v[0][1].y <- input[0].sizeWorld.y
                //
                #line 51 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[12].xyzx, -v[0][0].xyzx  // r0.x <- look.x; r0.y <- look.y; r0.z <- look.z
                eq r0.w, cb0[52].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[52].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 56
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // r1.y <- look.z; r1.z <- look.x
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // r0.x <- right.x; r0.y <- right.y; r0.z <- right.z
                
                #line 64
                  mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                
                #line 74
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[4].xyzw  // r4.x <- gout.positionHomogeneous.x
                  dp4 r4.y, r2.xyzw, cb0[5].xyzw  // r4.y <- gout.positionHomogeneous.y
                  dp4 r4.z, r2.xyzw, cb0[6].xyzw  // r4.z <- gout.positionHomogeneous.z
                  dp4 r4.w, r2.xyzw, cb0[7].xyzw  // r4.w <- gout.positionHomogeneous.w
                  dp4 r5.x, r2.xyzw, cb0[0].xyzw  // r5.x <- gout.positionWorld.x
                  dp4 r5.y, r2.xyzw, cb0[1].xyzw  // r5.y <- gout.positionWorld.y
                  dp4 r5.z, r2.xyzw, cb0[2].xyzw  // r5.z <- gout.positionWorld.z
                  dp4 r5.w, r2.xyzw, cb0[8].xyzw  // r5.w <- gout.shadowHomogeneous.x
                  dp4 r6.x, r2.xyzw, cb0[9].xyzw  // r6.x <- gout.shadowHomogeneous.y
                  dp4 r6.y, r2.xyzw, cb0[10].xyzw  // r6.y <- gout.shadowHomogeneous.z
                  dp4 r2.x, r2.xyzw, cb0[11].xyzw  // r2.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r4.x
                  mov o0.y, r4.y
                  mov o0.z, r4.z
                  mov o0.w, r4.w
                  mov o1.x, r5.x
                  mov o1.y, r5.y
                  mov o1.z, r5.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[0].xyxx
                  mov o4.x, r5.w
                  mov o4.y, r6.x
                  mov o4.z, r6.y
                  mov o4.w, r2.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[4].xyzw  // r2.x <- gout.positionHomogeneous.x
                  dp4 r2.y, r1.xyzw, cb0[5].xyzw  // r2.y <- gout.positionHomogeneous.y
                  dp4 r2.z, r1.xyzw, cb0[6].xyzw  // r2.z <- gout.positionHomogeneous.z
                  dp4 r2.w, r1.xyzw, cb0[7].xyzw  // r2.w <- gout.positionHomogeneous.w
                  dp4 r4.x, r1.xyzw, cb0[0].xyzw  // r4.x <- gout.positionWorld.x
                  dp4 r4.y, r1.xyzw, cb0[1].xyzw  // r4.y <- gout.positionWorld.y
                  dp4 r4.z, r1.xyzw, cb0[2].xyzw  // r4.z <- gout.positionWorld.z
                  dp4 r4.w, r1.xyzw, cb0[8].xyzw  // r4.w <- gout.shadowHomogeneous.x
                  dp4 r5.x, r1.xyzw, cb0[9].xyzw  // r5.x <- gout.shadowHomogeneous.y
                  dp4 r5.y, r1.xyzw, cb0[10].xyzw  // r5.y <- gout.shadowHomogeneous.z
                  dp4 r1.x, r1.xyzw, cb0[11].xyzw  // r1.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r2.x
                  mov o0.y, r2.y
                  mov o0.z, r2.z
                  mov o0.w, r2.w
                  mov o1.x, r4.x
                  mov o1.y, r4.y
                  mov o1.z, r4.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[1].xyxx
                  mov o4.x, r4.w
                  mov o4.y, r5.x
                  mov o4.z, r5.y
                  mov o4.w, r1.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[4].xyzw  // r1.x <- gout.positionHomogeneous.x
                  dp4 r1.y, r3.xyzw, cb0[5].xyzw  // r1.y <- gout.positionHomogeneous.y
                  dp4 r1.z, r3.xyzw, cb0[6].xyzw  // r1.z <- gout.positionHomogeneous.z
                  dp4 r1.w, r3.xyzw, cb0[7].xyzw  // r1.w <- gout.positionHomogeneous.w
                  dp4 r2.x, r3.xyzw, cb0[0].xyzw  // r2.x <- gout.positionWorld.x
                  dp4 r2.y, r3.xyzw, cb0[1].xyzw  // r2.y <- gout.positionWorld.y
                  dp4 r2.z, r3.xyzw, cb0[2].xyzw  // r2.z <- gout.positionWorld.z
                  dp4 r2.w, r3.xyzw, cb0[8].xyzw  // r2.w <- gout.shadowHomogeneous.x
                  dp4 r4.x, r3.xyzw, cb0[9].xyzw  // r4.x <- gout.shadowHomogeneous.y
                  dp4 r4.y, r3.xyzw, cb0[10].xyzw  // r4.y <- gout.shadowHomogeneous.z
                  dp4 r3.x, r3.xyzw, cb0[11].xyzw  // r3.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r1.w
                  mov o1.x, r2.x
                  mov o1.y, r2.y
                  mov o1.z, r2.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[2].xyxx
                  mov o4.x, r2.w
                  mov o4.y, r4.x
                  mov o4.z, r4.y
                  mov o4.w, r3.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[4].xyzw
                  dp4 r1.y, r0.xyzw, cb0[5].xyzw
                  dp4 r1.z, r0.xyzw, cb0[6].xyzw
                  dp4 r1.w, r0.xyzw, cb0[7].xyzw
                  dp4 r2.x, r0.xyzw, cb0[0].xyzw
                  dp4 r2.y, r0.xyzw, cb0[1].xyzw
                  dp4 r2.z, r0.xyzw, cb0[2].xyzw
                  dp4 r2.w, r0.xyzw, cb0[8].xyzw
                  dp4 r3.x, r0.xyzw, cb0[9].xyzw  // r3.x <- gout.shadowHomogeneous.y
                  dp4 r3.y, r0.xyzw, cb0[10].xyzw  // r3.y <- gout.shadowHomogeneous.z
                  dp4 r0.x, r0.xyzw, cb0[11].xyzw  // r0.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r1.w
                  mov o1.x, r2.x
                  mov o1.y, r2.y
                  mov o1.z, r2.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[3].xyxx
                  mov o4.x, r2.w
                  mov o4.y, r3.x
                  mov o4.z, r3.y
                  mov o4.w, r0.x
                  mov o5.x, vPrim
                  emit_stream m0
                endif 
                ret 
                // Approximately 130 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252
                //   float gFogStart;                   // Offset:  796 Size:     4
                //   float gFogRange;                   // Offset:  800 Size:     4
                //   float4 gFogColor;                  // Offset:  816 Size:    16
                //   float gRadius;                     // Offset:  832 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //   uint gTextureCount;                // Offset:   24 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // SamplerComparisonShadow         sampler_c      NA          NA    1        1
                // gTextureArray                     texture  float4     2darray    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // TEXCOORD                 1   xyzw        4     NONE   float   xyzw
                // SV_PrimitiveID           0   x           5   PRIMID    uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[52], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps_sgv v5.x, primitive_id
                dcl_output o0.xyzw
                dcl_temps 7
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.positionWorld.x; v1.y <- input.positionWorld.y; v1.z <- input.positionWorld.z; 
                //   v2.x <- input.normalWorld.x; v2.y <- input.normalWorld.y; v2.z <- input.normalWorld.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   v4.x <- input.shadowHomogeneous.x; v4.y <- input.shadowHomogeneous.y; v4.z <- input.shadowHomogeneous.z; v4.w <- input.shadowHomogeneous.w; 
                //   v5.x <- input.primitiveID; 
                //   o0.x <- <PSForwardBillboard return value>.x; o0.y <- <PSForwardBillboard return value>.y; o0.z <- <PSForwardBillboard return value>.z; o0.w <- <PSForwardBillboard return value>.w
                //
                #line 120 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                udiv null, r0.x, v5.x, cb1[1].z
                utof r0.z, r0.x  // r0.z <- uvw.z
                mov r0.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0  // r0.x <- textureColor.x; r0.y <- textureColor.y; r0.z <- textureColor.z; r0.w <- textureColor.w
                add r1.x, r0.w, l(-0.050000)
                lt r1.x, r1.x, l(0.000000)
                discard_nz r1.x
                add r1.xyz, -v1.xyzx, cb0[12].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r2.x, r1.w
                mul r1.xyz, r1.xyzx, r2.xxxx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 302 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                eq r2.x, cb0[15].y, l(1.000000)
                if_nz r2.x
                
                #line 154
                  dp3 r2.x, v2.xyzx, -cb0[14].yzwy
                  max r2.y, r2.x, l(0.000000)  // r2.y <- diffuseFactor
                  lt r2.z, l(0.000000), r2.y
                  mul r3.x, r2.y, cb0[14].x  // r3.x <- diffuse
                  dp3 r2.y, cb0[14].yzwy, v2.xyzx
                  add r2.y, r2.y, r2.y
                  mad r4.xyz, v2.xyzx, -r2.yyyy, cb0[14].yzwy
                  dp3 r2.y, r4.xyzx, r4.xyzx
                  rsq r2.y, r2.y
                  mul r4.xyz, r2.yyyy, r4.xyzx  // r4.x <- lightReflection.x; r4.y <- lightReflection.y; r4.z <- lightReflection.z
                  dp3 r2.y, r1.xyzx, r4.xyzx
                  max r2.y, r2.y, l(0.000000)  // r2.y <- specularFactor
                  lt r2.w, l(0.000000), r2.y
                
                #line 166
                  max r3.z, cb1[1].y, l(1.000000)
                  log r2.y, r2.y
                  mul r2.y, r2.y, r3.z
                  exp r2.y, r2.y  // r2.y <- specularFactor
                  mul r2.y, r2.y, cb1[1].x  // r2.y <- specular
                  and r3.y, r2.y, r2.w  // r3.y <- specular
                  and r2.yz, r2.zzzz, r3.xxyx  // r2.y <- diffuse; r2.z <- specular
                  mul r3.xyz, r0.xyzx, cb0[13].xyzx
                  add r2.y, r2.y, cb0[13].w
                  add r2.y, r2.z, r2.y
                  mul r2.yzw, r2.yyyy, r3.xxyz  // r2.y <- litColor.x; r2.z <- litColor.y; r2.w <- litColor.z
                  log r2.yzw, r2.yyzw
                  mul r2.yzw, r2.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r2.yzw, r2.yyzw
                  min r3.xyz, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                
                #line 201
                  eq r2.y, cb0[15].x, l(1.000000)
                
                #line 115
                  div r4.xyz, v4.xyzx, v4.wwww  // r4.x <- shadowPosH.x; r4.y <- shadowPosH.y; r4.z <- shadowPosH.z
                
                #line 125
                  add r5.xyzw, r4.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t1.xxxx, s1, r4.z  // r2.z <- percentLit
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  add r5.xyzw, r4.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  add r5.xyzw, r4.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  add r5.xyzw, r4.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.zwzz, t1.xxxx, s1, r4.z
                  add r2.z, r2.w, r2.z
                
                #line 129
                  mul r2.x, r2.x, r2.z
                
                #line 205
                  mul r2.x, r2.x, l(0.111111)  // r2.x <- shadowFactor
                  mov r3.w, r0.w
                  mul r4.xyzw, r2.xxxx, r3.xyzw  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z; r4.w <- litColor.w
                  movc r2.xyzw, r2.yyyy, r4.xyzw, r3.xyzw  // r2.x <- litColor.x; r2.y <- litColor.y; r2.z <- litColor.z; r2.w <- litColor.w
                
                #line 314
                else 
                  mov r2.xyzw, l(0,0,0,0)
                endif 
                
                #line 302
                eq r3.x, cb0[18].y, l(1.000000)
                if_nz r3.x
                
                #line 154
                  dp3 r3.x, v2.xyzx, -cb0[17].yzwy
                  max r3.y, r3.x, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[17].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[17].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[17].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- specularFactor
                  lt r3.w, l(0.000000), r3.y
                
                #line 166
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // r3.y <- specularFactor
                  mul r3.y, r3.y, cb1[1].x  // r3.y <- specular
                  and r4.y, r3.y, r3.w  // r4.y <- specular
                  and r3.yz, r3.zzzz, r4.xxyx  // r3.y <- diffuse; r3.z <- specular
                  mul r4.xyz, r0.xyzx, cb0[16].xyzx
                  add r3.y, r3.y, cb0[16].w
                  add r3.y, r3.z, r3.y
                  mul r3.yzw, r3.yyyy, r4.xxyz  // r3.y <- litColor.x; r3.z <- litColor.y; r3.w <- litColor.z
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.yzw, r3.yyzw
                  min r4.xyz, r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 201
                  eq r3.y, cb0[18].x, l(1.000000)
                
                #line 115
                  div r5.xyz, v4.xyzx, v4.wwww  // r5.x <- shadowPosH.x; r5.y <- shadowPosH.y; r5.z <- shadowPosH.z
                
                #line 125
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // r3.z <- percentLit
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                
                #line 129
                  mul r3.x, r3.x, r3.z
                
                #line 205
                  mul r3.x, r3.x, l(0.111111)  // r3.x <- shadowFactor
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // r5.x <- litColor.x; r5.y <- litColor.y; r5.z <- litColor.z; r5.w <- litColor.w
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                
                #line 304
                  add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- litColor.x; r2.y <- litColor.y; r2.z <- litColor.z; r2.w <- litColor.w
                
                #line 314
                endif 
                
                #line 302
                eq r3.x, cb0[21].y, l(1.000000)
                if_nz r3.x
                
                #line 154
                  dp3 r3.x, v2.xyzx, -cb0[20].yzwy
                  max r3.y, r3.x, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[20].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[20].yzwy, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[20].yzwy
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- specularFactor
                  lt r3.w, l(0.000000), r3.y
                
                #line 166
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // r3.y <- specularFactor
                  mul r3.y, r3.y, cb1[1].x  // r3.y <- specular
                  and r4.y, r3.y, r3.w  // r4.y <- specular
                  and r3.yz, r3.zzzz, r4.xxyx  // r3.y <- diffuse; r3.z <- specular
                  mul r4.xyz, r0.xyzx, cb0[19].xyzx
                  add r3.y, r3.y, cb0[19].w
                  add r3.y, r3.z, r3.y
                  mul r3.yzw, r3.yyyy, r4.xxyz  // r3.y <- litColor.x; r3.z <- litColor.y; r3.w <- litColor.z
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.yzw, r3.yyzw
                  min r4.xyz, r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 201
                  eq r3.y, cb0[21].x, l(1.000000)
                
                #line 115
                  div r5.xyz, v4.xyzx, v4.wwww  // r5.x <- shadowPosH.x; r5.y <- shadowPosH.y; r5.z <- shadowPosH.z
                
                #line 125
                  add r6.xyzw, r5.xyxy, l(-0.000488, -0.000488, 0.000000, -0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.z, r6.xyxx, t1.xxxx, s1, r5.z  // r3.z <- percentLit
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000488, -0.000488, -0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000488, 0.000000, -0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  add r6.xyzw, r5.xyxy, l(0.000000, 0.000488, 0.000488, 0.000488)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t1.xxxx, s1, r5.z
                  add r3.z, r3.w, r3.z
                
                #line 129
                  mul r3.x, r3.x, r3.z
                
                #line 205
                  mul r3.x, r3.x, l(0.111111)  // r3.x <- shadowFactor
                  mov r4.w, r0.w
                  mul r5.xyzw, r3.xxxx, r4.xyzw  // r5.x <- litColor.x; r5.y <- litColor.y; r5.z <- litColor.z; r5.w <- litColor.w
                  movc r3.xyzw, r3.yyyy, r5.xyzw, r4.xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                
                #line 304
                  add r2.xyzw, r2.xyzw, r3.xyzw
                
                #line 314
                endif 
                
                #line 320
                eq r3.x, cb0[24].z, l(1.000000)
                if_nz r3.x
                
                #line 222
                  add r3.xyz, v1.xyzx, -cb0[23].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // r3.w <- distance
                  div r3.xyz, r3.xyzx, r3.wwww
                
                #line 154
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // r4.x <- diffuseFactor
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[23].x  // r5.x <- diffuse
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // r3.x <- lightReflection.x; r3.y <- lightReflection.y; r3.z <- lightReflection.z
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // r3.x <- specularFactor
                  lt r3.y, l(0.000000), r3.x
                
                #line 166
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // r3.x <- specularFactor
                  mul r3.x, r3.x, cb1[1].x  // r3.x <- specular
                  and r5.y, r3.x, r3.y  // r5.y <- specular
                  and r3.xy, r4.yyyy, r5.xyxx  // r3.x <- diffuse; r3.y <- specular
                  mul r4.xyz, r0.xyzx, cb0[22].xyzx
                  add r3.x, r3.x, cb0[22].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r4.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 98
                  div r3.x, r3.w, cb0[24].x  // r3.x <- f
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // r3.x <- denom
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // r3.x <- d
                  add r3.x, r3.x, l(1.000000)  // r3.x <- dn
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[23].x, r3.x  // r3.x <- <CalcSphericAttenuation return value>
                
                #line 110
                  and r3.x, r3.x, r3.y
                
                #line 240
                  mov r4.w, r0.w
                
                #line 322
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw
                
                #line 330
                endif 
                
                #line 320
                eq r3.x, cb0[27].z, l(1.000000)
                if_nz r3.x
                
                #line 222
                  add r3.xyz, v1.xyzx, -cb0[26].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // r3.w <- distance
                  div r3.xyz, r3.xyzx, r3.wwww
                
                #line 154
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // r4.x <- diffuseFactor
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[26].x  // r5.x <- diffuse
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // r3.x <- lightReflection.x; r3.y <- lightReflection.y; r3.z <- lightReflection.z
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // r3.x <- specularFactor
                  lt r3.y, l(0.000000), r3.x
                
                #line 166
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // r3.x <- specularFactor
                  mul r3.x, r3.x, cb1[1].x  // r3.x <- specular
                  and r5.y, r3.x, r3.y  // r5.y <- specular
                  and r3.xy, r4.yyyy, r5.xyxx  // r3.x <- diffuse; r3.y <- specular
                  mul r4.xyz, r0.xyzx, cb0[25].xyzx
                  add r3.x, r3.x, cb0[25].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r4.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 98
                  div r3.x, r3.w, cb0[27].x  // r3.x <- f
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // r3.x <- denom
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // r3.x <- d
                  add r3.x, r3.x, l(1.000000)  // r3.x <- dn
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[26].x, r3.x  // r3.x <- <CalcSphericAttenuation return value>
                
                #line 110
                  and r3.x, r3.x, r3.y
                
                #line 240
                  mov r4.w, r0.w
                
                #line 322
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw
                
                #line 330
                endif 
                
                #line 320
                eq r3.x, cb0[30].z, l(1.000000)
                if_nz r3.x
                
                #line 222
                  add r3.xyz, v1.xyzx, -cb0[29].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // r3.w <- distance
                  div r3.xyz, r3.xyzx, r3.wwww
                
                #line 154
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // r4.x <- diffuseFactor
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[29].x  // r5.x <- diffuse
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // r3.x <- lightReflection.x; r3.y <- lightReflection.y; r3.z <- lightReflection.z
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // r3.x <- specularFactor
                  lt r3.y, l(0.000000), r3.x
                
                #line 166
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // r3.x <- specularFactor
                  mul r3.x, r3.x, cb1[1].x  // r3.x <- specular
                  and r5.y, r3.x, r3.y  // r5.y <- specular
                  and r3.xy, r4.yyyy, r5.xyxx  // r3.x <- diffuse; r3.y <- specular
                  mul r4.xyz, r0.xyzx, cb0[28].xyzx
                  add r3.x, r3.x, cb0[28].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r4.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 98
                  div r3.x, r3.w, cb0[30].x  // r3.x <- f
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // r3.x <- denom
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // r3.x <- d
                  add r3.x, r3.x, l(1.000000)  // r3.x <- dn
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[29].x, r3.x  // r3.x <- <CalcSphericAttenuation return value>
                
                #line 110
                  and r3.x, r3.x, r3.y
                
                #line 240
                  mov r4.w, r0.w
                
                #line 322
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw
                
                #line 330
                endif 
                
                #line 320
                eq r3.x, cb0[33].z, l(1.000000)
                if_nz r3.x
                
                #line 222
                  add r3.xyz, v1.xyzx, -cb0[32].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.w, r3.xyzx, r3.xyzx
                  sqrt r3.w, r3.w  // r3.w <- distance
                  div r3.xyz, r3.xyzx, r3.wwww
                
                #line 154
                  dp3 r4.x, v2.xyzx, -r3.xyzx
                  max r4.x, r4.x, l(0.000000)  // r4.x <- diffuseFactor
                  lt r4.y, l(0.000000), r4.x
                  mul r5.x, r4.x, cb0[32].x  // r5.x <- diffuse
                  dp3 r4.x, r3.xyzx, v2.xyzx
                  add r4.x, r4.x, r4.x
                  mad r3.xyz, v2.xyzx, -r4.xxxx, r3.xyzx
                  dp3 r4.x, r3.xyzx, r3.xyzx
                  rsq r4.x, r4.x
                  mul r3.xyz, r3.xyzx, r4.xxxx  // r3.x <- lightReflection.x; r3.y <- lightReflection.y; r3.z <- lightReflection.z
                  dp3 r3.x, r1.xyzx, r3.xyzx
                  max r3.x, r3.x, l(0.000000)  // r3.x <- specularFactor
                  lt r3.y, l(0.000000), r3.x
                
                #line 166
                  max r3.z, cb1[1].y, l(1.000000)
                  log r3.x, r3.x
                  mul r3.x, r3.x, r3.z
                  exp r3.x, r3.x  // r3.x <- specularFactor
                  mul r3.x, r3.x, cb1[1].x  // r3.x <- specular
                  and r5.y, r3.x, r3.y  // r5.y <- specular
                  and r3.xy, r4.yyyy, r5.xyxx  // r3.x <- diffuse; r3.y <- specular
                  mul r4.xyz, r0.xyzx, cb0[31].xyzx
                  add r3.x, r3.x, cb0[31].w
                  add r3.x, r3.y, r3.x
                  mul r3.xyz, r3.xxxx, r4.xyzx  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                  log r3.xyz, r3.xyzx
                  mul r3.xyz, r3.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r3.xyz, r3.xyzx
                  min r4.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 98
                  div r3.x, r3.w, cb0[33].x  // r3.x <- f
                  mad r3.x, -r3.x, r3.x, l(1.000000)  // r3.x <- denom
                  lt r3.y, l(0.000000), r3.x
                  div r3.x, r3.w, r3.x  // r3.x <- d
                  add r3.x, r3.x, l(1.000000)  // r3.x <- dn
                  mul r3.x, r3.x, r3.x
                  div r3.x, cb0[32].x, r3.x  // r3.x <- <CalcSphericAttenuation return value>
                
                #line 110
                  and r3.x, r3.x, r3.y
                
                #line 240
                  mov r4.w, r0.w
                
                #line 322
                  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw
                
                #line 330
                endif 
                
                #line 336
                eq r3.x, cb0[37].z, l(1.000000)
                if_nz r3.x
                
                #line 254
                  add r3.xyz, v1.xyzx, -cb0[35].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.x, r3.xyzx, cb0[36].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // r3.x <- lightToSurfaceAngle
                  ge r3.x, cb0[36].w, r3.x
                
                #line 154
                  dp3 r3.y, v2.xyzx, -cb0[36].xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[35].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[36].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[36].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- specularFactor
                  lt r3.w, l(0.000000), r3.y
                
                #line 166
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // r3.y <- specularFactor
                  mul r3.y, r3.y, cb1[1].x  // r3.y <- specular
                  and r4.y, r3.y, r3.w  // r4.y <- specular
                  and r3.yz, r3.zzzz, r4.xxyx  // r3.y <- diffuse; r3.z <- specular
                  mul r4.xyz, r0.xyzx, cb0[34].xyzx
                  add r3.y, r3.y, cb0[34].w
                  add r3.y, r3.z, r3.y
                  mul r3.yzw, r3.yyyy, r4.xxyz  // r3.y <- litColor.x; r3.z <- litColor.y; r3.w <- litColor.z
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.yzw, r3.yyzw
                  min r4.xyz, r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 277
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                
                #line 338
                  add r2.xyzw, r2.xyzw, r3.xyzw
                
                #line 346
                endif 
                
                #line 336
                eq r3.x, cb0[41].z, l(1.000000)
                if_nz r3.x
                
                #line 254
                  add r3.xyz, v1.xyzx, -cb0[39].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.x, r3.xyzx, cb0[40].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // r3.x <- lightToSurfaceAngle
                  ge r3.x, cb0[40].w, r3.x
                
                #line 154
                  dp3 r3.y, v2.xyzx, -cb0[40].xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[39].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[40].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[40].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- specularFactor
                  lt r3.w, l(0.000000), r3.y
                
                #line 166
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // r3.y <- specularFactor
                  mul r3.y, r3.y, cb1[1].x  // r3.y <- specular
                  and r4.y, r3.y, r3.w  // r4.y <- specular
                  and r3.yz, r3.zzzz, r4.xxyx  // r3.y <- diffuse; r3.z <- specular
                  mul r4.xyz, r0.xyzx, cb0[38].xyzx
                  add r3.y, r3.y, cb0[38].w
                  add r3.y, r3.z, r3.y
                  mul r3.yzw, r3.yyyy, r4.xxyz  // r3.y <- litColor.x; r3.z <- litColor.y; r3.w <- litColor.z
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.yzw, r3.yyzw
                  min r4.xyz, r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 277
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                
                #line 338
                  add r2.xyzw, r2.xyzw, r3.xyzw
                
                #line 346
                endif 
                
                #line 336
                eq r3.x, cb0[45].z, l(1.000000)
                if_nz r3.x
                
                #line 254
                  add r3.xyz, v1.xyzx, -cb0[43].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.x, r3.xyzx, cb0[44].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // r3.x <- lightToSurfaceAngle
                  ge r3.x, cb0[44].w, r3.x
                
                #line 154
                  dp3 r3.y, v2.xyzx, -cb0[44].xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[43].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[44].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[44].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r3.y, r1.xyzx, r5.xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- specularFactor
                  lt r3.w, l(0.000000), r3.y
                
                #line 166
                  max r4.z, cb1[1].y, l(1.000000)
                  log r3.y, r3.y
                  mul r3.y, r3.y, r4.z
                  exp r3.y, r3.y  // r3.y <- specularFactor
                  mul r3.y, r3.y, cb1[1].x  // r3.y <- specular
                  and r4.y, r3.y, r3.w  // r4.y <- specular
                  and r3.yz, r3.zzzz, r4.xxyx  // r3.y <- diffuse; r3.z <- specular
                  mul r4.xyz, r0.xyzx, cb0[42].xyzx
                  add r3.y, r3.y, cb0[42].w
                  add r3.y, r3.z, r3.y
                  mul r3.yzw, r3.yyyy, r4.xxyz  // r3.y <- litColor.x; r3.z <- litColor.y; r3.w <- litColor.z
                  log r3.yzw, r3.yyzw
                  mul r3.yzw, r3.yyzw, l(0.000000, 0.454545, 0.454545, 0.454545)
                  exp r3.yzw, r3.yyzw
                  min r4.xyz, r3.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)  // r4.x <- litColor.x; r4.y <- litColor.y; r4.z <- litColor.z
                
                #line 277
                  mov r4.w, r0.w
                  and r3.xyzw, r3.xxxx, r4.xyzw  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z; r3.w <- litColor.w
                
                #line 338
                  add r2.xyzw, r2.xyzw, r3.xyzw
                
                #line 346
                endif 
                
                #line 336
                eq r3.x, cb0[49].z, l(1.000000)
                if_nz r3.x
                
                #line 254
                  add r3.xyz, v1.xyzx, -cb0[47].yzwy  // r3.x <- lightDirection.x; r3.y <- lightDirection.y; r3.z <- lightDirection.z
                  dp3 r3.x, r3.xyzx, cb0[48].xyzx
                  add r3.y, -|r3.x|, l(1.000000)
                  sqrt r3.y, r3.y
                  mad r3.z, |r3.x|, l(-0.018729), l(0.074261)
                  mad r3.z, r3.z, |r3.x|, l(-0.212114)
                  mad r3.z, r3.z, |r3.x|, l(1.570729)
                  mul r3.w, r3.y, r3.z
                  mad r3.w, r3.w, l(-2.000000), l(3.141593)
                  lt r3.x, r3.x, -r3.x
                  and r3.x, r3.x, r3.w
                  mad r3.x, r3.z, r3.y, r3.x
                  mul r3.x, r3.x, l(57.295780)  // r3.x <- lightToSurfaceAngle
                  ge r3.x, cb0[48].w, r3.x
                
                #line 154
                  dp3 r3.y, v2.xyzx, -cb0[48].xyzx
                  max r3.y, r3.y, l(0.000000)  // r3.y <- diffuseFactor
                  lt r3.z, l(0.000000), r3.y
                  mul r4.x, r3.y, cb0[47].x  // r4.x <- diffuse
                  dp3 r3.y, cb0[48].xyzx, v2.xyzx
                  add r3.y, r3.y, r3.y
                  mad r5.xyz, v2.xyzx, -r3.yyyy, cb0[48].xyzx
                  dp3 r3.y, r5.xyzx, r5.xyzx
                  rsq r3.y, r3.y
                  mul r5.xyz, r3.yyyy, r5.xyzx  // r5.x <- lightReflection.x; r5.y <- lightReflection.y; r5.z <- lightReflection.z
                  dp3 r1.x, r1.xyzx, r5.xyzx
                  max r1.x, r1.x, l(0.000000)  // r1.x <- specularFactor
                  lt r1.y, l(0.000000), r1.x
                
                #line 166
                  max r1.z, cb1[1].y, l(1.000000)
                  log r1.x, r1.x
                  mul r1.x, r1.x, r1.z
                  exp r1.x, r1.x  // r1.x <- specularFactor
                  mul r1.x, r1.x, cb1[1].x  // r1.x <- specular
                  and r4.y, r1.x, r1.y  // r4.y <- specular
                  and r1.xy, r3.zzzz, r4.xyxx  // r1.x <- diffuse; r1.y <- specular
                  mul r3.yzw, r0.xxyz, cb0[46].xxyz
                  add r1.x, r1.x, cb0[46].w
                  add r1.x, r1.y, r1.x
                  mul r1.xyz, r1.xxxx, r3.yzwy  // r1.x <- litColor.x; r1.y <- litColor.y; r1.z <- litColor.z
                  log r1.xyz, r1.xyzx
                  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
                  exp r1.xyz, r1.xyzx
                  min r0.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 277
                  and r0.xyzw, r0.xyzw, r3.xxxx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 338
                  add r2.xyzw, r0.xyzw, r2.xyzw
                
                #line 346
                endif 
                
                #line 139 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                lt r0.x, l(0.000000), cb0[50].x
                
                #line 142
                sqrt r0.y, r1.w  // r0.y <- distToEye
                
                #line 133 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\IncLights.fx"
                add r0.y, r0.y, -cb0[49].w
                div_sat r0.y, r0.y, cb0[50].x  // r0.y <- fogLerp
                add r1.xyzw, -r2.xyzw, cb0[51].xyzw
                mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw  // r1.x <- <ComputeFog return value>.x; r1.y <- <ComputeFog return value>.y; r1.z <- <ComputeFog return value>.z; r1.w <- <ComputeFog return value>.w
                
                #line 145 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
                ret 
                // Approximately 571 instruction slots used
                            
            };
        }

    }

    technique11 DeferredBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                //
                // Initial variable locations:
                //   v0.x <- input.positionWorld.x; v0.y <- input.positionWorld.y; v0.z <- input.positionWorld.z; 
                //   v1.x <- input.sizeWorld.x; v1.y <- input.sizeWorld.y; 
                //   o1.x <- <VSBillboard return value>.sizeWorld.x; o1.y <- <VSBillboard return value>.sizeWorld.y; 
                //   o0.x <- <VSBillboard return value>.centerWorld.x; o0.y <- <VSBillboard return value>.centerWorld.y; o0.z <- <VSBillboard return value>.centerWorld.z
                //
                #line 42 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                mad o0.y, -v1.y, l(0.100000), v0.y
                
                #line 45
                mov o0.xz, v0.xxzx
                mov o1.xy, v1.xyxx
                ret 
                // Approximately 4 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  128 Size:    64
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float gRadius;                     // Offset:  832 Size:     4
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gQuadTexC[4];               // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // TEXCOORD                 1   xyzw        4     NONE   float   xyzw
                // SV_PrimitiveID           0   x           5   PRIMID    uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[53], immediateIndexed
                dcl_constantbuffer cb2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 7
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output_sgv o5.x, primitive_id
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- outputStream; 
                //   v[0][0].x <- input[0].centerWorld.x; v[0][0].y <- input[0].centerWorld.y; v[0][0].z <- input[0].centerWorld.z; 
                //   v[0][1].x <- input[0].sizeWorld.x; v[0][1].y <- input[0].sizeWorld.y
                //
                #line 51 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[12].xyzx, -v[0][0].xyzx  // r0.x <- look.x; r0.y <- look.y; r0.z <- look.z
                eq r0.w, cb0[52].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[52].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 56
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // r1.y <- look.z; r1.z <- look.x
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // r0.x <- right.x; r0.y <- right.y; r0.z <- right.z
                
                #line 64
                  mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                
                #line 74
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[4].xyzw  // r4.x <- gout.positionHomogeneous.x
                  dp4 r4.y, r2.xyzw, cb0[5].xyzw  // r4.y <- gout.positionHomogeneous.y
                  dp4 r4.z, r2.xyzw, cb0[6].xyzw  // r4.z <- gout.positionHomogeneous.z
                  dp4 r4.w, r2.xyzw, cb0[7].xyzw  // r4.w <- gout.positionHomogeneous.w
                  dp4 r5.x, r2.xyzw, cb0[0].xyzw  // r5.x <- gout.positionWorld.x
                  dp4 r5.y, r2.xyzw, cb0[1].xyzw  // r5.y <- gout.positionWorld.y
                  dp4 r5.z, r2.xyzw, cb0[2].xyzw  // r5.z <- gout.positionWorld.z
                  dp4 r5.w, r2.xyzw, cb0[8].xyzw  // r5.w <- gout.shadowHomogeneous.x
                  dp4 r6.x, r2.xyzw, cb0[9].xyzw  // r6.x <- gout.shadowHomogeneous.y
                  dp4 r6.y, r2.xyzw, cb0[10].xyzw  // r6.y <- gout.shadowHomogeneous.z
                  dp4 r2.x, r2.xyzw, cb0[11].xyzw  // r2.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r4.x
                  mov o0.y, r4.y
                  mov o0.z, r4.z
                  mov o0.w, r4.w
                  mov o1.x, r5.x
                  mov o1.y, r5.y
                  mov o1.z, r5.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[0].xyxx
                  mov o4.x, r5.w
                  mov o4.y, r6.x
                  mov o4.z, r6.y
                  mov o4.w, r2.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[4].xyzw  // r2.x <- gout.positionHomogeneous.x
                  dp4 r2.y, r1.xyzw, cb0[5].xyzw  // r2.y <- gout.positionHomogeneous.y
                  dp4 r2.z, r1.xyzw, cb0[6].xyzw  // r2.z <- gout.positionHomogeneous.z
                  dp4 r2.w, r1.xyzw, cb0[7].xyzw  // r2.w <- gout.positionHomogeneous.w
                  dp4 r4.x, r1.xyzw, cb0[0].xyzw  // r4.x <- gout.positionWorld.x
                  dp4 r4.y, r1.xyzw, cb0[1].xyzw  // r4.y <- gout.positionWorld.y
                  dp4 r4.z, r1.xyzw, cb0[2].xyzw  // r4.z <- gout.positionWorld.z
                  dp4 r4.w, r1.xyzw, cb0[8].xyzw  // r4.w <- gout.shadowHomogeneous.x
                  dp4 r5.x, r1.xyzw, cb0[9].xyzw  // r5.x <- gout.shadowHomogeneous.y
                  dp4 r5.y, r1.xyzw, cb0[10].xyzw  // r5.y <- gout.shadowHomogeneous.z
                  dp4 r1.x, r1.xyzw, cb0[11].xyzw  // r1.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r2.x
                  mov o0.y, r2.y
                  mov o0.z, r2.z
                  mov o0.w, r2.w
                  mov o1.x, r4.x
                  mov o1.y, r4.y
                  mov o1.z, r4.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[1].xyxx
                  mov o4.x, r4.w
                  mov o4.y, r5.x
                  mov o4.z, r5.y
                  mov o4.w, r1.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[4].xyzw  // r1.x <- gout.positionHomogeneous.x
                  dp4 r1.y, r3.xyzw, cb0[5].xyzw  // r1.y <- gout.positionHomogeneous.y
                  dp4 r1.z, r3.xyzw, cb0[6].xyzw  // r1.z <- gout.positionHomogeneous.z
                  dp4 r1.w, r3.xyzw, cb0[7].xyzw  // r1.w <- gout.positionHomogeneous.w
                  dp4 r2.x, r3.xyzw, cb0[0].xyzw  // r2.x <- gout.positionWorld.x
                  dp4 r2.y, r3.xyzw, cb0[1].xyzw  // r2.y <- gout.positionWorld.y
                  dp4 r2.z, r3.xyzw, cb0[2].xyzw  // r2.z <- gout.positionWorld.z
                  dp4 r2.w, r3.xyzw, cb0[8].xyzw  // r2.w <- gout.shadowHomogeneous.x
                  dp4 r4.x, r3.xyzw, cb0[9].xyzw  // r4.x <- gout.shadowHomogeneous.y
                  dp4 r4.y, r3.xyzw, cb0[10].xyzw  // r4.y <- gout.shadowHomogeneous.z
                  dp4 r3.x, r3.xyzw, cb0[11].xyzw  // r3.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r1.w
                  mov o1.x, r2.x
                  mov o1.y, r2.y
                  mov o1.z, r2.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[2].xyxx
                  mov o4.x, r2.w
                  mov o4.y, r4.x
                  mov o4.z, r4.y
                  mov o4.w, r3.x
                  mov o5.x, vPrim
                  emit_stream m0
                
                #line 74
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[4].xyzw
                  dp4 r1.y, r0.xyzw, cb0[5].xyzw
                  dp4 r1.z, r0.xyzw, cb0[6].xyzw
                  dp4 r1.w, r0.xyzw, cb0[7].xyzw
                  dp4 r2.x, r0.xyzw, cb0[0].xyzw
                  dp4 r2.y, r0.xyzw, cb0[1].xyzw
                  dp4 r2.z, r0.xyzw, cb0[2].xyzw
                  dp4 r2.w, r0.xyzw, cb0[8].xyzw
                  dp4 r3.x, r0.xyzw, cb0[9].xyzw  // r3.x <- gout.shadowHomogeneous.y
                  dp4 r3.y, r0.xyzw, cb0[10].xyzw  // r3.y <- gout.shadowHomogeneous.z
                  dp4 r0.x, r0.xyzw, cb0[11].xyzw  // r0.x <- gout.shadowHomogeneous.w
                
                #line 81
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r1.w
                  mov o1.x, r2.x
                  mov o1.y, r2.y
                  mov o1.z, r2.z
                  mov o2.xyz, l(0,1.000000,0,0)
                  mov o3.xy, cb2[3].xyxx
                  mov o4.x, r2.w
                  mov o4.y, r3.x
                  mov o4.z, r3.y
                  mov o4.w, r0.x
                  mov o5.x, vPrim
                  emit_stream m0
                endif 
                ret 
                // Approximately 130 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float SpecularIntensity;       // Offset:   16
                //       float SpecularPower;           // Offset:   20
                //
                //   } gMaterial;                       // Offset:    0 Size:    24
                //   uint gTextureCount;                // Offset:   24 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerLinear                     sampler      NA          NA    0        1
                // gTextureArray                     texture  float4     2darray    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float     zw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // TEXCOORD                 1   xyzw        4     NONE   float   xyz 
                // SV_PrimitiveID           0   x           5   PRIMID    uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                // SV_TARGET                1   xyzw        1   TARGET   float   xyzw
                // SV_TARGET                2   xyzw        2   TARGET   float   xyzw
                // SV_TARGET                3   xyzw        3   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps_siv linear noperspective v0.zw, position
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyz
                dcl_input_ps_sgv v5.x, primitive_id
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.positionHomogeneous.x; v0.y <- input.positionHomogeneous.y; v0.z <- input.positionHomogeneous.z; v0.w <- input.positionHomogeneous.w; 
                //   v1.x <- input.positionWorld.x; v1.y <- input.positionWorld.y; v1.z <- input.positionWorld.z; 
                //   v2.x <- input.normalWorld.x; v2.y <- input.normalWorld.y; v2.z <- input.normalWorld.z; 
                //   v3.x <- input.tex.x; v3.y <- input.tex.y; 
                //   v4.x <- input.shadowHomogeneous.x; v4.y <- input.shadowHomogeneous.y; v4.z <- input.shadowHomogeneous.z; v4.w <- input.shadowHomogeneous.w; 
                //   v5.x <- input.primitiveID; 
                //   o3.x <- <PSDeferredBillboard return value>.shadow.x; o3.y <- <PSDeferredBillboard return value>.shadow.y; o3.z <- <PSDeferredBillboard return value>.shadow.z; o3.w <- <PSDeferredBillboard return value>.shadow.w; 
                //   o2.x <- <PSDeferredBillboard return value>.depth.x; o2.y <- <PSDeferredBillboard return value>.depth.y; o2.z <- <PSDeferredBillboard return value>.depth.z; o2.w <- <PSDeferredBillboard return value>.depth.w; 
                //   o1.x <- <PSDeferredBillboard return value>.normal.x; o1.y <- <PSDeferredBillboard return value>.normal.y; o1.z <- <PSDeferredBillboard return value>.normal.z; o1.w <- <PSDeferredBillboard return value>.normal.w; 
                //   o0.x <- <PSDeferredBillboard return value>.color.x; o0.y <- <PSDeferredBillboard return value>.color.y; o0.z <- <PSDeferredBillboard return value>.color.z; o0.w <- <PSDeferredBillboard return value>.color.w
                //
                #line 153 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                udiv null, r0.x, v5.x, cb1[1].z
                utof r0.z, r0.x  // r0.z <- uvw.z
                mov r0.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0  // r0.x <- textureColor.x; r0.y <- textureColor.y; r0.z <- textureColor.z; r0.w <- textureColor.w
                add r1.x, r0.w, l(-0.050000)
                
                #line 165
                mov o0.xyzw, r0.xyzw
                
                #line 155
                lt r0.x, r1.x, l(0.000000)
                discard_nz r0.x
                
                #line 165
                mov o1.xyz, v2.xyzx
                mov o1.w, cb1[1].y
                
                #line 161
                div o2.w, v0.z, v0.w
                
                #line 165
                mov o2.xyz, v1.xyzx
                mov o3.xyz, v4.xyzx
                mov o3.w, cb1[1].x
                ret 
                // Approximately 15 instruction slots used
                            
            };
        }

    }

    technique11 ShadowMapBillboard
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                //
                // Initial variable locations:
                //   v0.x <- input.positionWorld.x; v0.y <- input.positionWorld.y; v0.z <- input.positionWorld.z; 
                //   v1.x <- input.sizeWorld.x; v1.y <- input.sizeWorld.y; 
                //   o1.x <- <VSBillboard return value>.sizeWorld.x; o1.y <- <VSBillboard return value>.sizeWorld.y; 
                //   o0.x <- <VSBillboard return value>.centerWorld.x; o0.y <- <VSBillboard return value>.centerWorld.y; o0.z <- <VSBillboard return value>.centerWorld.z
                //
                #line 42 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                mad o0.y, -v1.y, l(0.100000), v0.y
                
                #line 45
                mov o0.xz, v0.xxzx
                mov o1.xy, v1.xyxx
                ret 
                // Approximately 4 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  128 Size:    64 [unused]
                //   float3 gEyePositionWorld;          // Offset:  192 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float3 Color;                  // Offset:  208
                //       float Ambient;                 // Offset:  220
                //       float Diffuse;                 // Offset:  224
                //       float3 Direction;              // Offset:  228
                //       float CastShadow;              // Offset:  240
                //       float Enabled;                 // Offset:  244
                //
                //   } gDirLights[3];                   // Offset:  208 Size:   136 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float3 Color;                  // Offset:  352
                //       float Ambient;                 // Offset:  364
                //       float Diffuse;                 // Offset:  368
                //       float3 Position;               // Offset:  372
                //       float Radius;                  // Offset:  384
                //       float CastShadow;              // Offset:  388
                //       float Enabled;                 // Offset:  392
                //
                //   } gPointLights[4];                 // Offset:  352 Size:   188 [unused]
                //   
                //   struct SpotLight
                //   {
                //       
                //       float3 Color;                  // Offset:  544
                //       float Ambient;                 // Offset:  556
                //       float Diffuse;                 // Offset:  560
                //       float3 Position;               // Offset:  564
                //       float3 Direction;              // Offset:  576
                //       float Angle;                   // Offset:  588
                //       float Radius;                  // Offset:  592
                //       float CastShadow;              // Offset:  596
                //       float Enabled;                 // Offset:  600
                //
                //   } gSpotLights[4];                  // Offset:  544 Size:   252 [unused]
                //   float gFogStart;                   // Offset:  796 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  800 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  816 Size:    16 [unused]
                //   float gRadius;                     // Offset:  832 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint     NO
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[53], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 5
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- outputStream; 
                //   v[0][0].x <- input[0].centerWorld.x; v[0][0].y <- input[0].centerWorld.y; v[0][0].z <- input[0].centerWorld.z; 
                //   v[0][1].x <- input[0].sizeWorld.x; v[0][1].y <- input[0].sizeWorld.y
                //
                #line 88 "C:\Users\Selinux\Documents\GitHub\SharpDX-Tests\Engine\Resources\ShaderBillboard.fx"
                add r0.xyz, cb0[12].xyzx, -v[0][0].xyzx  // r0.x <- look.x; r0.y <- look.y; r0.z <- look.z
                eq r0.w, cb0[52].x, l(0.000000)
                dp3 r0.y, r0.xyzx, r0.xyzx
                sqrt r0.y, r0.y
                lt r0.y, r0.y, cb0[52].x
                or r0.y, r0.y, r0.w
                if_nz r0.y
                
                #line 93
                  dp2 r0.y, r0.xzxx, r0.xzxx
                  rsq r1.x, r0.y
                  mul r1.yz, r0.zzxz, r1.xxxx  // r1.y <- look.z; r1.z <- look.x
                  mul r0.xy, r1.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000)
                  mov r0.z, l(0)
                  mad r0.xyz, -r1.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000), r0.xyzx  // r0.x <- right.x; r0.y <- right.y; r0.z <- right.z
                
                #line 101
                  mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                  mad r1.xyz, r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r2.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r1.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
                  mad r0.xyz, -r0.wwww, r0.xyzx, v[0][0].xyzx
                  mad r3.xyz, -v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                  mad r0.xyz, v[0][1].yyyy, l(0.000000, 0.500000, 0.000000, 0.000000), r0.xyzx
                
                #line 111
                  mov r2.w, l(1.000000)
                  dp4 r4.x, r2.xyzw, cb0[4].xyzw  // r4.x <- gout.positionHomogeneous.x
                  dp4 r4.y, r2.xyzw, cb0[5].xyzw  // r4.y <- gout.positionHomogeneous.y
                  dp4 r4.z, r2.xyzw, cb0[6].xyzw  // r4.z <- gout.positionHomogeneous.z
                  dp4 r2.x, r2.xyzw, cb0[7].xyzw  // r2.x <- gout.positionHomogeneous.w
                  mov o0.x, r4.x
                  mov o0.y, r4.y
                  mov o0.z, r4.z
                  mov o0.w, r2.x
                  emit_stream m0
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[4].xyzw  // r2.x <- gout.positionHomogeneous.x
                  dp4 r2.y, r1.xyzw, cb0[5].xyzw  // r2.y <- gout.positionHomogeneous.y
                  dp4 r2.z, r1.xyzw, cb0[6].xyzw  // r2.z <- gout.positionHomogeneous.z
                  dp4 r1.x, r1.xyzw, cb0[7].xyzw  // r1.x <- gout.positionHomogeneous.w
                  mov o0.x, r2.x
                  mov o0.y, r2.y
                  mov o0.z, r2.z
                  mov o0.w, r1.x
                  emit_stream m0
                  mov r3.w, l(1.000000)
                  dp4 r1.x, r3.xyzw, cb0[4].xyzw  // r1.x <- gout.positionHomogeneous.x
                  dp4 r1.y, r3.xyzw, cb0[5].xyzw  // r1.y <- gout.positionHomogeneous.y
                  dp4 r1.z, r3.xyzw, cb0[6].xyzw  // r1.z <- gout.positionHomogeneous.z
                  dp4 r1.w, r3.xyzw, cb0[7].xyzw  // r1.w <- gout.positionHomogeneous.w
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r1.w
                  emit_stream m0
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[4].xyzw
                  dp4 r1.y, r0.xyzw, cb0[5].xyzw
                  dp4 r1.z, r0.xyzw, cb0[6].xyzw
                  dp4 r0.x, r0.xyzw, cb0[7].xyzw  // r0.x <- gout.positionHomogeneous.w
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r1.z
                  mov o0.w, r0.x
                  emit_stream m0
                endif 
                ret 
                // Approximately 62 instruction slots used
                            
            };
            PixelShader = NULL;
        }

    }

}

